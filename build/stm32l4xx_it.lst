ARM GAS  /tmp/ccDDUowp.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32l4xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NMI_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	NMI_Handler
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	NMI_Handler:
  27              	.LFB130:
  28              		.file 1 "Src/stm32l4xx_it.c"
   1:Src/stm32l4xx_it.c **** /* USER CODE BEGIN Header */
   2:Src/stm32l4xx_it.c **** /**
   3:Src/stm32l4xx_it.c ****   ******************************************************************************
   4:Src/stm32l4xx_it.c ****   * @file    stm32l4xx_it.c
   5:Src/stm32l4xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Src/stm32l4xx_it.c ****   ******************************************************************************
   7:Src/stm32l4xx_it.c ****   * @attention
   8:Src/stm32l4xx_it.c ****   *
   9:Src/stm32l4xx_it.c ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Src/stm32l4xx_it.c ****   * All rights reserved.</center></h2>
  11:Src/stm32l4xx_it.c ****   *
  12:Src/stm32l4xx_it.c ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Src/stm32l4xx_it.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Src/stm32l4xx_it.c ****   * the License. You may obtain a copy of the License at:
  15:Src/stm32l4xx_it.c ****   *                             www.st.com/SLA0044
  16:Src/stm32l4xx_it.c ****   *
  17:Src/stm32l4xx_it.c ****   ******************************************************************************
  18:Src/stm32l4xx_it.c ****   */
  19:Src/stm32l4xx_it.c **** /* USER CODE END Header */
  20:Src/stm32l4xx_it.c **** 
  21:Src/stm32l4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:Src/stm32l4xx_it.c **** #include "main.h"
  23:Src/stm32l4xx_it.c **** #include "stm32l4xx_it.h"
  24:Src/stm32l4xx_it.c **** /* Private includes ----------------------------------------------------------*/
  25:Src/stm32l4xx_it.c **** /* USER CODE BEGIN Includes */
  26:Src/stm32l4xx_it.c **** /* USER CODE END Includes */
  27:Src/stm32l4xx_it.c **** 
  28:Src/stm32l4xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  29:Src/stm32l4xx_it.c **** /* USER CODE BEGIN TD */
  30:Src/stm32l4xx_it.c **** 
ARM GAS  /tmp/ccDDUowp.s 			page 2


  31:Src/stm32l4xx_it.c **** /* USER CODE END TD */
  32:Src/stm32l4xx_it.c **** 
  33:Src/stm32l4xx_it.c **** /* Private define ------------------------------------------------------------*/
  34:Src/stm32l4xx_it.c **** /* USER CODE BEGIN PD */
  35:Src/stm32l4xx_it.c ****  
  36:Src/stm32l4xx_it.c **** /* USER CODE END PD */
  37:Src/stm32l4xx_it.c **** 
  38:Src/stm32l4xx_it.c **** /* Private macro -------------------------------------------------------------*/
  39:Src/stm32l4xx_it.c **** /* USER CODE BEGIN PM */
  40:Src/stm32l4xx_it.c **** 
  41:Src/stm32l4xx_it.c **** /* USER CODE END PM */
  42:Src/stm32l4xx_it.c **** 
  43:Src/stm32l4xx_it.c **** /* Private variables ---------------------------------------------------------*/
  44:Src/stm32l4xx_it.c **** /* USER CODE BEGIN PV */
  45:Src/stm32l4xx_it.c **** 
  46:Src/stm32l4xx_it.c **** /* USER CODE END PV */
  47:Src/stm32l4xx_it.c **** 
  48:Src/stm32l4xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  49:Src/stm32l4xx_it.c **** /* USER CODE BEGIN PFP */
  50:Src/stm32l4xx_it.c **** 
  51:Src/stm32l4xx_it.c **** /* USER CODE END PFP */
  52:Src/stm32l4xx_it.c **** 
  53:Src/stm32l4xx_it.c **** /* Private user code ---------------------------------------------------------*/
  54:Src/stm32l4xx_it.c **** /* USER CODE BEGIN 0 */
  55:Src/stm32l4xx_it.c **** 
  56:Src/stm32l4xx_it.c **** /* USER CODE END 0 */
  57:Src/stm32l4xx_it.c **** 
  58:Src/stm32l4xx_it.c **** /* External variables --------------------------------------------------------*/
  59:Src/stm32l4xx_it.c **** extern PCD_HandleTypeDef hpcd_USB_FS;
  60:Src/stm32l4xx_it.c **** extern TIM_HandleTypeDef htim2;
  61:Src/stm32l4xx_it.c **** /* USER CODE BEGIN EV */
  62:Src/stm32l4xx_it.c **** 
  63:Src/stm32l4xx_it.c **** /* USER CODE END EV */
  64:Src/stm32l4xx_it.c **** 
  65:Src/stm32l4xx_it.c **** /******************************************************************************/
  66:Src/stm32l4xx_it.c **** /*           Cortex-M4 Processor Interruption and Exception Handlers          */ 
  67:Src/stm32l4xx_it.c **** /******************************************************************************/
  68:Src/stm32l4xx_it.c **** /**
  69:Src/stm32l4xx_it.c ****   * @brief This function handles Non maskable interrupt.
  70:Src/stm32l4xx_it.c ****   */
  71:Src/stm32l4xx_it.c **** void NMI_Handler(void)
  72:Src/stm32l4xx_it.c **** {
  29              		.loc 1 72 1
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34 0000 80B4     		push	{r7}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 4
  37              		.cfi_offset 7, -4
  38 0002 00AF     		add	r7, sp, #0
  39              	.LCFI1:
  40              		.cfi_def_cfa_register 7
  73:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  74:Src/stm32l4xx_it.c **** 
  75:Src/stm32l4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
ARM GAS  /tmp/ccDDUowp.s 			page 3


  76:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  77:Src/stm32l4xx_it.c **** 
  78:Src/stm32l4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  79:Src/stm32l4xx_it.c **** }
  41              		.loc 1 79 1
  42 0004 00BF     		nop
  43 0006 BD46     		mov	sp, r7
  44              	.LCFI2:
  45              		.cfi_def_cfa_register 13
  46              		@ sp needed
  47 0008 5DF8047B 		ldr	r7, [sp], #4
  48              	.LCFI3:
  49              		.cfi_restore 7
  50              		.cfi_def_cfa_offset 0
  51 000c 7047     		bx	lr
  52              		.cfi_endproc
  53              	.LFE130:
  55              		.section	.text.HardFault_Handler,"ax",%progbits
  56              		.align	1
  57              		.global	HardFault_Handler
  58              		.syntax unified
  59              		.thumb
  60              		.thumb_func
  61              		.fpu fpv4-sp-d16
  63              	HardFault_Handler:
  64              	.LFB131:
  80:Src/stm32l4xx_it.c **** 
  81:Src/stm32l4xx_it.c **** /**
  82:Src/stm32l4xx_it.c ****   * @brief This function handles Hard fault interrupt.
  83:Src/stm32l4xx_it.c ****   */
  84:Src/stm32l4xx_it.c **** void HardFault_Handler(void)
  85:Src/stm32l4xx_it.c **** {
  65              		.loc 1 85 1
  66              		.cfi_startproc
  67              		@ args = 0, pretend = 0, frame = 0
  68              		@ frame_needed = 1, uses_anonymous_args = 0
  69              		@ link register save eliminated.
  70 0000 80B4     		push	{r7}
  71              	.LCFI4:
  72              		.cfi_def_cfa_offset 4
  73              		.cfi_offset 7, -4
  74 0002 00AF     		add	r7, sp, #0
  75              	.LCFI5:
  76              		.cfi_def_cfa_register 7
  77              	.L3:
  86:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  87:Src/stm32l4xx_it.c **** 
  88:Src/stm32l4xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  89:Src/stm32l4xx_it.c ****   while (1)
  78              		.loc 1 89 9 discriminator 1
  79 0004 FEE7     		b	.L3
  80              		.cfi_endproc
  81              	.LFE131:
  83              		.section	.text.MemManage_Handler,"ax",%progbits
  84              		.align	1
  85              		.global	MemManage_Handler
  86              		.syntax unified
ARM GAS  /tmp/ccDDUowp.s 			page 4


  87              		.thumb
  88              		.thumb_func
  89              		.fpu fpv4-sp-d16
  91              	MemManage_Handler:
  92              	.LFB132:
  90:Src/stm32l4xx_it.c ****   {
  91:Src/stm32l4xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  92:Src/stm32l4xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  93:Src/stm32l4xx_it.c ****   }
  94:Src/stm32l4xx_it.c **** }
  95:Src/stm32l4xx_it.c **** 
  96:Src/stm32l4xx_it.c **** /**
  97:Src/stm32l4xx_it.c ****   * @brief This function handles Memory management fault.
  98:Src/stm32l4xx_it.c ****   */
  99:Src/stm32l4xx_it.c **** void MemManage_Handler(void)
 100:Src/stm32l4xx_it.c **** {
  93              		.loc 1 100 1
  94              		.cfi_startproc
  95              		@ args = 0, pretend = 0, frame = 0
  96              		@ frame_needed = 1, uses_anonymous_args = 0
  97              		@ link register save eliminated.
  98 0000 80B4     		push	{r7}
  99              	.LCFI6:
 100              		.cfi_def_cfa_offset 4
 101              		.cfi_offset 7, -4
 102 0002 00AF     		add	r7, sp, #0
 103              	.LCFI7:
 104              		.cfi_def_cfa_register 7
 105              	.L5:
 101:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 102:Src/stm32l4xx_it.c **** 
 103:Src/stm32l4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 104:Src/stm32l4xx_it.c ****   while (1)
 106              		.loc 1 104 9 discriminator 1
 107 0004 FEE7     		b	.L5
 108              		.cfi_endproc
 109              	.LFE132:
 111              		.section	.text.BusFault_Handler,"ax",%progbits
 112              		.align	1
 113              		.global	BusFault_Handler
 114              		.syntax unified
 115              		.thumb
 116              		.thumb_func
 117              		.fpu fpv4-sp-d16
 119              	BusFault_Handler:
 120              	.LFB133:
 105:Src/stm32l4xx_it.c ****   {
 106:Src/stm32l4xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 107:Src/stm32l4xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 108:Src/stm32l4xx_it.c ****   }
 109:Src/stm32l4xx_it.c **** }
 110:Src/stm32l4xx_it.c **** 
 111:Src/stm32l4xx_it.c **** /**
 112:Src/stm32l4xx_it.c ****   * @brief This function handles Prefetch fault, memory access fault.
 113:Src/stm32l4xx_it.c ****   */
 114:Src/stm32l4xx_it.c **** void BusFault_Handler(void)
 115:Src/stm32l4xx_it.c **** {
ARM GAS  /tmp/ccDDUowp.s 			page 5


 121              		.loc 1 115 1
 122              		.cfi_startproc
 123              		@ args = 0, pretend = 0, frame = 0
 124              		@ frame_needed = 1, uses_anonymous_args = 0
 125              		@ link register save eliminated.
 126 0000 80B4     		push	{r7}
 127              	.LCFI8:
 128              		.cfi_def_cfa_offset 4
 129              		.cfi_offset 7, -4
 130 0002 00AF     		add	r7, sp, #0
 131              	.LCFI9:
 132              		.cfi_def_cfa_register 7
 133              	.L7:
 116:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 117:Src/stm32l4xx_it.c **** 
 118:Src/stm32l4xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 119:Src/stm32l4xx_it.c ****   while (1)
 134              		.loc 1 119 9 discriminator 1
 135 0004 FEE7     		b	.L7
 136              		.cfi_endproc
 137              	.LFE133:
 139              		.section	.text.UsageFault_Handler,"ax",%progbits
 140              		.align	1
 141              		.global	UsageFault_Handler
 142              		.syntax unified
 143              		.thumb
 144              		.thumb_func
 145              		.fpu fpv4-sp-d16
 147              	UsageFault_Handler:
 148              	.LFB134:
 120:Src/stm32l4xx_it.c ****   {
 121:Src/stm32l4xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 122:Src/stm32l4xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 123:Src/stm32l4xx_it.c ****   }
 124:Src/stm32l4xx_it.c **** }
 125:Src/stm32l4xx_it.c **** 
 126:Src/stm32l4xx_it.c **** /**
 127:Src/stm32l4xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 128:Src/stm32l4xx_it.c ****   */
 129:Src/stm32l4xx_it.c **** void UsageFault_Handler(void)
 130:Src/stm32l4xx_it.c **** {
 149              		.loc 1 130 1
 150              		.cfi_startproc
 151              		@ args = 0, pretend = 0, frame = 0
 152              		@ frame_needed = 1, uses_anonymous_args = 0
 153              		@ link register save eliminated.
 154 0000 80B4     		push	{r7}
 155              	.LCFI10:
 156              		.cfi_def_cfa_offset 4
 157              		.cfi_offset 7, -4
 158 0002 00AF     		add	r7, sp, #0
 159              	.LCFI11:
 160              		.cfi_def_cfa_register 7
 161              	.L9:
 131:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 132:Src/stm32l4xx_it.c **** 
 133:Src/stm32l4xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
ARM GAS  /tmp/ccDDUowp.s 			page 6


 134:Src/stm32l4xx_it.c ****   while (1)
 162              		.loc 1 134 9 discriminator 1
 163 0004 FEE7     		b	.L9
 164              		.cfi_endproc
 165              	.LFE134:
 167              		.section	.text.SVC_Handler,"ax",%progbits
 168              		.align	1
 169              		.global	SVC_Handler
 170              		.syntax unified
 171              		.thumb
 172              		.thumb_func
 173              		.fpu fpv4-sp-d16
 175              	SVC_Handler:
 176              	.LFB135:
 135:Src/stm32l4xx_it.c ****   {
 136:Src/stm32l4xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 137:Src/stm32l4xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 138:Src/stm32l4xx_it.c ****   }
 139:Src/stm32l4xx_it.c **** }
 140:Src/stm32l4xx_it.c **** 
 141:Src/stm32l4xx_it.c **** /**
 142:Src/stm32l4xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 143:Src/stm32l4xx_it.c ****   */
 144:Src/stm32l4xx_it.c **** void SVC_Handler(void)
 145:Src/stm32l4xx_it.c **** {
 177              		.loc 1 145 1
 178              		.cfi_startproc
 179              		@ args = 0, pretend = 0, frame = 0
 180              		@ frame_needed = 1, uses_anonymous_args = 0
 181              		@ link register save eliminated.
 182 0000 80B4     		push	{r7}
 183              	.LCFI12:
 184              		.cfi_def_cfa_offset 4
 185              		.cfi_offset 7, -4
 186 0002 00AF     		add	r7, sp, #0
 187              	.LCFI13:
 188              		.cfi_def_cfa_register 7
 146:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 147:Src/stm32l4xx_it.c **** 
 148:Src/stm32l4xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 149:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 150:Src/stm32l4xx_it.c **** 
 151:Src/stm32l4xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 152:Src/stm32l4xx_it.c **** }
 189              		.loc 1 152 1
 190 0004 00BF     		nop
 191 0006 BD46     		mov	sp, r7
 192              	.LCFI14:
 193              		.cfi_def_cfa_register 13
 194              		@ sp needed
 195 0008 5DF8047B 		ldr	r7, [sp], #4
 196              	.LCFI15:
 197              		.cfi_restore 7
 198              		.cfi_def_cfa_offset 0
 199 000c 7047     		bx	lr
 200              		.cfi_endproc
 201              	.LFE135:
ARM GAS  /tmp/ccDDUowp.s 			page 7


 203              		.section	.text.DebugMon_Handler,"ax",%progbits
 204              		.align	1
 205              		.global	DebugMon_Handler
 206              		.syntax unified
 207              		.thumb
 208              		.thumb_func
 209              		.fpu fpv4-sp-d16
 211              	DebugMon_Handler:
 212              	.LFB136:
 153:Src/stm32l4xx_it.c **** 
 154:Src/stm32l4xx_it.c **** /**
 155:Src/stm32l4xx_it.c ****   * @brief This function handles Debug monitor.
 156:Src/stm32l4xx_it.c ****   */
 157:Src/stm32l4xx_it.c **** void DebugMon_Handler(void)
 158:Src/stm32l4xx_it.c **** {
 213              		.loc 1 158 1
 214              		.cfi_startproc
 215              		@ args = 0, pretend = 0, frame = 0
 216              		@ frame_needed = 1, uses_anonymous_args = 0
 217              		@ link register save eliminated.
 218 0000 80B4     		push	{r7}
 219              	.LCFI16:
 220              		.cfi_def_cfa_offset 4
 221              		.cfi_offset 7, -4
 222 0002 00AF     		add	r7, sp, #0
 223              	.LCFI17:
 224              		.cfi_def_cfa_register 7
 159:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 160:Src/stm32l4xx_it.c **** 
 161:Src/stm32l4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 162:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 163:Src/stm32l4xx_it.c **** 
 164:Src/stm32l4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 165:Src/stm32l4xx_it.c **** }
 225              		.loc 1 165 1
 226 0004 00BF     		nop
 227 0006 BD46     		mov	sp, r7
 228              	.LCFI18:
 229              		.cfi_def_cfa_register 13
 230              		@ sp needed
 231 0008 5DF8047B 		ldr	r7, [sp], #4
 232              	.LCFI19:
 233              		.cfi_restore 7
 234              		.cfi_def_cfa_offset 0
 235 000c 7047     		bx	lr
 236              		.cfi_endproc
 237              	.LFE136:
 239              		.section	.text.PendSV_Handler,"ax",%progbits
 240              		.align	1
 241              		.global	PendSV_Handler
 242              		.syntax unified
 243              		.thumb
 244              		.thumb_func
 245              		.fpu fpv4-sp-d16
 247              	PendSV_Handler:
 248              	.LFB137:
 166:Src/stm32l4xx_it.c **** 
ARM GAS  /tmp/ccDDUowp.s 			page 8


 167:Src/stm32l4xx_it.c **** /**
 168:Src/stm32l4xx_it.c ****   * @brief This function handles Pendable request for system service.
 169:Src/stm32l4xx_it.c ****   */
 170:Src/stm32l4xx_it.c **** void PendSV_Handler(void)
 171:Src/stm32l4xx_it.c **** {
 249              		.loc 1 171 1
 250              		.cfi_startproc
 251              		@ args = 0, pretend = 0, frame = 0
 252              		@ frame_needed = 1, uses_anonymous_args = 0
 253              		@ link register save eliminated.
 254 0000 80B4     		push	{r7}
 255              	.LCFI20:
 256              		.cfi_def_cfa_offset 4
 257              		.cfi_offset 7, -4
 258 0002 00AF     		add	r7, sp, #0
 259              	.LCFI21:
 260              		.cfi_def_cfa_register 7
 172:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 173:Src/stm32l4xx_it.c **** 
 174:Src/stm32l4xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 175:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 176:Src/stm32l4xx_it.c **** 
 177:Src/stm32l4xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 178:Src/stm32l4xx_it.c **** }
 261              		.loc 1 178 1
 262 0004 00BF     		nop
 263 0006 BD46     		mov	sp, r7
 264              	.LCFI22:
 265              		.cfi_def_cfa_register 13
 266              		@ sp needed
 267 0008 5DF8047B 		ldr	r7, [sp], #4
 268              	.LCFI23:
 269              		.cfi_restore 7
 270              		.cfi_def_cfa_offset 0
 271 000c 7047     		bx	lr
 272              		.cfi_endproc
 273              	.LFE137:
 275              		.section	.text.SysTick_Handler,"ax",%progbits
 276              		.align	1
 277              		.global	SysTick_Handler
 278              		.syntax unified
 279              		.thumb
 280              		.thumb_func
 281              		.fpu fpv4-sp-d16
 283              	SysTick_Handler:
 284              	.LFB138:
 179:Src/stm32l4xx_it.c **** 
 180:Src/stm32l4xx_it.c **** /**
 181:Src/stm32l4xx_it.c ****   * @brief This function handles System tick timer.
 182:Src/stm32l4xx_it.c ****   */
 183:Src/stm32l4xx_it.c **** void SysTick_Handler(void)
 184:Src/stm32l4xx_it.c **** {
 285              		.loc 1 184 1
 286              		.cfi_startproc
 287              		@ args = 0, pretend = 0, frame = 0
 288              		@ frame_needed = 1, uses_anonymous_args = 0
 289 0000 80B5     		push	{r7, lr}
ARM GAS  /tmp/ccDDUowp.s 			page 9


 290              	.LCFI24:
 291              		.cfi_def_cfa_offset 8
 292              		.cfi_offset 7, -8
 293              		.cfi_offset 14, -4
 294 0002 00AF     		add	r7, sp, #0
 295              	.LCFI25:
 296              		.cfi_def_cfa_register 7
 185:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 186:Src/stm32l4xx_it.c **** 
 187:Src/stm32l4xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 188:Src/stm32l4xx_it.c ****   HAL_IncTick();
 297              		.loc 1 188 3
 298 0004 FFF7FEFF 		bl	HAL_IncTick
 189:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 190:Src/stm32l4xx_it.c **** 
 191:Src/stm32l4xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 192:Src/stm32l4xx_it.c **** }
 299              		.loc 1 192 1
 300 0008 00BF     		nop
 301 000a 80BD     		pop	{r7, pc}
 302              		.cfi_endproc
 303              	.LFE138:
 305              		.section	.text.EXTI2_IRQHandler,"ax",%progbits
 306              		.align	1
 307              		.global	EXTI2_IRQHandler
 308              		.syntax unified
 309              		.thumb
 310              		.thumb_func
 311              		.fpu fpv4-sp-d16
 313              	EXTI2_IRQHandler:
 314              	.LFB139:
 193:Src/stm32l4xx_it.c **** 
 194:Src/stm32l4xx_it.c **** /******************************************************************************/
 195:Src/stm32l4xx_it.c **** /* STM32L4xx Peripheral Interrupt Handlers                                    */
 196:Src/stm32l4xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 197:Src/stm32l4xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 198:Src/stm32l4xx_it.c **** /* please refer to the startup file (startup_stm32l4xx.s).                    */
 199:Src/stm32l4xx_it.c **** /******************************************************************************/
 200:Src/stm32l4xx_it.c **** 
 201:Src/stm32l4xx_it.c **** /**
 202:Src/stm32l4xx_it.c ****   * @brief This function handles EXTI line2 interrupt.
 203:Src/stm32l4xx_it.c ****   */
 204:Src/stm32l4xx_it.c **** void EXTI2_IRQHandler(void)
 205:Src/stm32l4xx_it.c **** {
 315              		.loc 1 205 1
 316              		.cfi_startproc
 317              		@ args = 0, pretend = 0, frame = 0
 318              		@ frame_needed = 1, uses_anonymous_args = 0
 319 0000 80B5     		push	{r7, lr}
 320              	.LCFI26:
 321              		.cfi_def_cfa_offset 8
 322              		.cfi_offset 7, -8
 323              		.cfi_offset 14, -4
 324 0002 00AF     		add	r7, sp, #0
 325              	.LCFI27:
 326              		.cfi_def_cfa_register 7
 206:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN EXTI2_IRQn 0 */
ARM GAS  /tmp/ccDDUowp.s 			page 10


 207:Src/stm32l4xx_it.c **** 	//HAL_NVIC_DisableIRQ (EXTI2_IRQn);
 208:Src/stm32l4xx_it.c ****   /* USER CODE END EXTI2_IRQn 0 */
 209:Src/stm32l4xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_2);
 327              		.loc 1 209 3
 328 0004 0420     		movs	r0, #4
 329 0006 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 210:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN EXTI2_IRQn 1 */
 211:Src/stm32l4xx_it.c ****   //HAL_NVIC_ClearPendingIRQ (EXTI2_IRQn);
 212:Src/stm32l4xx_it.c **** 	//HAL_NVIC_EnableIRQ(EXTI2_IRQn);
 213:Src/stm32l4xx_it.c ****   /* USER CODE END EXTI2_IRQn 1 */
 214:Src/stm32l4xx_it.c **** }
 330              		.loc 1 214 1
 331 000a 00BF     		nop
 332 000c 80BD     		pop	{r7, pc}
 333              		.cfi_endproc
 334              	.LFE139:
 336              		.section	.text.EXTI4_IRQHandler,"ax",%progbits
 337              		.align	1
 338              		.global	EXTI4_IRQHandler
 339              		.syntax unified
 340              		.thumb
 341              		.thumb_func
 342              		.fpu fpv4-sp-d16
 344              	EXTI4_IRQHandler:
 345              	.LFB140:
 215:Src/stm32l4xx_it.c **** 
 216:Src/stm32l4xx_it.c **** /**
 217:Src/stm32l4xx_it.c ****   * @brief This function handles EXTI line4 interrupt.
 218:Src/stm32l4xx_it.c ****   */
 219:Src/stm32l4xx_it.c **** void EXTI4_IRQHandler(void)
 220:Src/stm32l4xx_it.c **** {
 346              		.loc 1 220 1
 347              		.cfi_startproc
 348              		@ args = 0, pretend = 0, frame = 0
 349              		@ frame_needed = 1, uses_anonymous_args = 0
 350 0000 80B5     		push	{r7, lr}
 351              	.LCFI28:
 352              		.cfi_def_cfa_offset 8
 353              		.cfi_offset 7, -8
 354              		.cfi_offset 14, -4
 355 0002 00AF     		add	r7, sp, #0
 356              	.LCFI29:
 357              		.cfi_def_cfa_register 7
 221:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN EXTI4_IRQn 0 */
 222:Src/stm32l4xx_it.c **** 
 223:Src/stm32l4xx_it.c ****   /* USER CODE END EXTI4_IRQn 0 */
 224:Src/stm32l4xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_4);
 358              		.loc 1 224 3
 359 0004 1020     		movs	r0, #16
 360 0006 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 225:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN EXTI4_IRQn 1 */
 226:Src/stm32l4xx_it.c **** 
 227:Src/stm32l4xx_it.c ****   /* USER CODE END EXTI4_IRQn 1 */
 228:Src/stm32l4xx_it.c **** }
 361              		.loc 1 228 1
 362 000a 00BF     		nop
 363 000c 80BD     		pop	{r7, pc}
ARM GAS  /tmp/ccDDUowp.s 			page 11


 364              		.cfi_endproc
 365              	.LFE140:
 367              		.section	.text.TIM2_IRQHandler,"ax",%progbits
 368              		.align	1
 369              		.global	TIM2_IRQHandler
 370              		.syntax unified
 371              		.thumb
 372              		.thumb_func
 373              		.fpu fpv4-sp-d16
 375              	TIM2_IRQHandler:
 376              	.LFB141:
 229:Src/stm32l4xx_it.c **** 
 230:Src/stm32l4xx_it.c **** /**
 231:Src/stm32l4xx_it.c ****   * @brief This function handles TIM2 global interrupt.
 232:Src/stm32l4xx_it.c ****   */
 233:Src/stm32l4xx_it.c **** void TIM2_IRQHandler(void)
 234:Src/stm32l4xx_it.c **** {
 377              		.loc 1 234 1
 378              		.cfi_startproc
 379              		@ args = 0, pretend = 0, frame = 0
 380              		@ frame_needed = 1, uses_anonymous_args = 0
 381 0000 80B5     		push	{r7, lr}
 382              	.LCFI30:
 383              		.cfi_def_cfa_offset 8
 384              		.cfi_offset 7, -8
 385              		.cfi_offset 14, -4
 386 0002 00AF     		add	r7, sp, #0
 387              	.LCFI31:
 388              		.cfi_def_cfa_register 7
 235:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN TIM2_IRQn 0 */
 236:Src/stm32l4xx_it.c **** 
 237:Src/stm32l4xx_it.c ****   /* USER CODE END TIM2_IRQn 0 */
 238:Src/stm32l4xx_it.c ****   HAL_TIM_IRQHandler(&htim2);
 389              		.loc 1 238 3
 390 0004 0248     		ldr	r0, .L17
 391 0006 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 239:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN TIM2_IRQn 1 */
 240:Src/stm32l4xx_it.c **** 
 241:Src/stm32l4xx_it.c ****   /* USER CODE END TIM2_IRQn 1 */
 242:Src/stm32l4xx_it.c **** }
 392              		.loc 1 242 1
 393 000a 00BF     		nop
 394 000c 80BD     		pop	{r7, pc}
 395              	.L18:
 396 000e 00BF     		.align	2
 397              	.L17:
 398 0010 00000000 		.word	htim2
 399              		.cfi_endproc
 400              	.LFE141:
 402              		.section	.text.USB_IRQHandler,"ax",%progbits
 403              		.align	1
 404              		.global	USB_IRQHandler
 405              		.syntax unified
 406              		.thumb
 407              		.thumb_func
 408              		.fpu fpv4-sp-d16
 410              	USB_IRQHandler:
ARM GAS  /tmp/ccDDUowp.s 			page 12


 411              	.LFB142:
 243:Src/stm32l4xx_it.c **** 
 244:Src/stm32l4xx_it.c **** /**
 245:Src/stm32l4xx_it.c ****   * @brief This function handles USB event interrupt through EXTI line 17.
 246:Src/stm32l4xx_it.c ****   */
 247:Src/stm32l4xx_it.c **** void USB_IRQHandler(void)
 248:Src/stm32l4xx_it.c **** {
 412              		.loc 1 248 1
 413              		.cfi_startproc
 414              		@ args = 0, pretend = 0, frame = 0
 415              		@ frame_needed = 1, uses_anonymous_args = 0
 416 0000 80B5     		push	{r7, lr}
 417              	.LCFI32:
 418              		.cfi_def_cfa_offset 8
 419              		.cfi_offset 7, -8
 420              		.cfi_offset 14, -4
 421 0002 00AF     		add	r7, sp, #0
 422              	.LCFI33:
 423              		.cfi_def_cfa_register 7
 249:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN USB_IRQn 0 */
 250:Src/stm32l4xx_it.c **** 
 251:Src/stm32l4xx_it.c ****   /* USER CODE END USB_IRQn 0 */
 252:Src/stm32l4xx_it.c ****   HAL_PCD_IRQHandler(&hpcd_USB_FS);
 424              		.loc 1 252 3
 425 0004 0248     		ldr	r0, .L20
 426 0006 FFF7FEFF 		bl	HAL_PCD_IRQHandler
 253:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN USB_IRQn 1 */
 254:Src/stm32l4xx_it.c **** 
 255:Src/stm32l4xx_it.c ****   /* USER CODE END USB_IRQn 1 */
 256:Src/stm32l4xx_it.c **** }
 427              		.loc 1 256 1
 428 000a 00BF     		nop
 429 000c 80BD     		pop	{r7, pc}
 430              	.L21:
 431 000e 00BF     		.align	2
 432              	.L20:
 433 0010 00000000 		.word	hpcd_USB_FS
 434              		.cfi_endproc
 435              	.LFE142:
 437              		.text
 438              	.Letext0:
 439              		.file 2 "/home/ilian/opt/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/include/machine/_default
 440              		.file 3 "/home/ilian/opt/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/include/sys/_stdint.h"
 441              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 442              		.file 5 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/system_stm32l4xx.h"
 443              		.file 6 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l433xx.h"
 444              		.file 7 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 445              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 446              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_flash.h"
 447              		.file 10 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_tim.h"
 448              		.file 11 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usb.h"
 449              		.file 12 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_pcd.h"
 450              		.file 13 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
ARM GAS  /tmp/ccDDUowp.s 			page 13


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32l4xx_it.c
     /tmp/ccDDUowp.s:18     .text.NMI_Handler:0000000000000000 $t
     /tmp/ccDDUowp.s:26     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/ccDDUowp.s:56     .text.HardFault_Handler:0000000000000000 $t
     /tmp/ccDDUowp.s:63     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/ccDDUowp.s:84     .text.MemManage_Handler:0000000000000000 $t
     /tmp/ccDDUowp.s:91     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/ccDDUowp.s:112    .text.BusFault_Handler:0000000000000000 $t
     /tmp/ccDDUowp.s:119    .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/ccDDUowp.s:140    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/ccDDUowp.s:147    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/ccDDUowp.s:168    .text.SVC_Handler:0000000000000000 $t
     /tmp/ccDDUowp.s:175    .text.SVC_Handler:0000000000000000 SVC_Handler
     /tmp/ccDDUowp.s:204    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/ccDDUowp.s:211    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/ccDDUowp.s:240    .text.PendSV_Handler:0000000000000000 $t
     /tmp/ccDDUowp.s:247    .text.PendSV_Handler:0000000000000000 PendSV_Handler
     /tmp/ccDDUowp.s:276    .text.SysTick_Handler:0000000000000000 $t
     /tmp/ccDDUowp.s:283    .text.SysTick_Handler:0000000000000000 SysTick_Handler
     /tmp/ccDDUowp.s:306    .text.EXTI2_IRQHandler:0000000000000000 $t
     /tmp/ccDDUowp.s:313    .text.EXTI2_IRQHandler:0000000000000000 EXTI2_IRQHandler
     /tmp/ccDDUowp.s:337    .text.EXTI4_IRQHandler:0000000000000000 $t
     /tmp/ccDDUowp.s:344    .text.EXTI4_IRQHandler:0000000000000000 EXTI4_IRQHandler
     /tmp/ccDDUowp.s:368    .text.TIM2_IRQHandler:0000000000000000 $t
     /tmp/ccDDUowp.s:375    .text.TIM2_IRQHandler:0000000000000000 TIM2_IRQHandler
     /tmp/ccDDUowp.s:398    .text.TIM2_IRQHandler:0000000000000010 $d
     /tmp/ccDDUowp.s:403    .text.USB_IRQHandler:0000000000000000 $t
     /tmp/ccDDUowp.s:410    .text.USB_IRQHandler:0000000000000000 USB_IRQHandler
     /tmp/ccDDUowp.s:433    .text.USB_IRQHandler:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_GPIO_EXTI_IRQHandler
HAL_TIM_IRQHandler
htim2
HAL_PCD_IRQHandler
hpcd_USB_FS
