ARM GAS  /tmp/ccbuz7e8.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"usbd_cdc_if.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.comm	UserRxBufferFS,1000,4
  18              		.comm	UserTxBufferFS,1000,4
  19              		.global	USBD_Interface_fops_FS
  20              		.section	.data.USBD_Interface_fops_FS,"aw"
  21              		.align	2
  24              	USBD_Interface_fops_FS:
  25 0000 00000000 		.word	CDC_Init_FS
  26 0004 00000000 		.word	CDC_DeInit_FS
  27 0008 00000000 		.word	CDC_Control_FS
  28 000c 00000000 		.word	CDC_Receive_FS
  29              		.section	.text.CDC_Init_FS,"ax",%progbits
  30              		.align	1
  31              		.arch armv7e-m
  32              		.syntax unified
  33              		.thumb
  34              		.thumb_func
  35              		.fpu fpv4-sp-d16
  37              	CDC_Init_FS:
  38              	.LFB133:
  39              		.file 1 "Src/usbd_cdc_if.c"
   1:Src/usbd_cdc_if.c **** /* USER CODE BEGIN Header */
   2:Src/usbd_cdc_if.c **** /**
   3:Src/usbd_cdc_if.c ****   ******************************************************************************
   4:Src/usbd_cdc_if.c ****   * @file           : usbd_cdc_if.c
   5:Src/usbd_cdc_if.c ****   * @version        : v2.0_Cube
   6:Src/usbd_cdc_if.c ****   * @brief          : Usb device for Virtual Com Port.
   7:Src/usbd_cdc_if.c ****   ******************************************************************************
   8:Src/usbd_cdc_if.c ****   * @attention
   9:Src/usbd_cdc_if.c ****   *
  10:Src/usbd_cdc_if.c ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  11:Src/usbd_cdc_if.c ****   * All rights reserved.</center></h2>
  12:Src/usbd_cdc_if.c ****   *
  13:Src/usbd_cdc_if.c ****   * This software component is licensed by ST under Ultimate Liberty license
  14:Src/usbd_cdc_if.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  15:Src/usbd_cdc_if.c ****   * the License. You may obtain a copy of the License at:
  16:Src/usbd_cdc_if.c ****   *                             www.st.com/SLA0044
  17:Src/usbd_cdc_if.c ****   *
  18:Src/usbd_cdc_if.c ****   ******************************************************************************
  19:Src/usbd_cdc_if.c ****   */
  20:Src/usbd_cdc_if.c **** /* USER CODE END Header */
  21:Src/usbd_cdc_if.c **** 
ARM GAS  /tmp/ccbuz7e8.s 			page 2


  22:Src/usbd_cdc_if.c **** /* Includes ------------------------------------------------------------------*/
  23:Src/usbd_cdc_if.c **** #include "usbd_cdc_if.h"
  24:Src/usbd_cdc_if.c **** 
  25:Src/usbd_cdc_if.c **** /* USER CODE BEGIN INCLUDE */
  26:Src/usbd_cdc_if.c **** 
  27:Src/usbd_cdc_if.c **** /* USER CODE END INCLUDE */
  28:Src/usbd_cdc_if.c **** 
  29:Src/usbd_cdc_if.c **** /* Private typedef -----------------------------------------------------------*/
  30:Src/usbd_cdc_if.c **** /* Private define ------------------------------------------------------------*/
  31:Src/usbd_cdc_if.c **** /* Private macro -------------------------------------------------------------*/
  32:Src/usbd_cdc_if.c **** 
  33:Src/usbd_cdc_if.c **** /* USER CODE BEGIN PV */
  34:Src/usbd_cdc_if.c **** /* Private variables ---------------------------------------------------------*/
  35:Src/usbd_cdc_if.c **** 
  36:Src/usbd_cdc_if.c **** /* USER CODE END PV */
  37:Src/usbd_cdc_if.c **** 
  38:Src/usbd_cdc_if.c **** /** @addtogroup STM32_USB_OTG_DEVICE_LIBRARY
  39:Src/usbd_cdc_if.c ****   * @brief Usb device library.
  40:Src/usbd_cdc_if.c ****   * @{
  41:Src/usbd_cdc_if.c ****   */
  42:Src/usbd_cdc_if.c **** 
  43:Src/usbd_cdc_if.c **** /** @addtogroup USBD_CDC_IF
  44:Src/usbd_cdc_if.c ****   * @{
  45:Src/usbd_cdc_if.c ****   */
  46:Src/usbd_cdc_if.c **** 
  47:Src/usbd_cdc_if.c **** /** @defgroup USBD_CDC_IF_Private_TypesDefinitions USBD_CDC_IF_Private_TypesDefinitions
  48:Src/usbd_cdc_if.c ****   * @brief Private types.
  49:Src/usbd_cdc_if.c ****   * @{
  50:Src/usbd_cdc_if.c ****   */
  51:Src/usbd_cdc_if.c **** 
  52:Src/usbd_cdc_if.c **** /* USER CODE BEGIN PRIVATE_TYPES */
  53:Src/usbd_cdc_if.c **** 
  54:Src/usbd_cdc_if.c **** /* USER CODE END PRIVATE_TYPES */
  55:Src/usbd_cdc_if.c **** 
  56:Src/usbd_cdc_if.c **** /**
  57:Src/usbd_cdc_if.c ****   * @}
  58:Src/usbd_cdc_if.c ****   */
  59:Src/usbd_cdc_if.c **** 
  60:Src/usbd_cdc_if.c **** /** @defgroup USBD_CDC_IF_Private_Defines USBD_CDC_IF_Private_Defines
  61:Src/usbd_cdc_if.c ****   * @brief Private defines.
  62:Src/usbd_cdc_if.c ****   * @{
  63:Src/usbd_cdc_if.c ****   */
  64:Src/usbd_cdc_if.c **** 
  65:Src/usbd_cdc_if.c **** /* USER CODE BEGIN PRIVATE_DEFINES */
  66:Src/usbd_cdc_if.c **** /* Define size for the receive and transmit buffer over CDC */
  67:Src/usbd_cdc_if.c **** /* It's up to user to redefine and/or remove those define */
  68:Src/usbd_cdc_if.c **** #define APP_RX_DATA_SIZE  1000
  69:Src/usbd_cdc_if.c **** #define APP_TX_DATA_SIZE  1000
  70:Src/usbd_cdc_if.c **** /* USER CODE END PRIVATE_DEFINES */
  71:Src/usbd_cdc_if.c **** 
  72:Src/usbd_cdc_if.c **** /**
  73:Src/usbd_cdc_if.c ****   * @}
  74:Src/usbd_cdc_if.c ****   */
  75:Src/usbd_cdc_if.c **** 
  76:Src/usbd_cdc_if.c **** /** @defgroup USBD_CDC_IF_Private_Macros USBD_CDC_IF_Private_Macros
  77:Src/usbd_cdc_if.c ****   * @brief Private macros.
  78:Src/usbd_cdc_if.c ****   * @{
ARM GAS  /tmp/ccbuz7e8.s 			page 3


  79:Src/usbd_cdc_if.c ****   */
  80:Src/usbd_cdc_if.c **** 
  81:Src/usbd_cdc_if.c **** /* USER CODE BEGIN PRIVATE_MACRO */
  82:Src/usbd_cdc_if.c **** 
  83:Src/usbd_cdc_if.c **** /* USER CODE END PRIVATE_MACRO */
  84:Src/usbd_cdc_if.c **** 
  85:Src/usbd_cdc_if.c **** /**
  86:Src/usbd_cdc_if.c ****   * @}
  87:Src/usbd_cdc_if.c ****   */
  88:Src/usbd_cdc_if.c **** 
  89:Src/usbd_cdc_if.c **** /** @defgroup USBD_CDC_IF_Private_Variables USBD_CDC_IF_Private_Variables
  90:Src/usbd_cdc_if.c ****   * @brief Private variables.
  91:Src/usbd_cdc_if.c ****   * @{
  92:Src/usbd_cdc_if.c ****   */
  93:Src/usbd_cdc_if.c **** /* Create buffer for reception and transmission           */
  94:Src/usbd_cdc_if.c **** /* It's up to user to redefine and/or remove those define */
  95:Src/usbd_cdc_if.c **** /** Received data over USB are stored in this buffer      */
  96:Src/usbd_cdc_if.c **** uint8_t UserRxBufferFS[APP_RX_DATA_SIZE];
  97:Src/usbd_cdc_if.c **** 
  98:Src/usbd_cdc_if.c **** /** Data to send over USB CDC are stored in this buffer   */
  99:Src/usbd_cdc_if.c **** uint8_t UserTxBufferFS[APP_TX_DATA_SIZE];
 100:Src/usbd_cdc_if.c **** 
 101:Src/usbd_cdc_if.c **** /* USER CODE BEGIN PRIVATE_VARIABLES */
 102:Src/usbd_cdc_if.c **** 
 103:Src/usbd_cdc_if.c **** /* USER CODE END PRIVATE_VARIABLES */
 104:Src/usbd_cdc_if.c **** 
 105:Src/usbd_cdc_if.c **** /**
 106:Src/usbd_cdc_if.c ****   * @}
 107:Src/usbd_cdc_if.c ****   */
 108:Src/usbd_cdc_if.c **** 
 109:Src/usbd_cdc_if.c **** /** @defgroup USBD_CDC_IF_Exported_Variables USBD_CDC_IF_Exported_Variables
 110:Src/usbd_cdc_if.c ****   * @brief Public variables.
 111:Src/usbd_cdc_if.c ****   * @{
 112:Src/usbd_cdc_if.c ****   */
 113:Src/usbd_cdc_if.c **** 
 114:Src/usbd_cdc_if.c **** extern USBD_HandleTypeDef hUsbDeviceFS;
 115:Src/usbd_cdc_if.c **** 
 116:Src/usbd_cdc_if.c **** /* USER CODE BEGIN EXPORTED_VARIABLES */
 117:Src/usbd_cdc_if.c **** 
 118:Src/usbd_cdc_if.c **** /* USER CODE END EXPORTED_VARIABLES */
 119:Src/usbd_cdc_if.c **** 
 120:Src/usbd_cdc_if.c **** /**
 121:Src/usbd_cdc_if.c ****   * @}
 122:Src/usbd_cdc_if.c ****   */
 123:Src/usbd_cdc_if.c **** 
 124:Src/usbd_cdc_if.c **** /** @defgroup USBD_CDC_IF_Private_FunctionPrototypes USBD_CDC_IF_Private_FunctionPrototypes
 125:Src/usbd_cdc_if.c ****   * @brief Private functions declaration.
 126:Src/usbd_cdc_if.c ****   * @{
 127:Src/usbd_cdc_if.c ****   */
 128:Src/usbd_cdc_if.c **** 
 129:Src/usbd_cdc_if.c **** static int8_t CDC_Init_FS(void);
 130:Src/usbd_cdc_if.c **** static int8_t CDC_DeInit_FS(void);
 131:Src/usbd_cdc_if.c **** static int8_t CDC_Control_FS(uint8_t cmd, uint8_t* pbuf, uint16_t length);
 132:Src/usbd_cdc_if.c **** static int8_t CDC_Receive_FS(uint8_t* pbuf, uint32_t *Len);
 133:Src/usbd_cdc_if.c **** 
 134:Src/usbd_cdc_if.c **** /* USER CODE BEGIN PRIVATE_FUNCTIONS_DECLARATION */
 135:Src/usbd_cdc_if.c **** 
ARM GAS  /tmp/ccbuz7e8.s 			page 4


 136:Src/usbd_cdc_if.c **** /* USER CODE END PRIVATE_FUNCTIONS_DECLARATION */
 137:Src/usbd_cdc_if.c **** 
 138:Src/usbd_cdc_if.c **** /**
 139:Src/usbd_cdc_if.c ****   * @}
 140:Src/usbd_cdc_if.c ****   */
 141:Src/usbd_cdc_if.c **** 
 142:Src/usbd_cdc_if.c **** USBD_CDC_ItfTypeDef USBD_Interface_fops_FS =
 143:Src/usbd_cdc_if.c **** {
 144:Src/usbd_cdc_if.c ****   CDC_Init_FS,
 145:Src/usbd_cdc_if.c ****   CDC_DeInit_FS,
 146:Src/usbd_cdc_if.c ****   CDC_Control_FS,
 147:Src/usbd_cdc_if.c ****   CDC_Receive_FS
 148:Src/usbd_cdc_if.c **** };
 149:Src/usbd_cdc_if.c **** 
 150:Src/usbd_cdc_if.c **** /* Private functions ---------------------------------------------------------*/
 151:Src/usbd_cdc_if.c **** /**
 152:Src/usbd_cdc_if.c ****   * @brief  Initializes the CDC media low layer over the FS USB IP
 153:Src/usbd_cdc_if.c ****   * @retval USBD_OK if all operations are OK else USBD_FAIL
 154:Src/usbd_cdc_if.c ****   */
 155:Src/usbd_cdc_if.c **** static int8_t CDC_Init_FS(void)
 156:Src/usbd_cdc_if.c **** {
  40              		.loc 1 156 1
  41              		.cfi_startproc
  42              		@ args = 0, pretend = 0, frame = 0
  43              		@ frame_needed = 1, uses_anonymous_args = 0
  44 0000 80B5     		push	{r7, lr}
  45              	.LCFI0:
  46              		.cfi_def_cfa_offset 8
  47              		.cfi_offset 7, -8
  48              		.cfi_offset 14, -4
  49 0002 00AF     		add	r7, sp, #0
  50              	.LCFI1:
  51              		.cfi_def_cfa_register 7
 157:Src/usbd_cdc_if.c ****   /* USER CODE BEGIN 3 */
 158:Src/usbd_cdc_if.c ****   /* Set Application Buffers */
 159:Src/usbd_cdc_if.c ****   USBD_CDC_SetTxBuffer(&hUsbDeviceFS, UserTxBufferFS, 0);
  52              		.loc 1 159 3
  53 0004 0022     		movs	r2, #0
  54 0006 0549     		ldr	r1, .L3
  55 0008 0548     		ldr	r0, .L3+4
  56 000a FFF7FEFF 		bl	USBD_CDC_SetTxBuffer
 160:Src/usbd_cdc_if.c ****   USBD_CDC_SetRxBuffer(&hUsbDeviceFS, UserRxBufferFS);
  57              		.loc 1 160 3
  58 000e 0549     		ldr	r1, .L3+8
  59 0010 0348     		ldr	r0, .L3+4
  60 0012 FFF7FEFF 		bl	USBD_CDC_SetRxBuffer
 161:Src/usbd_cdc_if.c ****   return (USBD_OK);
  61              		.loc 1 161 10
  62 0016 0023     		movs	r3, #0
 162:Src/usbd_cdc_if.c ****   /* USER CODE END 3 */
 163:Src/usbd_cdc_if.c **** }
  63              		.loc 1 163 1
  64 0018 1846     		mov	r0, r3
  65 001a 80BD     		pop	{r7, pc}
  66              	.L4:
  67              		.align	2
  68              	.L3:
ARM GAS  /tmp/ccbuz7e8.s 			page 5


  69 001c 00000000 		.word	UserTxBufferFS
  70 0020 00000000 		.word	hUsbDeviceFS
  71 0024 00000000 		.word	UserRxBufferFS
  72              		.cfi_endproc
  73              	.LFE133:
  75              		.section	.text.CDC_DeInit_FS,"ax",%progbits
  76              		.align	1
  77              		.syntax unified
  78              		.thumb
  79              		.thumb_func
  80              		.fpu fpv4-sp-d16
  82              	CDC_DeInit_FS:
  83              	.LFB134:
 164:Src/usbd_cdc_if.c **** 
 165:Src/usbd_cdc_if.c **** /**
 166:Src/usbd_cdc_if.c ****   * @brief  DeInitializes the CDC media low layer
 167:Src/usbd_cdc_if.c ****   * @retval USBD_OK if all operations are OK else USBD_FAIL
 168:Src/usbd_cdc_if.c ****   */
 169:Src/usbd_cdc_if.c **** static int8_t CDC_DeInit_FS(void)
 170:Src/usbd_cdc_if.c **** {
  84              		.loc 1 170 1
  85              		.cfi_startproc
  86              		@ args = 0, pretend = 0, frame = 0
  87              		@ frame_needed = 1, uses_anonymous_args = 0
  88              		@ link register save eliminated.
  89 0000 80B4     		push	{r7}
  90              	.LCFI2:
  91              		.cfi_def_cfa_offset 4
  92              		.cfi_offset 7, -4
  93 0002 00AF     		add	r7, sp, #0
  94              	.LCFI3:
  95              		.cfi_def_cfa_register 7
 171:Src/usbd_cdc_if.c ****   /* USER CODE BEGIN 4 */
 172:Src/usbd_cdc_if.c ****   return (USBD_OK);
  96              		.loc 1 172 10
  97 0004 0023     		movs	r3, #0
 173:Src/usbd_cdc_if.c ****   /* USER CODE END 4 */
 174:Src/usbd_cdc_if.c **** }
  98              		.loc 1 174 1
  99 0006 1846     		mov	r0, r3
 100 0008 BD46     		mov	sp, r7
 101              	.LCFI4:
 102              		.cfi_def_cfa_register 13
 103              		@ sp needed
 104 000a 5DF8047B 		ldr	r7, [sp], #4
 105              	.LCFI5:
 106              		.cfi_restore 7
 107              		.cfi_def_cfa_offset 0
 108 000e 7047     		bx	lr
 109              		.cfi_endproc
 110              	.LFE134:
 112              		.section	.text.CDC_Control_FS,"ax",%progbits
 113              		.align	1
 114              		.syntax unified
 115              		.thumb
 116              		.thumb_func
 117              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccbuz7e8.s 			page 6


 119              	CDC_Control_FS:
 120              	.LFB135:
 175:Src/usbd_cdc_if.c **** 
 176:Src/usbd_cdc_if.c **** /**
 177:Src/usbd_cdc_if.c ****   * @brief  Manage the CDC class requests
 178:Src/usbd_cdc_if.c ****   * @param  cmd: Command code
 179:Src/usbd_cdc_if.c ****   * @param  pbuf: Buffer containing command data (request parameters)
 180:Src/usbd_cdc_if.c ****   * @param  length: Number of data to be sent (in bytes)
 181:Src/usbd_cdc_if.c ****   * @retval Result of the operation: USBD_OK if all operations are OK else USBD_FAIL
 182:Src/usbd_cdc_if.c ****   */
 183:Src/usbd_cdc_if.c **** static int8_t CDC_Control_FS(uint8_t cmd, uint8_t* pbuf, uint16_t length)
 184:Src/usbd_cdc_if.c **** {
 121              		.loc 1 184 1
 122              		.cfi_startproc
 123              		@ args = 0, pretend = 0, frame = 8
 124              		@ frame_needed = 1, uses_anonymous_args = 0
 125              		@ link register save eliminated.
 126 0000 80B4     		push	{r7}
 127              	.LCFI6:
 128              		.cfi_def_cfa_offset 4
 129              		.cfi_offset 7, -4
 130 0002 83B0     		sub	sp, sp, #12
 131              	.LCFI7:
 132              		.cfi_def_cfa_offset 16
 133 0004 00AF     		add	r7, sp, #0
 134              	.LCFI8:
 135              		.cfi_def_cfa_register 7
 136 0006 0346     		mov	r3, r0
 137 0008 3960     		str	r1, [r7]
 138 000a FB71     		strb	r3, [r7, #7]
 139 000c 1346     		mov	r3, r2	@ movhi
 140 000e BB80     		strh	r3, [r7, #4]	@ movhi
 185:Src/usbd_cdc_if.c ****   /* USER CODE BEGIN 5 */
 186:Src/usbd_cdc_if.c ****   switch(cmd)
 141              		.loc 1 186 3
 142 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 143 0012 232B     		cmp	r3, #35
 144 0014 4AD8     		bhi	.L21
 145 0016 01A2     		adr	r2, .L10
 146 0018 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 147              		.p2align 2
 148              	.L10:
 149 001c AD000000 		.word	.L21+1
 150 0020 AD000000 		.word	.L21+1
 151 0024 AD000000 		.word	.L21+1
 152 0028 AD000000 		.word	.L21+1
 153 002c AD000000 		.word	.L21+1
 154 0030 AD000000 		.word	.L21+1
 155 0034 AD000000 		.word	.L21+1
 156 0038 AD000000 		.word	.L21+1
 157 003c AD000000 		.word	.L21+1
 158 0040 AD000000 		.word	.L21+1
 159 0044 AD000000 		.word	.L21+1
 160 0048 AD000000 		.word	.L21+1
 161 004c AD000000 		.word	.L21+1
 162 0050 AD000000 		.word	.L21+1
 163 0054 AD000000 		.word	.L21+1
ARM GAS  /tmp/ccbuz7e8.s 			page 7


 164 0058 AD000000 		.word	.L21+1
 165 005c AD000000 		.word	.L21+1
 166 0060 AD000000 		.word	.L21+1
 167 0064 AD000000 		.word	.L21+1
 168 0068 AD000000 		.word	.L21+1
 169 006c AD000000 		.word	.L21+1
 170 0070 AD000000 		.word	.L21+1
 171 0074 AD000000 		.word	.L21+1
 172 0078 AD000000 		.word	.L21+1
 173 007c AD000000 		.word	.L21+1
 174 0080 AD000000 		.word	.L21+1
 175 0084 AD000000 		.word	.L21+1
 176 0088 AD000000 		.word	.L21+1
 177 008c AD000000 		.word	.L21+1
 178 0090 AD000000 		.word	.L21+1
 179 0094 AD000000 		.word	.L21+1
 180 0098 AD000000 		.word	.L21+1
 181 009c AD000000 		.word	.L21+1
 182 00a0 AD000000 		.word	.L21+1
 183 00a4 AD000000 		.word	.L21+1
 184 00a8 AD000000 		.word	.L21+1
 185              		.p2align 1
 186              	.L21:
 187:Src/usbd_cdc_if.c ****   {
 188:Src/usbd_cdc_if.c ****     case CDC_SEND_ENCAPSULATED_COMMAND:
 189:Src/usbd_cdc_if.c **** 
 190:Src/usbd_cdc_if.c ****     break;
 191:Src/usbd_cdc_if.c **** 
 192:Src/usbd_cdc_if.c ****     case CDC_GET_ENCAPSULATED_RESPONSE:
 193:Src/usbd_cdc_if.c **** 
 194:Src/usbd_cdc_if.c ****     break;
 195:Src/usbd_cdc_if.c **** 
 196:Src/usbd_cdc_if.c ****     case CDC_SET_COMM_FEATURE:
 197:Src/usbd_cdc_if.c **** 
 198:Src/usbd_cdc_if.c ****     break;
 199:Src/usbd_cdc_if.c **** 
 200:Src/usbd_cdc_if.c ****     case CDC_GET_COMM_FEATURE:
 201:Src/usbd_cdc_if.c **** 
 202:Src/usbd_cdc_if.c ****     break;
 203:Src/usbd_cdc_if.c **** 
 204:Src/usbd_cdc_if.c ****     case CDC_CLEAR_COMM_FEATURE:
 205:Src/usbd_cdc_if.c **** 
 206:Src/usbd_cdc_if.c ****     break;
 207:Src/usbd_cdc_if.c **** 
 208:Src/usbd_cdc_if.c ****   /*******************************************************************************/
 209:Src/usbd_cdc_if.c ****   /* Line Coding Structure                                                       */
 210:Src/usbd_cdc_if.c ****   /*-----------------------------------------------------------------------------*/
 211:Src/usbd_cdc_if.c ****   /* Offset | Field       | Size | Value  | Description                          */
 212:Src/usbd_cdc_if.c ****   /* 0      | dwDTERate   |   4  | Number |Data terminal rate, in bits per second*/
 213:Src/usbd_cdc_if.c ****   /* 4      | bCharFormat |   1  | Number | Stop bits                            */
 214:Src/usbd_cdc_if.c ****   /*                                        0 - 1 Stop bit                       */
 215:Src/usbd_cdc_if.c ****   /*                                        1 - 1.5 Stop bits                    */
 216:Src/usbd_cdc_if.c ****   /*                                        2 - 2 Stop bits                      */
 217:Src/usbd_cdc_if.c ****   /* 5      | bParityType |  1   | Number | Parity                               */
 218:Src/usbd_cdc_if.c ****   /*                                        0 - None                             */
 219:Src/usbd_cdc_if.c ****   /*                                        1 - Odd                              */
 220:Src/usbd_cdc_if.c ****   /*                                        2 - Even                             */
ARM GAS  /tmp/ccbuz7e8.s 			page 8


 221:Src/usbd_cdc_if.c ****   /*                                        3 - Mark                             */
 222:Src/usbd_cdc_if.c ****   /*                                        4 - Space                            */
 223:Src/usbd_cdc_if.c ****   /* 6      | bDataBits  |   1   | Number Data bits (5, 6, 7, 8 or 16).          */
 224:Src/usbd_cdc_if.c ****   /*******************************************************************************/
 225:Src/usbd_cdc_if.c ****     case CDC_SET_LINE_CODING:
 226:Src/usbd_cdc_if.c **** 
 227:Src/usbd_cdc_if.c ****     break;
 228:Src/usbd_cdc_if.c **** 
 229:Src/usbd_cdc_if.c ****     case CDC_GET_LINE_CODING:
 230:Src/usbd_cdc_if.c **** 
 231:Src/usbd_cdc_if.c ****     break;
 232:Src/usbd_cdc_if.c **** 
 233:Src/usbd_cdc_if.c ****     case CDC_SET_CONTROL_LINE_STATE:
 234:Src/usbd_cdc_if.c **** 
 235:Src/usbd_cdc_if.c ****     break;
 236:Src/usbd_cdc_if.c **** 
 237:Src/usbd_cdc_if.c ****     case CDC_SEND_BREAK:
 238:Src/usbd_cdc_if.c **** 
 239:Src/usbd_cdc_if.c ****     break;
 240:Src/usbd_cdc_if.c **** 
 241:Src/usbd_cdc_if.c ****   default:
 242:Src/usbd_cdc_if.c ****     break;
 187              		.loc 1 242 5
 188 00ac 00BF     		nop
 243:Src/usbd_cdc_if.c ****   }
 244:Src/usbd_cdc_if.c **** 
 245:Src/usbd_cdc_if.c ****   return (USBD_OK);
 189              		.loc 1 245 10
 190 00ae 0023     		movs	r3, #0
 246:Src/usbd_cdc_if.c ****   /* USER CODE END 5 */
 247:Src/usbd_cdc_if.c **** }
 191              		.loc 1 247 1
 192 00b0 1846     		mov	r0, r3
 193 00b2 0C37     		adds	r7, r7, #12
 194              	.LCFI9:
 195              		.cfi_def_cfa_offset 4
 196 00b4 BD46     		mov	sp, r7
 197              	.LCFI10:
 198              		.cfi_def_cfa_register 13
 199              		@ sp needed
 200 00b6 5DF8047B 		ldr	r7, [sp], #4
 201              	.LCFI11:
 202              		.cfi_restore 7
 203              		.cfi_def_cfa_offset 0
 204 00ba 7047     		bx	lr
 205              		.cfi_endproc
 206              	.LFE135:
 208              		.section	.text.CDC_Receive_FS,"ax",%progbits
 209              		.align	1
 210              		.syntax unified
 211              		.thumb
 212              		.thumb_func
 213              		.fpu fpv4-sp-d16
 215              	CDC_Receive_FS:
 216              	.LFB136:
 248:Src/usbd_cdc_if.c **** 
 249:Src/usbd_cdc_if.c **** /**
ARM GAS  /tmp/ccbuz7e8.s 			page 9


 250:Src/usbd_cdc_if.c ****   * @brief  Data received over USB OUT endpoint are sent over CDC interface
 251:Src/usbd_cdc_if.c ****   *         through this function.
 252:Src/usbd_cdc_if.c ****   *
 253:Src/usbd_cdc_if.c ****   *         @note
 254:Src/usbd_cdc_if.c ****   *         This function will block any OUT packet reception on USB endpoint
 255:Src/usbd_cdc_if.c ****   *         untill exiting this function. If you exit this function before transfer
 256:Src/usbd_cdc_if.c ****   *         is complete on CDC interface (ie. using DMA controller) it will result
 257:Src/usbd_cdc_if.c ****   *         in receiving more data while previous ones are still not sent.
 258:Src/usbd_cdc_if.c ****   *
 259:Src/usbd_cdc_if.c ****   * @param  Buf: Buffer of data to be received
 260:Src/usbd_cdc_if.c ****   * @param  Len: Number of data received (in bytes)
 261:Src/usbd_cdc_if.c ****   * @retval Result of the operation: USBD_OK if all operations are OK else USBD_FAIL
 262:Src/usbd_cdc_if.c ****   */
 263:Src/usbd_cdc_if.c **** static int8_t CDC_Receive_FS(uint8_t* Buf, uint32_t *Len)
 264:Src/usbd_cdc_if.c **** {
 217              		.loc 1 264 1
 218              		.cfi_startproc
 219              		@ args = 0, pretend = 0, frame = 8
 220              		@ frame_needed = 1, uses_anonymous_args = 0
 221 0000 80B5     		push	{r7, lr}
 222              	.LCFI12:
 223              		.cfi_def_cfa_offset 8
 224              		.cfi_offset 7, -8
 225              		.cfi_offset 14, -4
 226 0002 82B0     		sub	sp, sp, #8
 227              	.LCFI13:
 228              		.cfi_def_cfa_offset 16
 229 0004 00AF     		add	r7, sp, #0
 230              	.LCFI14:
 231              		.cfi_def_cfa_register 7
 232 0006 7860     		str	r0, [r7, #4]
 233 0008 3960     		str	r1, [r7]
 265:Src/usbd_cdc_if.c ****   /* USER CODE BEGIN 6 */
 266:Src/usbd_cdc_if.c ****   USBD_CDC_SetRxBuffer(&hUsbDeviceFS, &Buf[0]);
 234              		.loc 1 266 3
 235 000a 7968     		ldr	r1, [r7, #4]
 236 000c 0548     		ldr	r0, .L24
 237 000e FFF7FEFF 		bl	USBD_CDC_SetRxBuffer
 267:Src/usbd_cdc_if.c ****   USBD_CDC_ReceivePacket(&hUsbDeviceFS);
 238              		.loc 1 267 3
 239 0012 0448     		ldr	r0, .L24
 240 0014 FFF7FEFF 		bl	USBD_CDC_ReceivePacket
 268:Src/usbd_cdc_if.c ****   return (USBD_OK);
 241              		.loc 1 268 10
 242 0018 0023     		movs	r3, #0
 269:Src/usbd_cdc_if.c ****   /* USER CODE END 6 */
 270:Src/usbd_cdc_if.c **** }
 243              		.loc 1 270 1
 244 001a 1846     		mov	r0, r3
 245 001c 0837     		adds	r7, r7, #8
 246              	.LCFI15:
 247              		.cfi_def_cfa_offset 8
 248 001e BD46     		mov	sp, r7
 249              	.LCFI16:
 250              		.cfi_def_cfa_register 13
 251              		@ sp needed
 252 0020 80BD     		pop	{r7, pc}
ARM GAS  /tmp/ccbuz7e8.s 			page 10


 253              	.L25:
 254 0022 00BF     		.align	2
 255              	.L24:
 256 0024 00000000 		.word	hUsbDeviceFS
 257              		.cfi_endproc
 258              	.LFE136:
 260              		.section	.text.CDC_Transmit_FS,"ax",%progbits
 261              		.align	1
 262              		.global	CDC_Transmit_FS
 263              		.syntax unified
 264              		.thumb
 265              		.thumb_func
 266              		.fpu fpv4-sp-d16
 268              	CDC_Transmit_FS:
 269              	.LFB137:
 271:Src/usbd_cdc_if.c **** 
 272:Src/usbd_cdc_if.c **** /**
 273:Src/usbd_cdc_if.c ****   * @brief  CDC_Transmit_FS
 274:Src/usbd_cdc_if.c ****   *         Data to send over USB IN endpoint are sent over CDC interface
 275:Src/usbd_cdc_if.c ****   *         through this function.
 276:Src/usbd_cdc_if.c ****   *         @note
 277:Src/usbd_cdc_if.c ****   *
 278:Src/usbd_cdc_if.c ****   *
 279:Src/usbd_cdc_if.c ****   * @param  Buf: Buffer of data to be sent
 280:Src/usbd_cdc_if.c ****   * @param  Len: Number of data to be sent (in bytes)
 281:Src/usbd_cdc_if.c ****   * @retval USBD_OK if all operations are OK else USBD_FAIL or USBD_BUSY
 282:Src/usbd_cdc_if.c ****   */
 283:Src/usbd_cdc_if.c **** uint8_t CDC_Transmit_FS(uint8_t* Buf, uint16_t Len)
 284:Src/usbd_cdc_if.c **** {
 270              		.loc 1 284 1
 271              		.cfi_startproc
 272              		@ args = 0, pretend = 0, frame = 16
 273              		@ frame_needed = 1, uses_anonymous_args = 0
 274 0000 80B5     		push	{r7, lr}
 275              	.LCFI17:
 276              		.cfi_def_cfa_offset 8
 277              		.cfi_offset 7, -8
 278              		.cfi_offset 14, -4
 279 0002 84B0     		sub	sp, sp, #16
 280              	.LCFI18:
 281              		.cfi_def_cfa_offset 24
 282 0004 00AF     		add	r7, sp, #0
 283              	.LCFI19:
 284              		.cfi_def_cfa_register 7
 285 0006 7860     		str	r0, [r7, #4]
 286 0008 0B46     		mov	r3, r1
 287 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 285:Src/usbd_cdc_if.c ****   uint8_t result = USBD_OK;
 288              		.loc 1 285 11
 289 000c 0023     		movs	r3, #0
 290 000e FB73     		strb	r3, [r7, #15]
 286:Src/usbd_cdc_if.c ****   /* USER CODE BEGIN 7 */
 287:Src/usbd_cdc_if.c ****   USBD_CDC_HandleTypeDef *hcdc = (USBD_CDC_HandleTypeDef*)hUsbDeviceFS.pClassData;
 291              		.loc 1 287 27
 292 0010 0D4B     		ldr	r3, .L29
 293 0012 D3F8B832 		ldr	r3, [r3, #696]
 294 0016 BB60     		str	r3, [r7, #8]
ARM GAS  /tmp/ccbuz7e8.s 			page 11


 288:Src/usbd_cdc_if.c ****   if (hcdc->TxState != 0){
 295              		.loc 1 288 11
 296 0018 BB68     		ldr	r3, [r7, #8]
 297 001a D3F81432 		ldr	r3, [r3, #532]
 298              		.loc 1 288 6
 299 001e 002B     		cmp	r3, #0
 300 0020 01D0     		beq	.L27
 289:Src/usbd_cdc_if.c ****     return USBD_BUSY;
 301              		.loc 1 289 12
 302 0022 0123     		movs	r3, #1
 303 0024 0BE0     		b	.L28
 304              	.L27:
 290:Src/usbd_cdc_if.c ****   }
 291:Src/usbd_cdc_if.c ****   USBD_CDC_SetTxBuffer(&hUsbDeviceFS, Buf, Len);
 305              		.loc 1 291 3
 306 0026 7B88     		ldrh	r3, [r7, #2]
 307 0028 1A46     		mov	r2, r3
 308 002a 7968     		ldr	r1, [r7, #4]
 309 002c 0648     		ldr	r0, .L29
 310 002e FFF7FEFF 		bl	USBD_CDC_SetTxBuffer
 292:Src/usbd_cdc_if.c ****   result = USBD_CDC_TransmitPacket(&hUsbDeviceFS);
 311              		.loc 1 292 12
 312 0032 0548     		ldr	r0, .L29
 313 0034 FFF7FEFF 		bl	USBD_CDC_TransmitPacket
 314 0038 0346     		mov	r3, r0
 315 003a FB73     		strb	r3, [r7, #15]
 293:Src/usbd_cdc_if.c ****   /* USER CODE END 7 */
 294:Src/usbd_cdc_if.c ****   return result;
 316              		.loc 1 294 10
 317 003c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 318              	.L28:
 295:Src/usbd_cdc_if.c **** }
 319              		.loc 1 295 1
 320 003e 1846     		mov	r0, r3
 321 0040 1037     		adds	r7, r7, #16
 322              	.LCFI20:
 323              		.cfi_def_cfa_offset 8
 324 0042 BD46     		mov	sp, r7
 325              	.LCFI21:
 326              		.cfi_def_cfa_register 13
 327              		@ sp needed
 328 0044 80BD     		pop	{r7, pc}
 329              	.L30:
 330 0046 00BF     		.align	2
 331              	.L29:
 332 0048 00000000 		.word	hUsbDeviceFS
 333              		.cfi_endproc
 334              	.LFE137:
 336              		.text
 337              	.Letext0:
 338              		.file 2 "/home/ilian/opt/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/include/machine/_default
 339              		.file 3 "/home/ilian/opt/gcc-arm-none-eabi-9-2020-q2-update/lib/gcc/arm-none-eabi/9.3.1/include/st
 340              		.file 4 "/home/ilian/opt/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/include/sys/_types.h"
 341              		.file 5 "/home/ilian/opt/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/include/sys/reent.h"
 342              		.file 6 "/home/ilian/opt/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/include/sys/lock.h"
 343              		.file 7 "/home/ilian/opt/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/include/sys/_stdint.h"
 344              		.file 8 "/home/ilian/opt/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/include/stdlib.h"
ARM GAS  /tmp/ccbuz7e8.s 			page 12


 345              		.file 9 "Drivers/CMSIS/Include/core_cm4.h"
 346              		.file 10 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/system_stm32l4xx.h"
 347              		.file 11 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 348              		.file 12 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_flash.h"
 349              		.file 13 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
 350              		.file 14 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_def.h"
 351              		.file 15 "Middlewares/ST/STM32_USB_Device_Library/Class/CDC/Inc/usbd_cdc.h"
 352              		.file 16 "Inc/usbd_cdc_if.h"
ARM GAS  /tmp/ccbuz7e8.s 			page 13


DEFINED SYMBOLS
                            *ABS*:0000000000000000 usbd_cdc_if.c
                            *COM*:00000000000003e8 UserRxBufferFS
                            *COM*:00000000000003e8 UserTxBufferFS
     /tmp/ccbuz7e8.s:24     .data.USBD_Interface_fops_FS:0000000000000000 USBD_Interface_fops_FS
     /tmp/ccbuz7e8.s:21     .data.USBD_Interface_fops_FS:0000000000000000 $d
     /tmp/ccbuz7e8.s:37     .text.CDC_Init_FS:0000000000000000 CDC_Init_FS
     /tmp/ccbuz7e8.s:82     .text.CDC_DeInit_FS:0000000000000000 CDC_DeInit_FS
     /tmp/ccbuz7e8.s:119    .text.CDC_Control_FS:0000000000000000 CDC_Control_FS
     /tmp/ccbuz7e8.s:215    .text.CDC_Receive_FS:0000000000000000 CDC_Receive_FS
     /tmp/ccbuz7e8.s:30     .text.CDC_Init_FS:0000000000000000 $t
     /tmp/ccbuz7e8.s:69     .text.CDC_Init_FS:000000000000001c $d
     /tmp/ccbuz7e8.s:76     .text.CDC_DeInit_FS:0000000000000000 $t
     /tmp/ccbuz7e8.s:113    .text.CDC_Control_FS:0000000000000000 $t
     /tmp/ccbuz7e8.s:149    .text.CDC_Control_FS:000000000000001c $d
     /tmp/ccbuz7e8.s:185    .text.CDC_Control_FS:00000000000000ac $t
     /tmp/ccbuz7e8.s:209    .text.CDC_Receive_FS:0000000000000000 $t
     /tmp/ccbuz7e8.s:256    .text.CDC_Receive_FS:0000000000000024 $d
     /tmp/ccbuz7e8.s:261    .text.CDC_Transmit_FS:0000000000000000 $t
     /tmp/ccbuz7e8.s:268    .text.CDC_Transmit_FS:0000000000000000 CDC_Transmit_FS
     /tmp/ccbuz7e8.s:332    .text.CDC_Transmit_FS:0000000000000048 $d

UNDEFINED SYMBOLS
USBD_CDC_SetTxBuffer
USBD_CDC_SetRxBuffer
hUsbDeviceFS
USBD_CDC_ReceivePacket
USBD_CDC_TransmitPacket
