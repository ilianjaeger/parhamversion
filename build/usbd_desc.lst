ARM GAS  /tmp/ccgduUiR.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"usbd_desc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	FS_Desc
  18              		.section	.data.FS_Desc,"aw"
  19              		.align	2
  22              	FS_Desc:
  23 0000 00000000 		.word	USBD_FS_DeviceDescriptor
  24 0004 00000000 		.word	USBD_FS_LangIDStrDescriptor
  25 0008 00000000 		.word	USBD_FS_ManufacturerStrDescriptor
  26 000c 00000000 		.word	USBD_FS_ProductStrDescriptor
  27 0010 00000000 		.word	USBD_FS_SerialStrDescriptor
  28 0014 00000000 		.word	USBD_FS_ConfigStrDescriptor
  29 0018 00000000 		.word	USBD_FS_InterfaceStrDescriptor
  30 001c 00000000 		.word	USBD_FS_USR_BOSDescriptor
  31              		.global	USBD_FS_DeviceDesc
  32              		.section	.data.USBD_FS_DeviceDesc,"aw"
  33              		.align	2
  36              	USBD_FS_DeviceDesc:
  37 0000 12010102 		.ascii	"\022\001\001\002\002\002\000@\203\004@W\000\002\001"
  37      02020040 
  37      83044057 
  37      000201
  38 000f 020301   		.ascii	"\002\003\001"
  39              		.global	USBD_FS_BOSDesc
  40              		.section	.data.USBD_FS_BOSDesc,"aw"
  41              		.align	2
  44              	USBD_FS_BOSDesc:
  45 0000 050F0C00 		.ascii	"\005\017\014\000\001\007\020\002\002\000\000\000"
  45      01071002 
  45      02000000 
  46              		.global	USBD_LangIDDesc
  47              		.section	.data.USBD_LangIDDesc,"aw"
  48              		.align	2
  51              	USBD_LangIDDesc:
  52 0000 04030904 		.ascii	"\004\003\011\004"
  53              		.comm	USBD_StrDesc,512,4
  54              		.global	USBD_StringSerial
  55              		.section	.data.USBD_StringSerial,"aw"
  56              		.align	2
  59              	USBD_StringSerial:
  60 0000 1A0300   		.ascii	"\032\003\000"
  61 0003 00000000 		.space	23
  61      00000000 
ARM GAS  /tmp/ccgduUiR.s 			page 2


  61      00000000 
  61      00000000 
  61      00000000 
  62              		.section	.text.USBD_FS_DeviceDescriptor,"ax",%progbits
  63              		.align	1
  64              		.global	USBD_FS_DeviceDescriptor
  65              		.arch armv7e-m
  66              		.syntax unified
  67              		.thumb
  68              		.thumb_func
  69              		.fpu fpv4-sp-d16
  71              	USBD_FS_DeviceDescriptor:
  72              	.LFB133:
  73              		.file 1 "Src/usbd_desc.c"
   1:Src/usbd_desc.c **** /* USER CODE BEGIN Header */
   2:Src/usbd_desc.c **** /**
   3:Src/usbd_desc.c ****   ******************************************************************************
   4:Src/usbd_desc.c ****   * @file           : usbd_desc.c
   5:Src/usbd_desc.c ****   * @version        : v2.0_Cube
   6:Src/usbd_desc.c ****   * @brief          : This file implements the USB device descriptors.
   7:Src/usbd_desc.c ****   ******************************************************************************
   8:Src/usbd_desc.c ****   * @attention
   9:Src/usbd_desc.c ****   *
  10:Src/usbd_desc.c ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  11:Src/usbd_desc.c ****   * All rights reserved.</center></h2>
  12:Src/usbd_desc.c ****   *
  13:Src/usbd_desc.c ****   * This software component is licensed by ST under Ultimate Liberty license
  14:Src/usbd_desc.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  15:Src/usbd_desc.c ****   * the License. You may obtain a copy of the License at:
  16:Src/usbd_desc.c ****   *                             www.st.com/SLA0044
  17:Src/usbd_desc.c ****   *
  18:Src/usbd_desc.c ****   ******************************************************************************
  19:Src/usbd_desc.c ****   */
  20:Src/usbd_desc.c **** /* USER CODE END Header */
  21:Src/usbd_desc.c **** 
  22:Src/usbd_desc.c **** /* Includes ------------------------------------------------------------------*/
  23:Src/usbd_desc.c **** #include "usbd_core.h"
  24:Src/usbd_desc.c **** #include "usbd_desc.h"
  25:Src/usbd_desc.c **** #include "usbd_conf.h"
  26:Src/usbd_desc.c **** 
  27:Src/usbd_desc.c **** /* USER CODE BEGIN INCLUDE */
  28:Src/usbd_desc.c **** 
  29:Src/usbd_desc.c **** /* USER CODE END INCLUDE */
  30:Src/usbd_desc.c **** 
  31:Src/usbd_desc.c **** /* Private typedef -----------------------------------------------------------*/
  32:Src/usbd_desc.c **** /* Private define ------------------------------------------------------------*/
  33:Src/usbd_desc.c **** /* Private macro -------------------------------------------------------------*/
  34:Src/usbd_desc.c **** 
  35:Src/usbd_desc.c **** /* USER CODE BEGIN PV */
  36:Src/usbd_desc.c **** /* Private variables ---------------------------------------------------------*/
  37:Src/usbd_desc.c **** 
  38:Src/usbd_desc.c **** /* USER CODE END PV */
  39:Src/usbd_desc.c **** 
  40:Src/usbd_desc.c **** /** @addtogroup STM32_USB_OTG_DEVICE_LIBRARY
  41:Src/usbd_desc.c ****   * @{
  42:Src/usbd_desc.c ****   */
  43:Src/usbd_desc.c **** 
ARM GAS  /tmp/ccgduUiR.s 			page 3


  44:Src/usbd_desc.c **** /** @addtogroup USBD_DESC
  45:Src/usbd_desc.c ****   * @{
  46:Src/usbd_desc.c ****   */
  47:Src/usbd_desc.c **** 
  48:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_TypesDefinitions USBD_DESC_Private_TypesDefinitions
  49:Src/usbd_desc.c ****   * @brief Private types.
  50:Src/usbd_desc.c ****   * @{
  51:Src/usbd_desc.c ****   */
  52:Src/usbd_desc.c **** 
  53:Src/usbd_desc.c **** /* USER CODE BEGIN PRIVATE_TYPES */
  54:Src/usbd_desc.c **** 
  55:Src/usbd_desc.c **** /* USER CODE END PRIVATE_TYPES */
  56:Src/usbd_desc.c **** 
  57:Src/usbd_desc.c **** /**
  58:Src/usbd_desc.c ****   * @}
  59:Src/usbd_desc.c ****   */
  60:Src/usbd_desc.c **** 
  61:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_Defines USBD_DESC_Private_Defines
  62:Src/usbd_desc.c ****   * @brief Private defines.
  63:Src/usbd_desc.c ****   * @{
  64:Src/usbd_desc.c ****   */
  65:Src/usbd_desc.c **** 
  66:Src/usbd_desc.c **** #define USBD_VID     1155
  67:Src/usbd_desc.c **** #define USBD_LANGID_STRING     1033
  68:Src/usbd_desc.c **** #define USBD_MANUFACTURER_STRING     "STMicroelectronics"
  69:Src/usbd_desc.c **** #define USBD_PID_FS     22336
  70:Src/usbd_desc.c **** #define USBD_PRODUCT_STRING_FS     "STM32 Virtual ComPort"
  71:Src/usbd_desc.c **** #define USBD_CONFIGURATION_STRING_FS     "CDC Config"
  72:Src/usbd_desc.c **** #define USBD_INTERFACE_STRING_FS     "CDC Interface"
  73:Src/usbd_desc.c **** 
  74:Src/usbd_desc.c **** #define USB_SIZ_BOS_DESC            0x0C
  75:Src/usbd_desc.c **** 
  76:Src/usbd_desc.c **** /* USER CODE BEGIN PRIVATE_DEFINES */
  77:Src/usbd_desc.c **** 
  78:Src/usbd_desc.c **** /* USER CODE END PRIVATE_DEFINES */
  79:Src/usbd_desc.c **** 
  80:Src/usbd_desc.c **** /**
  81:Src/usbd_desc.c ****   * @}
  82:Src/usbd_desc.c ****   */
  83:Src/usbd_desc.c **** 
  84:Src/usbd_desc.c **** /* USER CODE BEGIN 0 */
  85:Src/usbd_desc.c **** 
  86:Src/usbd_desc.c **** /* USER CODE END 0 */
  87:Src/usbd_desc.c **** 
  88:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_Macros USBD_DESC_Private_Macros
  89:Src/usbd_desc.c ****   * @brief Private macros.
  90:Src/usbd_desc.c ****   * @{
  91:Src/usbd_desc.c ****   */
  92:Src/usbd_desc.c **** 
  93:Src/usbd_desc.c **** /* USER CODE BEGIN PRIVATE_MACRO */
  94:Src/usbd_desc.c **** 
  95:Src/usbd_desc.c **** /* USER CODE END PRIVATE_MACRO */
  96:Src/usbd_desc.c **** 
  97:Src/usbd_desc.c **** /**
  98:Src/usbd_desc.c ****   * @}
  99:Src/usbd_desc.c ****   */
 100:Src/usbd_desc.c ****   
ARM GAS  /tmp/ccgduUiR.s 			page 4


 101:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_FunctionPrototypes USBD_DESC_Private_FunctionPrototypes
 102:Src/usbd_desc.c ****   * @brief Private functions declaration.
 103:Src/usbd_desc.c ****   * @{
 104:Src/usbd_desc.c ****   */
 105:Src/usbd_desc.c ****   
 106:Src/usbd_desc.c **** static void Get_SerialNum(void);
 107:Src/usbd_desc.c **** static void IntToUnicode(uint32_t value, uint8_t * pbuf, uint8_t len);
 108:Src/usbd_desc.c ****   
 109:Src/usbd_desc.c **** /**
 110:Src/usbd_desc.c ****   * @}
 111:Src/usbd_desc.c ****   */  
 112:Src/usbd_desc.c ****   
 113:Src/usbd_desc.c **** 
 114:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_FunctionPrototypes USBD_DESC_Private_FunctionPrototypes
 115:Src/usbd_desc.c ****   * @brief Private functions declaration for FS.
 116:Src/usbd_desc.c ****   * @{
 117:Src/usbd_desc.c ****   */
 118:Src/usbd_desc.c **** 
 119:Src/usbd_desc.c **** uint8_t * USBD_FS_DeviceDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
 120:Src/usbd_desc.c **** uint8_t * USBD_FS_LangIDStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
 121:Src/usbd_desc.c **** uint8_t * USBD_FS_ManufacturerStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
 122:Src/usbd_desc.c **** uint8_t * USBD_FS_ProductStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
 123:Src/usbd_desc.c **** uint8_t * USBD_FS_SerialStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
 124:Src/usbd_desc.c **** uint8_t * USBD_FS_ConfigStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
 125:Src/usbd_desc.c **** uint8_t * USBD_FS_InterfaceStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
 126:Src/usbd_desc.c **** #if (USBD_LPM_ENABLED == 1)
 127:Src/usbd_desc.c **** uint8_t * USBD_FS_USR_BOSDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
 128:Src/usbd_desc.c **** #endif /* (USBD_LPM_ENABLED == 1) */
 129:Src/usbd_desc.c **** 
 130:Src/usbd_desc.c **** /**
 131:Src/usbd_desc.c ****   * @}
 132:Src/usbd_desc.c ****   */
 133:Src/usbd_desc.c **** 
 134:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_Variables USBD_DESC_Private_Variables
 135:Src/usbd_desc.c ****   * @brief Private variables.
 136:Src/usbd_desc.c ****   * @{
 137:Src/usbd_desc.c ****   */
 138:Src/usbd_desc.c **** 
 139:Src/usbd_desc.c **** USBD_DescriptorsTypeDef FS_Desc =
 140:Src/usbd_desc.c **** {
 141:Src/usbd_desc.c ****   USBD_FS_DeviceDescriptor
 142:Src/usbd_desc.c **** , USBD_FS_LangIDStrDescriptor
 143:Src/usbd_desc.c **** , USBD_FS_ManufacturerStrDescriptor
 144:Src/usbd_desc.c **** , USBD_FS_ProductStrDescriptor
 145:Src/usbd_desc.c **** , USBD_FS_SerialStrDescriptor
 146:Src/usbd_desc.c **** , USBD_FS_ConfigStrDescriptor
 147:Src/usbd_desc.c **** , USBD_FS_InterfaceStrDescriptor
 148:Src/usbd_desc.c **** #if (USBD_LPM_ENABLED == 1)
 149:Src/usbd_desc.c **** , USBD_FS_USR_BOSDescriptor
 150:Src/usbd_desc.c **** #endif /* (USBD_LPM_ENABLED == 1) */
 151:Src/usbd_desc.c **** };
 152:Src/usbd_desc.c **** 
 153:Src/usbd_desc.c **** #if defined ( __ICCARM__ ) /* IAR Compiler */
 154:Src/usbd_desc.c ****   #pragma data_alignment=4
 155:Src/usbd_desc.c **** #endif /* defined ( __ICCARM__ ) */
 156:Src/usbd_desc.c **** /** USB standard device descriptor. */
 157:Src/usbd_desc.c **** __ALIGN_BEGIN uint8_t USBD_FS_DeviceDesc[USB_LEN_DEV_DESC] __ALIGN_END =
ARM GAS  /tmp/ccgduUiR.s 			page 5


 158:Src/usbd_desc.c **** {
 159:Src/usbd_desc.c ****   0x12,                       /*bLength */
 160:Src/usbd_desc.c ****   USB_DESC_TYPE_DEVICE,       /*bDescriptorType*/
 161:Src/usbd_desc.c **** #if (USBD_LPM_ENABLED == 1)
 162:Src/usbd_desc.c ****   0x01,                       /*bcdUSB */ /* changed to USB version 2.01
 163:Src/usbd_desc.c ****                                              in order to support LPM L1 suspend
 164:Src/usbd_desc.c ****                                              resume test of USBCV3.0*/
 165:Src/usbd_desc.c **** #else
 166:Src/usbd_desc.c ****   0x00,                       /*bcdUSB */
 167:Src/usbd_desc.c **** #endif /* (USBD_LPM_ENABLED == 1) */
 168:Src/usbd_desc.c ****   0x02,
 169:Src/usbd_desc.c ****   0x02,                       /*bDeviceClass*/
 170:Src/usbd_desc.c ****   0x02,                       /*bDeviceSubClass*/
 171:Src/usbd_desc.c ****   0x00,                       /*bDeviceProtocol*/
 172:Src/usbd_desc.c ****   USB_MAX_EP0_SIZE,           /*bMaxPacketSize*/
 173:Src/usbd_desc.c ****   LOBYTE(USBD_VID),           /*idVendor*/
 174:Src/usbd_desc.c ****   HIBYTE(USBD_VID),           /*idVendor*/
 175:Src/usbd_desc.c ****   LOBYTE(USBD_PID_FS),        /*idProduct*/
 176:Src/usbd_desc.c ****   HIBYTE(USBD_PID_FS),        /*idProduct*/
 177:Src/usbd_desc.c ****   0x00,                       /*bcdDevice rel. 2.00*/
 178:Src/usbd_desc.c ****   0x02,
 179:Src/usbd_desc.c ****   USBD_IDX_MFC_STR,           /*Index of manufacturer  string*/
 180:Src/usbd_desc.c ****   USBD_IDX_PRODUCT_STR,       /*Index of product string*/
 181:Src/usbd_desc.c ****   USBD_IDX_SERIAL_STR,        /*Index of serial number string*/
 182:Src/usbd_desc.c ****   USBD_MAX_NUM_CONFIGURATION  /*bNumConfigurations*/
 183:Src/usbd_desc.c **** };
 184:Src/usbd_desc.c **** 
 185:Src/usbd_desc.c **** /* USB_DeviceDescriptor */
 186:Src/usbd_desc.c **** /** BOS descriptor. */
 187:Src/usbd_desc.c **** #if (USBD_LPM_ENABLED == 1)
 188:Src/usbd_desc.c **** #if defined ( __ICCARM__ ) /* IAR Compiler */
 189:Src/usbd_desc.c ****   #pragma data_alignment=4
 190:Src/usbd_desc.c **** #endif /* defined ( __ICCARM__ ) */
 191:Src/usbd_desc.c **** __ALIGN_BEGIN uint8_t USBD_FS_BOSDesc[USB_SIZ_BOS_DESC] __ALIGN_END =
 192:Src/usbd_desc.c **** {
 193:Src/usbd_desc.c ****   0x5,
 194:Src/usbd_desc.c ****   USB_DESC_TYPE_BOS,
 195:Src/usbd_desc.c ****   0xC,
 196:Src/usbd_desc.c ****   0x0,
 197:Src/usbd_desc.c ****   0x1,  /* 1 device capability*/
 198:Src/usbd_desc.c ****         /* device capability*/
 199:Src/usbd_desc.c ****   0x7,
 200:Src/usbd_desc.c ****   USB_DEVICE_CAPABITY_TYPE,
 201:Src/usbd_desc.c ****   0x2,
 202:Src/usbd_desc.c ****   0x2,  /* LPM capability bit set*/
 203:Src/usbd_desc.c ****   0x0,
 204:Src/usbd_desc.c ****   0x0,
 205:Src/usbd_desc.c ****   0x0
 206:Src/usbd_desc.c **** };
 207:Src/usbd_desc.c **** #endif /* (USBD_LPM_ENABLED == 1) */
 208:Src/usbd_desc.c **** 
 209:Src/usbd_desc.c **** /**
 210:Src/usbd_desc.c ****   * @}
 211:Src/usbd_desc.c ****   */
 212:Src/usbd_desc.c **** 
 213:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_Variables USBD_DESC_Private_Variables
 214:Src/usbd_desc.c ****   * @brief Private variables.
ARM GAS  /tmp/ccgduUiR.s 			page 6


 215:Src/usbd_desc.c ****   * @{
 216:Src/usbd_desc.c ****   */
 217:Src/usbd_desc.c **** 
 218:Src/usbd_desc.c **** #if defined ( __ICCARM__ ) /* IAR Compiler */
 219:Src/usbd_desc.c ****   #pragma data_alignment=4
 220:Src/usbd_desc.c **** #endif /* defined ( __ICCARM__ ) */
 221:Src/usbd_desc.c **** 
 222:Src/usbd_desc.c **** /** USB lang indentifier descriptor. */
 223:Src/usbd_desc.c **** __ALIGN_BEGIN uint8_t USBD_LangIDDesc[USB_LEN_LANGID_STR_DESC] __ALIGN_END =
 224:Src/usbd_desc.c **** {
 225:Src/usbd_desc.c ****      USB_LEN_LANGID_STR_DESC,
 226:Src/usbd_desc.c ****      USB_DESC_TYPE_STRING,
 227:Src/usbd_desc.c ****      LOBYTE(USBD_LANGID_STRING),
 228:Src/usbd_desc.c ****      HIBYTE(USBD_LANGID_STRING)
 229:Src/usbd_desc.c **** };
 230:Src/usbd_desc.c **** 
 231:Src/usbd_desc.c **** #if defined ( __ICCARM__ ) /* IAR Compiler */
 232:Src/usbd_desc.c ****   #pragma data_alignment=4
 233:Src/usbd_desc.c **** #endif /* defined ( __ICCARM__ ) */
 234:Src/usbd_desc.c **** /* Internal string descriptor. */
 235:Src/usbd_desc.c **** __ALIGN_BEGIN uint8_t USBD_StrDesc[USBD_MAX_STR_DESC_SIZ] __ALIGN_END;
 236:Src/usbd_desc.c **** 
 237:Src/usbd_desc.c **** #if defined ( __ICCARM__ ) /*!< IAR Compiler */
 238:Src/usbd_desc.c ****   #pragma data_alignment=4   
 239:Src/usbd_desc.c **** #endif
 240:Src/usbd_desc.c **** __ALIGN_BEGIN uint8_t USBD_StringSerial[USB_SIZ_STRING_SERIAL] __ALIGN_END = {
 241:Src/usbd_desc.c ****   USB_SIZ_STRING_SERIAL,
 242:Src/usbd_desc.c ****   USB_DESC_TYPE_STRING,
 243:Src/usbd_desc.c **** };
 244:Src/usbd_desc.c **** 
 245:Src/usbd_desc.c **** /**
 246:Src/usbd_desc.c ****   * @}
 247:Src/usbd_desc.c ****   */
 248:Src/usbd_desc.c **** 
 249:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_Functions USBD_DESC_Private_Functions
 250:Src/usbd_desc.c ****   * @brief Private functions.
 251:Src/usbd_desc.c ****   * @{
 252:Src/usbd_desc.c ****   */
 253:Src/usbd_desc.c **** 
 254:Src/usbd_desc.c **** /**
 255:Src/usbd_desc.c ****   * @brief  Return the device descriptor
 256:Src/usbd_desc.c ****   * @param  speed : Current device speed
 257:Src/usbd_desc.c ****   * @param  length : Pointer to data length variable
 258:Src/usbd_desc.c ****   * @retval Pointer to descriptor buffer
 259:Src/usbd_desc.c ****   */
 260:Src/usbd_desc.c **** uint8_t * USBD_FS_DeviceDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 261:Src/usbd_desc.c **** {
  74              		.loc 1 261 1
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 8
  77              		@ frame_needed = 1, uses_anonymous_args = 0
  78              		@ link register save eliminated.
  79 0000 80B4     		push	{r7}
  80              	.LCFI0:
  81              		.cfi_def_cfa_offset 4
  82              		.cfi_offset 7, -4
  83 0002 83B0     		sub	sp, sp, #12
ARM GAS  /tmp/ccgduUiR.s 			page 7


  84              	.LCFI1:
  85              		.cfi_def_cfa_offset 16
  86 0004 00AF     		add	r7, sp, #0
  87              	.LCFI2:
  88              		.cfi_def_cfa_register 7
  89 0006 0346     		mov	r3, r0
  90 0008 3960     		str	r1, [r7]
  91 000a FB71     		strb	r3, [r7, #7]
 262:Src/usbd_desc.c ****   UNUSED(speed);
 263:Src/usbd_desc.c ****   *length = sizeof(USBD_FS_DeviceDesc);
  92              		.loc 1 263 11
  93 000c 3B68     		ldr	r3, [r7]
  94 000e 1222     		movs	r2, #18
  95 0010 1A80     		strh	r2, [r3]	@ movhi
 264:Src/usbd_desc.c ****   return USBD_FS_DeviceDesc;
  96              		.loc 1 264 10
  97 0012 034B     		ldr	r3, .L3
 265:Src/usbd_desc.c **** }
  98              		.loc 1 265 1
  99 0014 1846     		mov	r0, r3
 100 0016 0C37     		adds	r7, r7, #12
 101              	.LCFI3:
 102              		.cfi_def_cfa_offset 4
 103 0018 BD46     		mov	sp, r7
 104              	.LCFI4:
 105              		.cfi_def_cfa_register 13
 106              		@ sp needed
 107 001a 5DF8047B 		ldr	r7, [sp], #4
 108              	.LCFI5:
 109              		.cfi_restore 7
 110              		.cfi_def_cfa_offset 0
 111 001e 7047     		bx	lr
 112              	.L4:
 113              		.align	2
 114              	.L3:
 115 0020 00000000 		.word	USBD_FS_DeviceDesc
 116              		.cfi_endproc
 117              	.LFE133:
 119              		.section	.text.USBD_FS_LangIDStrDescriptor,"ax",%progbits
 120              		.align	1
 121              		.global	USBD_FS_LangIDStrDescriptor
 122              		.syntax unified
 123              		.thumb
 124              		.thumb_func
 125              		.fpu fpv4-sp-d16
 127              	USBD_FS_LangIDStrDescriptor:
 128              	.LFB134:
 266:Src/usbd_desc.c **** 
 267:Src/usbd_desc.c **** /**
 268:Src/usbd_desc.c ****   * @brief  Return the LangID string descriptor
 269:Src/usbd_desc.c ****   * @param  speed : Current device speed
 270:Src/usbd_desc.c ****   * @param  length : Pointer to data length variable
 271:Src/usbd_desc.c ****   * @retval Pointer to descriptor buffer
 272:Src/usbd_desc.c ****   */
 273:Src/usbd_desc.c **** uint8_t * USBD_FS_LangIDStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 274:Src/usbd_desc.c **** {
 129              		.loc 1 274 1
ARM GAS  /tmp/ccgduUiR.s 			page 8


 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 8
 132              		@ frame_needed = 1, uses_anonymous_args = 0
 133              		@ link register save eliminated.
 134 0000 80B4     		push	{r7}
 135              	.LCFI6:
 136              		.cfi_def_cfa_offset 4
 137              		.cfi_offset 7, -4
 138 0002 83B0     		sub	sp, sp, #12
 139              	.LCFI7:
 140              		.cfi_def_cfa_offset 16
 141 0004 00AF     		add	r7, sp, #0
 142              	.LCFI8:
 143              		.cfi_def_cfa_register 7
 144 0006 0346     		mov	r3, r0
 145 0008 3960     		str	r1, [r7]
 146 000a FB71     		strb	r3, [r7, #7]
 275:Src/usbd_desc.c ****   UNUSED(speed);
 276:Src/usbd_desc.c ****   *length = sizeof(USBD_LangIDDesc);
 147              		.loc 1 276 11
 148 000c 3B68     		ldr	r3, [r7]
 149 000e 0422     		movs	r2, #4
 150 0010 1A80     		strh	r2, [r3]	@ movhi
 277:Src/usbd_desc.c ****   return USBD_LangIDDesc;
 151              		.loc 1 277 10
 152 0012 034B     		ldr	r3, .L7
 278:Src/usbd_desc.c **** }
 153              		.loc 1 278 1
 154 0014 1846     		mov	r0, r3
 155 0016 0C37     		adds	r7, r7, #12
 156              	.LCFI9:
 157              		.cfi_def_cfa_offset 4
 158 0018 BD46     		mov	sp, r7
 159              	.LCFI10:
 160              		.cfi_def_cfa_register 13
 161              		@ sp needed
 162 001a 5DF8047B 		ldr	r7, [sp], #4
 163              	.LCFI11:
 164              		.cfi_restore 7
 165              		.cfi_def_cfa_offset 0
 166 001e 7047     		bx	lr
 167              	.L8:
 168              		.align	2
 169              	.L7:
 170 0020 00000000 		.word	USBD_LangIDDesc
 171              		.cfi_endproc
 172              	.LFE134:
 174              		.section	.rodata
 175              		.align	2
 176              	.LC0:
 177 0000 53544D33 		.ascii	"STM32 Virtual ComPort\000"
 177      32205669 
 177      72747561 
 177      6C20436F 
 177      6D506F72 
 178              		.section	.text.USBD_FS_ProductStrDescriptor,"ax",%progbits
 179              		.align	1
ARM GAS  /tmp/ccgduUiR.s 			page 9


 180              		.global	USBD_FS_ProductStrDescriptor
 181              		.syntax unified
 182              		.thumb
 183              		.thumb_func
 184              		.fpu fpv4-sp-d16
 186              	USBD_FS_ProductStrDescriptor:
 187              	.LFB135:
 279:Src/usbd_desc.c **** 
 280:Src/usbd_desc.c **** /**
 281:Src/usbd_desc.c ****   * @brief  Return the product string descriptor
 282:Src/usbd_desc.c ****   * @param  speed : Current device speed
 283:Src/usbd_desc.c ****   * @param  length : Pointer to data length variable
 284:Src/usbd_desc.c ****   * @retval Pointer to descriptor buffer
 285:Src/usbd_desc.c ****   */
 286:Src/usbd_desc.c **** uint8_t * USBD_FS_ProductStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 287:Src/usbd_desc.c **** {
 188              		.loc 1 287 1
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 8
 191              		@ frame_needed = 1, uses_anonymous_args = 0
 192 0000 80B5     		push	{r7, lr}
 193              	.LCFI12:
 194              		.cfi_def_cfa_offset 8
 195              		.cfi_offset 7, -8
 196              		.cfi_offset 14, -4
 197 0002 82B0     		sub	sp, sp, #8
 198              	.LCFI13:
 199              		.cfi_def_cfa_offset 16
 200 0004 00AF     		add	r7, sp, #0
 201              	.LCFI14:
 202              		.cfi_def_cfa_register 7
 203 0006 0346     		mov	r3, r0
 204 0008 3960     		str	r1, [r7]
 205 000a FB71     		strb	r3, [r7, #7]
 288:Src/usbd_desc.c ****   if(speed == 0)
 206              		.loc 1 288 5
 207 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 208 000e 002B     		cmp	r3, #0
 209 0010 05D1     		bne	.L10
 289:Src/usbd_desc.c ****   {
 290:Src/usbd_desc.c ****     USBD_GetString((uint8_t *)USBD_PRODUCT_STRING_FS, USBD_StrDesc, length);
 210              		.loc 1 290 5
 211 0012 3A68     		ldr	r2, [r7]
 212 0014 0749     		ldr	r1, .L13
 213 0016 0848     		ldr	r0, .L13+4
 214 0018 FFF7FEFF 		bl	USBD_GetString
 215 001c 04E0     		b	.L11
 216              	.L10:
 291:Src/usbd_desc.c ****   }
 292:Src/usbd_desc.c ****   else
 293:Src/usbd_desc.c ****   {
 294:Src/usbd_desc.c ****     USBD_GetString((uint8_t *)USBD_PRODUCT_STRING_FS, USBD_StrDesc, length);
 217              		.loc 1 294 5
 218 001e 3A68     		ldr	r2, [r7]
 219 0020 0449     		ldr	r1, .L13
 220 0022 0548     		ldr	r0, .L13+4
 221 0024 FFF7FEFF 		bl	USBD_GetString
ARM GAS  /tmp/ccgduUiR.s 			page 10


 222              	.L11:
 295:Src/usbd_desc.c ****   }
 296:Src/usbd_desc.c ****   return USBD_StrDesc;
 223              		.loc 1 296 10
 224 0028 024B     		ldr	r3, .L13
 297:Src/usbd_desc.c **** }
 225              		.loc 1 297 1
 226 002a 1846     		mov	r0, r3
 227 002c 0837     		adds	r7, r7, #8
 228              	.LCFI15:
 229              		.cfi_def_cfa_offset 8
 230 002e BD46     		mov	sp, r7
 231              	.LCFI16:
 232              		.cfi_def_cfa_register 13
 233              		@ sp needed
 234 0030 80BD     		pop	{r7, pc}
 235              	.L14:
 236 0032 00BF     		.align	2
 237              	.L13:
 238 0034 00000000 		.word	USBD_StrDesc
 239 0038 00000000 		.word	.LC0
 240              		.cfi_endproc
 241              	.LFE135:
 243              		.section	.rodata
 244 0016 0000     		.align	2
 245              	.LC1:
 246 0018 53544D69 		.ascii	"STMicroelectronics\000"
 246      63726F65 
 246      6C656374 
 246      726F6E69 
 246      637300
 247              		.section	.text.USBD_FS_ManufacturerStrDescriptor,"ax",%progbits
 248              		.align	1
 249              		.global	USBD_FS_ManufacturerStrDescriptor
 250              		.syntax unified
 251              		.thumb
 252              		.thumb_func
 253              		.fpu fpv4-sp-d16
 255              	USBD_FS_ManufacturerStrDescriptor:
 256              	.LFB136:
 298:Src/usbd_desc.c **** 
 299:Src/usbd_desc.c **** /**
 300:Src/usbd_desc.c ****   * @brief  Return the manufacturer string descriptor
 301:Src/usbd_desc.c ****   * @param  speed : Current device speed
 302:Src/usbd_desc.c ****   * @param  length : Pointer to data length variable
 303:Src/usbd_desc.c ****   * @retval Pointer to descriptor buffer
 304:Src/usbd_desc.c ****   */
 305:Src/usbd_desc.c **** uint8_t * USBD_FS_ManufacturerStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 306:Src/usbd_desc.c **** {
 257              		.loc 1 306 1
 258              		.cfi_startproc
 259              		@ args = 0, pretend = 0, frame = 8
 260              		@ frame_needed = 1, uses_anonymous_args = 0
 261 0000 80B5     		push	{r7, lr}
 262              	.LCFI17:
 263              		.cfi_def_cfa_offset 8
 264              		.cfi_offset 7, -8
ARM GAS  /tmp/ccgduUiR.s 			page 11


 265              		.cfi_offset 14, -4
 266 0002 82B0     		sub	sp, sp, #8
 267              	.LCFI18:
 268              		.cfi_def_cfa_offset 16
 269 0004 00AF     		add	r7, sp, #0
 270              	.LCFI19:
 271              		.cfi_def_cfa_register 7
 272 0006 0346     		mov	r3, r0
 273 0008 3960     		str	r1, [r7]
 274 000a FB71     		strb	r3, [r7, #7]
 307:Src/usbd_desc.c ****   UNUSED(speed);
 308:Src/usbd_desc.c ****   USBD_GetString((uint8_t *)USBD_MANUFACTURER_STRING, USBD_StrDesc, length);
 275              		.loc 1 308 3
 276 000c 3A68     		ldr	r2, [r7]
 277 000e 0449     		ldr	r1, .L17
 278 0010 0448     		ldr	r0, .L17+4
 279 0012 FFF7FEFF 		bl	USBD_GetString
 309:Src/usbd_desc.c ****   return USBD_StrDesc;
 280              		.loc 1 309 10
 281 0016 024B     		ldr	r3, .L17
 310:Src/usbd_desc.c **** }
 282              		.loc 1 310 1
 283 0018 1846     		mov	r0, r3
 284 001a 0837     		adds	r7, r7, #8
 285              	.LCFI20:
 286              		.cfi_def_cfa_offset 8
 287 001c BD46     		mov	sp, r7
 288              	.LCFI21:
 289              		.cfi_def_cfa_register 13
 290              		@ sp needed
 291 001e 80BD     		pop	{r7, pc}
 292              	.L18:
 293              		.align	2
 294              	.L17:
 295 0020 00000000 		.word	USBD_StrDesc
 296 0024 18000000 		.word	.LC1
 297              		.cfi_endproc
 298              	.LFE136:
 300              		.section	.text.USBD_FS_SerialStrDescriptor,"ax",%progbits
 301              		.align	1
 302              		.global	USBD_FS_SerialStrDescriptor
 303              		.syntax unified
 304              		.thumb
 305              		.thumb_func
 306              		.fpu fpv4-sp-d16
 308              	USBD_FS_SerialStrDescriptor:
 309              	.LFB137:
 311:Src/usbd_desc.c **** 
 312:Src/usbd_desc.c **** /**
 313:Src/usbd_desc.c ****   * @brief  Return the serial number string descriptor
 314:Src/usbd_desc.c ****   * @param  speed : Current device speed
 315:Src/usbd_desc.c ****   * @param  length : Pointer to data length variable
 316:Src/usbd_desc.c ****   * @retval Pointer to descriptor buffer
 317:Src/usbd_desc.c ****   */
 318:Src/usbd_desc.c **** uint8_t * USBD_FS_SerialStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 319:Src/usbd_desc.c **** {
 310              		.loc 1 319 1
ARM GAS  /tmp/ccgduUiR.s 			page 12


 311              		.cfi_startproc
 312              		@ args = 0, pretend = 0, frame = 8
 313              		@ frame_needed = 1, uses_anonymous_args = 0
 314 0000 80B5     		push	{r7, lr}
 315              	.LCFI22:
 316              		.cfi_def_cfa_offset 8
 317              		.cfi_offset 7, -8
 318              		.cfi_offset 14, -4
 319 0002 82B0     		sub	sp, sp, #8
 320              	.LCFI23:
 321              		.cfi_def_cfa_offset 16
 322 0004 00AF     		add	r7, sp, #0
 323              	.LCFI24:
 324              		.cfi_def_cfa_register 7
 325 0006 0346     		mov	r3, r0
 326 0008 3960     		str	r1, [r7]
 327 000a FB71     		strb	r3, [r7, #7]
 320:Src/usbd_desc.c ****   UNUSED(speed);
 321:Src/usbd_desc.c ****   *length = USB_SIZ_STRING_SERIAL;
 328              		.loc 1 321 11
 329 000c 3B68     		ldr	r3, [r7]
 330 000e 1A22     		movs	r2, #26
 331 0010 1A80     		strh	r2, [r3]	@ movhi
 322:Src/usbd_desc.c **** 
 323:Src/usbd_desc.c ****   /* Update the serial number string descriptor with the data from the unique
 324:Src/usbd_desc.c ****    * ID */
 325:Src/usbd_desc.c ****   Get_SerialNum();
 332              		.loc 1 325 3
 333 0012 FFF7FEFF 		bl	Get_SerialNum
 326:Src/usbd_desc.c ****   /* USER CODE BEGIN USBD_FS_SerialStrDescriptor */
 327:Src/usbd_desc.c ****   
 328:Src/usbd_desc.c ****   /* USER CODE END USBD_FS_SerialStrDescriptor */
 329:Src/usbd_desc.c ****   return (uint8_t *) USBD_StringSerial;
 334              		.loc 1 329 10
 335 0016 024B     		ldr	r3, .L21
 330:Src/usbd_desc.c **** }
 336              		.loc 1 330 1
 337 0018 1846     		mov	r0, r3
 338 001a 0837     		adds	r7, r7, #8
 339              	.LCFI25:
 340              		.cfi_def_cfa_offset 8
 341 001c BD46     		mov	sp, r7
 342              	.LCFI26:
 343              		.cfi_def_cfa_register 13
 344              		@ sp needed
 345 001e 80BD     		pop	{r7, pc}
 346              	.L22:
 347              		.align	2
 348              	.L21:
 349 0020 00000000 		.word	USBD_StringSerial
 350              		.cfi_endproc
 351              	.LFE137:
 353              		.section	.rodata
 354 002b 00       		.align	2
 355              	.LC2:
 356 002c 43444320 		.ascii	"CDC Config\000"
 356      436F6E66 
ARM GAS  /tmp/ccgduUiR.s 			page 13


 356      696700
 357              		.section	.text.USBD_FS_ConfigStrDescriptor,"ax",%progbits
 358              		.align	1
 359              		.global	USBD_FS_ConfigStrDescriptor
 360              		.syntax unified
 361              		.thumb
 362              		.thumb_func
 363              		.fpu fpv4-sp-d16
 365              	USBD_FS_ConfigStrDescriptor:
 366              	.LFB138:
 331:Src/usbd_desc.c **** 
 332:Src/usbd_desc.c **** /**
 333:Src/usbd_desc.c ****   * @brief  Return the configuration string descriptor
 334:Src/usbd_desc.c ****   * @param  speed : Current device speed
 335:Src/usbd_desc.c ****   * @param  length : Pointer to data length variable
 336:Src/usbd_desc.c ****   * @retval Pointer to descriptor buffer
 337:Src/usbd_desc.c ****   */
 338:Src/usbd_desc.c **** uint8_t * USBD_FS_ConfigStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 339:Src/usbd_desc.c **** {
 367              		.loc 1 339 1
 368              		.cfi_startproc
 369              		@ args = 0, pretend = 0, frame = 8
 370              		@ frame_needed = 1, uses_anonymous_args = 0
 371 0000 80B5     		push	{r7, lr}
 372              	.LCFI27:
 373              		.cfi_def_cfa_offset 8
 374              		.cfi_offset 7, -8
 375              		.cfi_offset 14, -4
 376 0002 82B0     		sub	sp, sp, #8
 377              	.LCFI28:
 378              		.cfi_def_cfa_offset 16
 379 0004 00AF     		add	r7, sp, #0
 380              	.LCFI29:
 381              		.cfi_def_cfa_register 7
 382 0006 0346     		mov	r3, r0
 383 0008 3960     		str	r1, [r7]
 384 000a FB71     		strb	r3, [r7, #7]
 340:Src/usbd_desc.c ****   if(speed == USBD_SPEED_HIGH)
 385              		.loc 1 340 5
 386 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 387 000e 002B     		cmp	r3, #0
 388 0010 05D1     		bne	.L24
 341:Src/usbd_desc.c ****   {
 342:Src/usbd_desc.c ****     USBD_GetString((uint8_t *)USBD_CONFIGURATION_STRING_FS, USBD_StrDesc, length);
 389              		.loc 1 342 5
 390 0012 3A68     		ldr	r2, [r7]
 391 0014 0749     		ldr	r1, .L27
 392 0016 0848     		ldr	r0, .L27+4
 393 0018 FFF7FEFF 		bl	USBD_GetString
 394 001c 04E0     		b	.L25
 395              	.L24:
 343:Src/usbd_desc.c ****   }
 344:Src/usbd_desc.c ****   else
 345:Src/usbd_desc.c ****   {
 346:Src/usbd_desc.c ****     USBD_GetString((uint8_t *)USBD_CONFIGURATION_STRING_FS, USBD_StrDesc, length);
 396              		.loc 1 346 5
 397 001e 3A68     		ldr	r2, [r7]
ARM GAS  /tmp/ccgduUiR.s 			page 14


 398 0020 0449     		ldr	r1, .L27
 399 0022 0548     		ldr	r0, .L27+4
 400 0024 FFF7FEFF 		bl	USBD_GetString
 401              	.L25:
 347:Src/usbd_desc.c ****   }
 348:Src/usbd_desc.c ****   return USBD_StrDesc;
 402              		.loc 1 348 10
 403 0028 024B     		ldr	r3, .L27
 349:Src/usbd_desc.c **** }
 404              		.loc 1 349 1
 405 002a 1846     		mov	r0, r3
 406 002c 0837     		adds	r7, r7, #8
 407              	.LCFI30:
 408              		.cfi_def_cfa_offset 8
 409 002e BD46     		mov	sp, r7
 410              	.LCFI31:
 411              		.cfi_def_cfa_register 13
 412              		@ sp needed
 413 0030 80BD     		pop	{r7, pc}
 414              	.L28:
 415 0032 00BF     		.align	2
 416              	.L27:
 417 0034 00000000 		.word	USBD_StrDesc
 418 0038 2C000000 		.word	.LC2
 419              		.cfi_endproc
 420              	.LFE138:
 422              		.section	.rodata
 423 0037 00       		.align	2
 424              	.LC3:
 425 0038 43444320 		.ascii	"CDC Interface\000"
 425      496E7465 
 425      72666163 
 425      6500
 426              		.section	.text.USBD_FS_InterfaceStrDescriptor,"ax",%progbits
 427              		.align	1
 428              		.global	USBD_FS_InterfaceStrDescriptor
 429              		.syntax unified
 430              		.thumb
 431              		.thumb_func
 432              		.fpu fpv4-sp-d16
 434              	USBD_FS_InterfaceStrDescriptor:
 435              	.LFB139:
 350:Src/usbd_desc.c **** 
 351:Src/usbd_desc.c **** /**
 352:Src/usbd_desc.c ****   * @brief  Return the interface string descriptor
 353:Src/usbd_desc.c ****   * @param  speed : Current device speed
 354:Src/usbd_desc.c ****   * @param  length : Pointer to data length variable
 355:Src/usbd_desc.c ****   * @retval Pointer to descriptor buffer
 356:Src/usbd_desc.c ****   */
 357:Src/usbd_desc.c **** uint8_t * USBD_FS_InterfaceStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 358:Src/usbd_desc.c **** {
 436              		.loc 1 358 1
 437              		.cfi_startproc
 438              		@ args = 0, pretend = 0, frame = 8
 439              		@ frame_needed = 1, uses_anonymous_args = 0
 440 0000 80B5     		push	{r7, lr}
 441              	.LCFI32:
ARM GAS  /tmp/ccgduUiR.s 			page 15


 442              		.cfi_def_cfa_offset 8
 443              		.cfi_offset 7, -8
 444              		.cfi_offset 14, -4
 445 0002 82B0     		sub	sp, sp, #8
 446              	.LCFI33:
 447              		.cfi_def_cfa_offset 16
 448 0004 00AF     		add	r7, sp, #0
 449              	.LCFI34:
 450              		.cfi_def_cfa_register 7
 451 0006 0346     		mov	r3, r0
 452 0008 3960     		str	r1, [r7]
 453 000a FB71     		strb	r3, [r7, #7]
 359:Src/usbd_desc.c ****   if(speed == 0)
 454              		.loc 1 359 5
 455 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 456 000e 002B     		cmp	r3, #0
 457 0010 05D1     		bne	.L30
 360:Src/usbd_desc.c ****   {
 361:Src/usbd_desc.c ****     USBD_GetString((uint8_t *)USBD_INTERFACE_STRING_FS, USBD_StrDesc, length);
 458              		.loc 1 361 5
 459 0012 3A68     		ldr	r2, [r7]
 460 0014 0749     		ldr	r1, .L33
 461 0016 0848     		ldr	r0, .L33+4
 462 0018 FFF7FEFF 		bl	USBD_GetString
 463 001c 04E0     		b	.L31
 464              	.L30:
 362:Src/usbd_desc.c ****   }
 363:Src/usbd_desc.c ****   else
 364:Src/usbd_desc.c ****   {
 365:Src/usbd_desc.c ****     USBD_GetString((uint8_t *)USBD_INTERFACE_STRING_FS, USBD_StrDesc, length);
 465              		.loc 1 365 5
 466 001e 3A68     		ldr	r2, [r7]
 467 0020 0449     		ldr	r1, .L33
 468 0022 0548     		ldr	r0, .L33+4
 469 0024 FFF7FEFF 		bl	USBD_GetString
 470              	.L31:
 366:Src/usbd_desc.c ****   }
 367:Src/usbd_desc.c ****   return USBD_StrDesc;
 471              		.loc 1 367 10
 472 0028 024B     		ldr	r3, .L33
 368:Src/usbd_desc.c **** }
 473              		.loc 1 368 1
 474 002a 1846     		mov	r0, r3
 475 002c 0837     		adds	r7, r7, #8
 476              	.LCFI35:
 477              		.cfi_def_cfa_offset 8
 478 002e BD46     		mov	sp, r7
 479              	.LCFI36:
 480              		.cfi_def_cfa_register 13
 481              		@ sp needed
 482 0030 80BD     		pop	{r7, pc}
 483              	.L34:
 484 0032 00BF     		.align	2
 485              	.L33:
 486 0034 00000000 		.word	USBD_StrDesc
 487 0038 38000000 		.word	.LC3
 488              		.cfi_endproc
ARM GAS  /tmp/ccgduUiR.s 			page 16


 489              	.LFE139:
 491              		.section	.text.USBD_FS_USR_BOSDescriptor,"ax",%progbits
 492              		.align	1
 493              		.global	USBD_FS_USR_BOSDescriptor
 494              		.syntax unified
 495              		.thumb
 496              		.thumb_func
 497              		.fpu fpv4-sp-d16
 499              	USBD_FS_USR_BOSDescriptor:
 500              	.LFB140:
 369:Src/usbd_desc.c **** 
 370:Src/usbd_desc.c **** #if (USBD_LPM_ENABLED == 1)
 371:Src/usbd_desc.c **** /**
 372:Src/usbd_desc.c ****   * @brief  Return the BOS descriptor
 373:Src/usbd_desc.c ****   * @param  speed : Current device speed
 374:Src/usbd_desc.c ****   * @param  length : Pointer to data length variable
 375:Src/usbd_desc.c ****   * @retval Pointer to descriptor buffer
 376:Src/usbd_desc.c ****   */
 377:Src/usbd_desc.c **** uint8_t * USBD_FS_USR_BOSDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 378:Src/usbd_desc.c **** {
 501              		.loc 1 378 1
 502              		.cfi_startproc
 503              		@ args = 0, pretend = 0, frame = 8
 504              		@ frame_needed = 1, uses_anonymous_args = 0
 505              		@ link register save eliminated.
 506 0000 80B4     		push	{r7}
 507              	.LCFI37:
 508              		.cfi_def_cfa_offset 4
 509              		.cfi_offset 7, -4
 510 0002 83B0     		sub	sp, sp, #12
 511              	.LCFI38:
 512              		.cfi_def_cfa_offset 16
 513 0004 00AF     		add	r7, sp, #0
 514              	.LCFI39:
 515              		.cfi_def_cfa_register 7
 516 0006 0346     		mov	r3, r0
 517 0008 3960     		str	r1, [r7]
 518 000a FB71     		strb	r3, [r7, #7]
 379:Src/usbd_desc.c ****   UNUSED(speed);
 380:Src/usbd_desc.c ****   *length = sizeof(USBD_FS_BOSDesc);
 519              		.loc 1 380 11
 520 000c 3B68     		ldr	r3, [r7]
 521 000e 0C22     		movs	r2, #12
 522 0010 1A80     		strh	r2, [r3]	@ movhi
 381:Src/usbd_desc.c ****   return (uint8_t*)USBD_FS_BOSDesc;
 523              		.loc 1 381 10
 524 0012 034B     		ldr	r3, .L37
 382:Src/usbd_desc.c **** }
 525              		.loc 1 382 1
 526 0014 1846     		mov	r0, r3
 527 0016 0C37     		adds	r7, r7, #12
 528              	.LCFI40:
 529              		.cfi_def_cfa_offset 4
 530 0018 BD46     		mov	sp, r7
 531              	.LCFI41:
 532              		.cfi_def_cfa_register 13
 533              		@ sp needed
ARM GAS  /tmp/ccgduUiR.s 			page 17


 534 001a 5DF8047B 		ldr	r7, [sp], #4
 535              	.LCFI42:
 536              		.cfi_restore 7
 537              		.cfi_def_cfa_offset 0
 538 001e 7047     		bx	lr
 539              	.L38:
 540              		.align	2
 541              	.L37:
 542 0020 00000000 		.word	USBD_FS_BOSDesc
 543              		.cfi_endproc
 544              	.LFE140:
 546              		.section	.text.Get_SerialNum,"ax",%progbits
 547              		.align	1
 548              		.syntax unified
 549              		.thumb
 550              		.thumb_func
 551              		.fpu fpv4-sp-d16
 553              	Get_SerialNum:
 554              	.LFB141:
 383:Src/usbd_desc.c **** #endif /* (USBD_LPM_ENABLED == 1) */
 384:Src/usbd_desc.c **** 
 385:Src/usbd_desc.c **** /**
 386:Src/usbd_desc.c ****   * @brief  Create the serial number string descriptor 
 387:Src/usbd_desc.c ****   * @param  None 
 388:Src/usbd_desc.c ****   * @retval None
 389:Src/usbd_desc.c ****   */
 390:Src/usbd_desc.c **** static void Get_SerialNum(void)
 391:Src/usbd_desc.c **** {
 555              		.loc 1 391 1
 556              		.cfi_startproc
 557              		@ args = 0, pretend = 0, frame = 16
 558              		@ frame_needed = 1, uses_anonymous_args = 0
 559 0000 80B5     		push	{r7, lr}
 560              	.LCFI43:
 561              		.cfi_def_cfa_offset 8
 562              		.cfi_offset 7, -8
 563              		.cfi_offset 14, -4
 564 0002 84B0     		sub	sp, sp, #16
 565              	.LCFI44:
 566              		.cfi_def_cfa_offset 24
 567 0004 00AF     		add	r7, sp, #0
 568              	.LCFI45:
 569              		.cfi_def_cfa_register 7
 392:Src/usbd_desc.c ****   uint32_t deviceserial0, deviceserial1, deviceserial2;
 393:Src/usbd_desc.c **** 
 394:Src/usbd_desc.c ****   deviceserial0 = *(uint32_t *) DEVICE_ID1;
 570              		.loc 1 394 19
 571 0006 0F4B     		ldr	r3, .L42
 572              		.loc 1 394 17
 573 0008 1B68     		ldr	r3, [r3]
 574 000a FB60     		str	r3, [r7, #12]
 395:Src/usbd_desc.c ****   deviceserial1 = *(uint32_t *) DEVICE_ID2;
 575              		.loc 1 395 19
 576 000c 0E4B     		ldr	r3, .L42+4
 577              		.loc 1 395 17
 578 000e 1B68     		ldr	r3, [r3]
 579 0010 BB60     		str	r3, [r7, #8]
ARM GAS  /tmp/ccgduUiR.s 			page 18


 396:Src/usbd_desc.c ****   deviceserial2 = *(uint32_t *) DEVICE_ID3;
 580              		.loc 1 396 19
 581 0012 0E4B     		ldr	r3, .L42+8
 582              		.loc 1 396 17
 583 0014 1B68     		ldr	r3, [r3]
 584 0016 7B60     		str	r3, [r7, #4]
 397:Src/usbd_desc.c **** 
 398:Src/usbd_desc.c ****   deviceserial0 += deviceserial2;
 585              		.loc 1 398 17
 586 0018 FA68     		ldr	r2, [r7, #12]
 587 001a 7B68     		ldr	r3, [r7, #4]
 588 001c 1344     		add	r3, r3, r2
 589 001e FB60     		str	r3, [r7, #12]
 399:Src/usbd_desc.c **** 
 400:Src/usbd_desc.c ****   if (deviceserial0 != 0)
 590              		.loc 1 400 6
 591 0020 FB68     		ldr	r3, [r7, #12]
 592 0022 002B     		cmp	r3, #0
 593 0024 09D0     		beq	.L41
 401:Src/usbd_desc.c ****   {
 402:Src/usbd_desc.c ****     IntToUnicode(deviceserial0, &USBD_StringSerial[2], 8);
 594              		.loc 1 402 5
 595 0026 0822     		movs	r2, #8
 596 0028 0949     		ldr	r1, .L42+12
 597 002a F868     		ldr	r0, [r7, #12]
 598 002c FFF7FEFF 		bl	IntToUnicode
 403:Src/usbd_desc.c ****     IntToUnicode(deviceserial1, &USBD_StringSerial[18], 4);
 599              		.loc 1 403 5
 600 0030 0422     		movs	r2, #4
 601 0032 0849     		ldr	r1, .L42+16
 602 0034 B868     		ldr	r0, [r7, #8]
 603 0036 FFF7FEFF 		bl	IntToUnicode
 604              	.L41:
 404:Src/usbd_desc.c ****   }
 405:Src/usbd_desc.c **** }
 605              		.loc 1 405 1
 606 003a 00BF     		nop
 607 003c 1037     		adds	r7, r7, #16
 608              	.LCFI46:
 609              		.cfi_def_cfa_offset 8
 610 003e BD46     		mov	sp, r7
 611              	.LCFI47:
 612              		.cfi_def_cfa_register 13
 613              		@ sp needed
 614 0040 80BD     		pop	{r7, pc}
 615              	.L43:
 616 0042 00BF     		.align	2
 617              	.L42:
 618 0044 9075FF1F 		.word	536835472
 619 0048 9475FF1F 		.word	536835476
 620 004c 9875FF1F 		.word	536835480
 621 0050 02000000 		.word	USBD_StringSerial+2
 622 0054 12000000 		.word	USBD_StringSerial+18
 623              		.cfi_endproc
 624              	.LFE141:
 626              		.section	.text.IntToUnicode,"ax",%progbits
 627              		.align	1
ARM GAS  /tmp/ccgduUiR.s 			page 19


 628              		.syntax unified
 629              		.thumb
 630              		.thumb_func
 631              		.fpu fpv4-sp-d16
 633              	IntToUnicode:
 634              	.LFB142:
 406:Src/usbd_desc.c **** 
 407:Src/usbd_desc.c **** /**
 408:Src/usbd_desc.c ****   * @brief  Convert Hex 32Bits value into char 
 409:Src/usbd_desc.c ****   * @param  value: value to convert
 410:Src/usbd_desc.c ****   * @param  pbuf: pointer to the buffer 
 411:Src/usbd_desc.c ****   * @param  len: buffer length
 412:Src/usbd_desc.c ****   * @retval None
 413:Src/usbd_desc.c ****   */
 414:Src/usbd_desc.c **** static void IntToUnicode(uint32_t value, uint8_t * pbuf, uint8_t len)
 415:Src/usbd_desc.c **** {
 635              		.loc 1 415 1
 636              		.cfi_startproc
 637              		@ args = 0, pretend = 0, frame = 24
 638              		@ frame_needed = 1, uses_anonymous_args = 0
 639              		@ link register save eliminated.
 640 0000 80B4     		push	{r7}
 641              	.LCFI48:
 642              		.cfi_def_cfa_offset 4
 643              		.cfi_offset 7, -4
 644 0002 87B0     		sub	sp, sp, #28
 645              	.LCFI49:
 646              		.cfi_def_cfa_offset 32
 647 0004 00AF     		add	r7, sp, #0
 648              	.LCFI50:
 649              		.cfi_def_cfa_register 7
 650 0006 F860     		str	r0, [r7, #12]
 651 0008 B960     		str	r1, [r7, #8]
 652 000a 1346     		mov	r3, r2
 653 000c FB71     		strb	r3, [r7, #7]
 416:Src/usbd_desc.c ****   uint8_t idx = 0;
 654              		.loc 1 416 11
 655 000e 0023     		movs	r3, #0
 656 0010 FB75     		strb	r3, [r7, #23]
 417:Src/usbd_desc.c **** 
 418:Src/usbd_desc.c ****   for (idx = 0; idx < len; idx++)
 657              		.loc 1 418 12
 658 0012 0023     		movs	r3, #0
 659 0014 FB75     		strb	r3, [r7, #23]
 660              		.loc 1 418 3
 661 0016 27E0     		b	.L45
 662              	.L48:
 419:Src/usbd_desc.c ****   {
 420:Src/usbd_desc.c ****     if (((value >> 28)) < 0xA)
 663              		.loc 1 420 17
 664 0018 FB68     		ldr	r3, [r7, #12]
 665 001a 1B0F     		lsrs	r3, r3, #28
 666              		.loc 1 420 8
 667 001c 092B     		cmp	r3, #9
 668 001e 0BD8     		bhi	.L46
 421:Src/usbd_desc.c ****     {
 422:Src/usbd_desc.c ****       pbuf[2 * idx] = (value >> 28) + '0';
ARM GAS  /tmp/ccgduUiR.s 			page 20


 669              		.loc 1 422 30
 670 0020 FB68     		ldr	r3, [r7, #12]
 671 0022 1B0F     		lsrs	r3, r3, #28
 672              		.loc 1 422 37
 673 0024 DAB2     		uxtb	r2, r3
 674              		.loc 1 422 14
 675 0026 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 676 0028 5B00     		lsls	r3, r3, #1
 677 002a 1946     		mov	r1, r3
 678              		.loc 1 422 11
 679 002c BB68     		ldr	r3, [r7, #8]
 680 002e 0B44     		add	r3, r3, r1
 681              		.loc 1 422 37
 682 0030 3032     		adds	r2, r2, #48
 683 0032 D2B2     		uxtb	r2, r2
 684              		.loc 1 422 21
 685 0034 1A70     		strb	r2, [r3]
 686 0036 0AE0     		b	.L47
 687              	.L46:
 423:Src/usbd_desc.c ****     }
 424:Src/usbd_desc.c ****     else
 425:Src/usbd_desc.c ****     {
 426:Src/usbd_desc.c ****       pbuf[2 * idx] = (value >> 28) + 'A' - 10;
 688              		.loc 1 426 30
 689 0038 FB68     		ldr	r3, [r7, #12]
 690 003a 1B0F     		lsrs	r3, r3, #28
 691              		.loc 1 426 43
 692 003c DAB2     		uxtb	r2, r3
 693              		.loc 1 426 14
 694 003e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 695 0040 5B00     		lsls	r3, r3, #1
 696 0042 1946     		mov	r1, r3
 697              		.loc 1 426 11
 698 0044 BB68     		ldr	r3, [r7, #8]
 699 0046 0B44     		add	r3, r3, r1
 700              		.loc 1 426 43
 701 0048 3732     		adds	r2, r2, #55
 702 004a D2B2     		uxtb	r2, r2
 703              		.loc 1 426 21
 704 004c 1A70     		strb	r2, [r3]
 705              	.L47:
 427:Src/usbd_desc.c ****     }
 428:Src/usbd_desc.c **** 
 429:Src/usbd_desc.c ****     value = value << 4;
 706              		.loc 1 429 11 discriminator 2
 707 004e FB68     		ldr	r3, [r7, #12]
 708 0050 1B01     		lsls	r3, r3, #4
 709 0052 FB60     		str	r3, [r7, #12]
 430:Src/usbd_desc.c **** 
 431:Src/usbd_desc.c ****     pbuf[2 * idx + 1] = 0;
 710              		.loc 1 431 12 discriminator 2
 711 0054 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 712 0056 5B00     		lsls	r3, r3, #1
 713              		.loc 1 431 9 discriminator 2
 714 0058 0133     		adds	r3, r3, #1
 715 005a BA68     		ldr	r2, [r7, #8]
 716 005c 1344     		add	r3, r3, r2
ARM GAS  /tmp/ccgduUiR.s 			page 21


 717              		.loc 1 431 23 discriminator 2
 718 005e 0022     		movs	r2, #0
 719 0060 1A70     		strb	r2, [r3]
 418:Src/usbd_desc.c ****   {
 720              		.loc 1 418 31 discriminator 2
 721 0062 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 722 0064 0133     		adds	r3, r3, #1
 723 0066 FB75     		strb	r3, [r7, #23]
 724              	.L45:
 418:Src/usbd_desc.c ****   {
 725              		.loc 1 418 3 discriminator 1
 726 0068 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 727 006a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 728 006c 9A42     		cmp	r2, r3
 729 006e D3D3     		bcc	.L48
 432:Src/usbd_desc.c ****   }
 433:Src/usbd_desc.c **** }
 730              		.loc 1 433 1
 731 0070 00BF     		nop
 732 0072 00BF     		nop
 733 0074 1C37     		adds	r7, r7, #28
 734              	.LCFI51:
 735              		.cfi_def_cfa_offset 4
 736 0076 BD46     		mov	sp, r7
 737              	.LCFI52:
 738              		.cfi_def_cfa_register 13
 739              		@ sp needed
 740 0078 5DF8047B 		ldr	r7, [sp], #4
 741              	.LCFI53:
 742              		.cfi_restore 7
 743              		.cfi_def_cfa_offset 0
 744 007c 7047     		bx	lr
 745              		.cfi_endproc
 746              	.LFE142:
 748              		.text
 749              	.Letext0:
 750              		.file 2 "/home/ilian/opt/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/include/machine/_default
 751              		.file 3 "/home/ilian/opt/gcc-arm-none-eabi-9-2020-q2-update/lib/gcc/arm-none-eabi/9.3.1/include/st
 752              		.file 4 "/home/ilian/opt/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/include/sys/_types.h"
 753              		.file 5 "/home/ilian/opt/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/include/sys/reent.h"
 754              		.file 6 "/home/ilian/opt/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/include/sys/lock.h"
 755              		.file 7 "/home/ilian/opt/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/include/sys/_stdint.h"
 756              		.file 8 "/home/ilian/opt/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/include/stdlib.h"
 757              		.file 9 "Drivers/CMSIS/Include/core_cm4.h"
 758              		.file 10 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/system_stm32l4xx.h"
 759              		.file 11 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 760              		.file 12 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_flash.h"
 761              		.file 13 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
 762              		.file 14 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_def.h"
 763              		.file 15 "Inc/usbd_desc.h"
ARM GAS  /tmp/ccgduUiR.s 			page 22


DEFINED SYMBOLS
                            *ABS*:0000000000000000 usbd_desc.c
     /tmp/ccgduUiR.s:22     .data.FS_Desc:0000000000000000 FS_Desc
     /tmp/ccgduUiR.s:19     .data.FS_Desc:0000000000000000 $d
     /tmp/ccgduUiR.s:71     .text.USBD_FS_DeviceDescriptor:0000000000000000 USBD_FS_DeviceDescriptor
     /tmp/ccgduUiR.s:127    .text.USBD_FS_LangIDStrDescriptor:0000000000000000 USBD_FS_LangIDStrDescriptor
     /tmp/ccgduUiR.s:255    .text.USBD_FS_ManufacturerStrDescriptor:0000000000000000 USBD_FS_ManufacturerStrDescriptor
     /tmp/ccgduUiR.s:186    .text.USBD_FS_ProductStrDescriptor:0000000000000000 USBD_FS_ProductStrDescriptor
     /tmp/ccgduUiR.s:308    .text.USBD_FS_SerialStrDescriptor:0000000000000000 USBD_FS_SerialStrDescriptor
     /tmp/ccgduUiR.s:365    .text.USBD_FS_ConfigStrDescriptor:0000000000000000 USBD_FS_ConfigStrDescriptor
     /tmp/ccgduUiR.s:434    .text.USBD_FS_InterfaceStrDescriptor:0000000000000000 USBD_FS_InterfaceStrDescriptor
     /tmp/ccgduUiR.s:499    .text.USBD_FS_USR_BOSDescriptor:0000000000000000 USBD_FS_USR_BOSDescriptor
     /tmp/ccgduUiR.s:36     .data.USBD_FS_DeviceDesc:0000000000000000 USBD_FS_DeviceDesc
     /tmp/ccgduUiR.s:33     .data.USBD_FS_DeviceDesc:0000000000000000 $d
     /tmp/ccgduUiR.s:44     .data.USBD_FS_BOSDesc:0000000000000000 USBD_FS_BOSDesc
     /tmp/ccgduUiR.s:41     .data.USBD_FS_BOSDesc:0000000000000000 $d
     /tmp/ccgduUiR.s:51     .data.USBD_LangIDDesc:0000000000000000 USBD_LangIDDesc
     /tmp/ccgduUiR.s:48     .data.USBD_LangIDDesc:0000000000000000 $d
                            *COM*:0000000000000200 USBD_StrDesc
     /tmp/ccgduUiR.s:59     .data.USBD_StringSerial:0000000000000000 USBD_StringSerial
     /tmp/ccgduUiR.s:56     .data.USBD_StringSerial:0000000000000000 $d
     /tmp/ccgduUiR.s:63     .text.USBD_FS_DeviceDescriptor:0000000000000000 $t
     /tmp/ccgduUiR.s:115    .text.USBD_FS_DeviceDescriptor:0000000000000020 $d
     /tmp/ccgduUiR.s:120    .text.USBD_FS_LangIDStrDescriptor:0000000000000000 $t
     /tmp/ccgduUiR.s:170    .text.USBD_FS_LangIDStrDescriptor:0000000000000020 $d
     /tmp/ccgduUiR.s:175    .rodata:0000000000000000 $d
     /tmp/ccgduUiR.s:179    .text.USBD_FS_ProductStrDescriptor:0000000000000000 $t
     /tmp/ccgduUiR.s:238    .text.USBD_FS_ProductStrDescriptor:0000000000000034 $d
     /tmp/ccgduUiR.s:248    .text.USBD_FS_ManufacturerStrDescriptor:0000000000000000 $t
     /tmp/ccgduUiR.s:295    .text.USBD_FS_ManufacturerStrDescriptor:0000000000000020 $d
     /tmp/ccgduUiR.s:301    .text.USBD_FS_SerialStrDescriptor:0000000000000000 $t
     /tmp/ccgduUiR.s:553    .text.Get_SerialNum:0000000000000000 Get_SerialNum
     /tmp/ccgduUiR.s:349    .text.USBD_FS_SerialStrDescriptor:0000000000000020 $d
     /tmp/ccgduUiR.s:358    .text.USBD_FS_ConfigStrDescriptor:0000000000000000 $t
     /tmp/ccgduUiR.s:417    .text.USBD_FS_ConfigStrDescriptor:0000000000000034 $d
     /tmp/ccgduUiR.s:427    .text.USBD_FS_InterfaceStrDescriptor:0000000000000000 $t
     /tmp/ccgduUiR.s:486    .text.USBD_FS_InterfaceStrDescriptor:0000000000000034 $d
     /tmp/ccgduUiR.s:492    .text.USBD_FS_USR_BOSDescriptor:0000000000000000 $t
     /tmp/ccgduUiR.s:542    .text.USBD_FS_USR_BOSDescriptor:0000000000000020 $d
     /tmp/ccgduUiR.s:547    .text.Get_SerialNum:0000000000000000 $t
     /tmp/ccgduUiR.s:633    .text.IntToUnicode:0000000000000000 IntToUnicode
     /tmp/ccgduUiR.s:618    .text.Get_SerialNum:0000000000000044 $d
     /tmp/ccgduUiR.s:627    .text.IntToUnicode:0000000000000000 $t

UNDEFINED SYMBOLS
USBD_GetString
