ARM GAS  /tmp/ccwaNkAs.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32l4xx_hal_rcc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_RCC_DeInit,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_RCC_DeInit
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	HAL_RCC_DeInit:
  27              	.LFB130:
  28              		.file 1 "Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c"
   1:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /**
   2:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   ******************************************************************************
   3:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @file    stm32l4xx_hal_rcc.c
   4:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @author  MCD Application Team
   5:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @brief   RCC HAL module driver.
   6:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *          functionalities of the Reset and Clock Control (RCC) peripheral:
   8:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *           + Peripheral Control functions
  10:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *
  11:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   @verbatim
  12:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   ==============================================================================
  13:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                       ##### RCC specific features #####
  14:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   ==============================================================================
  15:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     [..]
  16:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       After reset the device is running from Multiple Speed Internal oscillator
  17:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       (4 MHz) with Flash 0 wait state. Flash prefetch buffer, D-Cache
  18:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       and I-Cache are disabled, and all peripherals are off except internal
  19:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       SRAM, Flash and JTAG.
  20:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
  21:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       (+) There is no prescaler on High speed (AHBs) and Low speed (APBs) busses:
  22:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           all peripherals mapped on these busses are running at MSI speed.
  23:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       (+) The clock for all peripherals is switched off, except the SRAM and FLASH.
  24:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       (+) All GPIOs are in analog mode, except the JTAG pins which
  25:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           are assigned to be used for debug purpose.
  26:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
  27:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     [..]
  28:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       Once the device started from reset, the user application has to:
  29:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       (+) Configure the clock source to be used to drive the System clock
  30:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           (if the application needs higher frequency/performance)
ARM GAS  /tmp/ccwaNkAs.s 			page 2


  31:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       (+) Configure the System clock frequency and Flash settings
  32:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       (+) Configure the AHB and APB busses prescalers
  33:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       (+) Enable the clock for the peripheral(s) to be used
  34:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       (+) Configure the clock source(s) for peripherals which clocks are not
  35:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           derived from the System clock (SAIx, RTC, ADC, USB OTG FS/SDMMC1/RNG)
  36:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
  37:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   @endverbatim
  38:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   ******************************************************************************
  39:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @attention
  40:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *
  41:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
  42:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * All rights reserved.</center></h2>
  43:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *
  44:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  45:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * the "License"; You may not use this file except in compliance with the
  46:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * License. You may obtain a copy of the License at:
  47:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *                        opensource.org/licenses/BSD-3-Clause
  48:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *
  49:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   ******************************************************************************
  50:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
  51:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
  52:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /* Includes ------------------------------------------------------------------*/
  53:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #include "stm32l4xx_hal.h"
  54:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
  55:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /** @addtogroup STM32L4xx_HAL_Driver
  56:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @{
  57:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
  58:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
  59:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /** @defgroup RCC RCC
  60:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @brief RCC HAL module driver
  61:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @{
  62:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
  63:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
  64:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #ifdef HAL_RCC_MODULE_ENABLED
  65:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
  66:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /* Private typedef -----------------------------------------------------------*/
  67:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /* Private define ------------------------------------------------------------*/
  68:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /** @defgroup RCC_Private_Constants RCC Private Constants
  69:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****  * @{
  70:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****  */
  71:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #define HSE_TIMEOUT_VALUE          HSE_STARTUP_TIMEOUT
  72:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #define HSI_TIMEOUT_VALUE          2U    /* 2 ms (minimum Tick + 1) */
  73:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #define MSI_TIMEOUT_VALUE          2U    /* 2 ms (minimum Tick + 1) */
  74:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_CSR_LSIPREDIV)
  75:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #define LSI_TIMEOUT_VALUE          17U   /* 17 ms (16 ms starting time + 1) */
  76:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #else
  77:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #define LSI_TIMEOUT_VALUE          2U    /* 2 ms (minimum Tick + 1) */
  78:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_CSR_LSIPREDIV */
  79:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #define HSI48_TIMEOUT_VALUE        2U    /* 2 ms (minimum Tick + 1) */
  80:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #define PLL_TIMEOUT_VALUE          2U    /* 2 ms (minimum Tick + 1) */
  81:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #define CLOCKSWITCH_TIMEOUT_VALUE  5000U /* 5 s    */
  82:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /**
  83:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @}
  84:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
  85:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
  86:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /* Private macro -------------------------------------------------------------*/
  87:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /** @defgroup RCC_Private_Macros RCC Private Macros
ARM GAS  /tmp/ccwaNkAs.s 			page 3


  88:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @{
  89:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
  90:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #define __MCO1_CLK_ENABLE()   __HAL_RCC_GPIOA_CLK_ENABLE()
  91:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #define MCO1_GPIO_PORT        GPIOA
  92:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #define MCO1_PIN              GPIO_PIN_8
  93:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
  94:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #define RCC_PLL_OSCSOURCE_CONFIG(__HAL_RCC_PLLSOURCE__) \
  95:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             (MODIFY_REG(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC, (__HAL_RCC_PLLSOURCE__)))
  96:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /**
  97:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @}
  98:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
  99:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 100:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /* Private variables ---------------------------------------------------------*/
 101:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 102:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /* Private function prototypes -----------------------------------------------*/
 103:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /** @defgroup RCC_Private_Functions RCC Private Functions
 104:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @{
 105:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
 106:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** static HAL_StatusTypeDef RCC_SetFlashLatencyFromMSIRange(uint32_t msirange);
 107:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(STM32L4P5xx) || defined(STM32L4Q5xx) || \
 108:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     defined(STM32L4R5xx) || defined(STM32L4R7xx) || defined(STM32L4R9xx) || defined(STM32L4S5xx) ||
 109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** static uint32_t          RCC_GetSysClockFreqFromPLLSource(void);
 110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif
 111:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /**
 112:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @}
 113:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
 114:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 115:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /* Exported functions --------------------------------------------------------*/
 116:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 117:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions RCC Exported Functions
 118:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @{
 119:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
 120:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 121:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group1 Initialization and de-initialization functions
 122:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *  @brief    Initialization and Configuration functions
 123:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *
 124:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   @verbatim
 125:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****  ===============================================================================
 126:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            ##### Initialization and de-initialization functions #####
 127:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****  ===============================================================================
 128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     [..]
 129:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       This section provides functions allowing to configure the internal and external oscillators
 130:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       (HSE, HSI, LSE, MSI, LSI, PLL, CSS and MCO) and the System busses clocks (SYSCLK, AHB, APB1
 131:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****        and APB2).
 132:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 133:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     [..] Internal/external clock and PLL configuration
 134:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****          (+) HSI (high-speed internal): 16 MHz factory-trimmed RC used directly or through
 135:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****              the PLL as System clock source.
 136:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 137:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****          (+) MSI (Mutiple Speed Internal): Its frequency is software trimmable from 100KHZ to 48MHZ
 138:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****              It can be used to generate the clock for the USB OTG FS (48 MHz).
 139:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****              The number of flash wait states is automatically adjusted when MSI range is updated wi
 140:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****              HAL_RCC_OscConfig() and the MSI is used as System clock source.
 141:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 142:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****          (+) LSI (low-speed internal): 32 KHz low consumption RC used as IWDG and/or RTC
 143:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****              clock source.
 144:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
ARM GAS  /tmp/ccwaNkAs.s 			page 4


 145:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****          (+) HSE (high-speed external): 4 to 48 MHz crystal oscillator used directly or
 146:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****              through the PLL as System clock source. Can be used also optionally as RTC clock sourc
 147:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 148:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****          (+) LSE (low-speed external): 32.768 KHz oscillator used optionally as RTC clock source.
 149:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****          (+) PLL (clocked by HSI, HSE or MSI) providing up to three independent output clocks:
 151:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            (++) The first output is used to generate the high speed system clock (up to 80MHz).
 152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            (++) The second output is used to generate the clock for the USB OTG FS (48 MHz),
 153:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                 the random analog generator (<=48 MHz) and the SDMMC1 (<= 48 MHz).
 154:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            (++) The third output is used to generate an accurate clock to achieve
 155:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                 high-quality audio performance on SAI interface.
 156:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 157:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****          (+) PLLSAI1 (clocked by HSI, HSE or MSI) providing up to three independent output clocks:
 158:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            (++) The first output is used to generate SAR ADC1 clock.
 159:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            (++) The second output is used to generate the clock for the USB OTG FS (48 MHz),
 160:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                 the random analog generator (<=48 MHz) and the SDMMC1 (<= 48 MHz).
 161:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            (++) The third output is used to generate an accurate clock to achieve
 162:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                 high-quality audio performance on SAI interface.
 163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****          (+) PLLSAI2 (clocked by HSI, HSE or MSI) providing up to three independent output clocks:
 165:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            (++) The first output is used to generate an accurate clock to achieve
 166:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                 high-quality audio performance on SAI interface.
 167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            (++) The second output is used to generate either SAR ADC2 clock if ADC2 is present
 168:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                 or LCD clock if LTDC is present.
 169:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            (++) The third output is used to generate DSI clock if DSI is present.
 170:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 171:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****          (+) CSS (Clock security system): once enabled, if a HSE clock failure occurs
 172:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             (HSE used directly or through PLL as System clock source), the System clock
 173:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****              is automatically switched to HSI and an interrupt is generated if enabled.
 174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****              The interrupt is linked to the Cortex-M4 NMI (Non-Maskable Interrupt)
 175:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****              exception vector.
 176:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 177:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****          (+) MCO (microcontroller clock output): used to output MSI, LSI, HSI, LSE, HSE or
 178:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****              main PLL clock (through a configurable prescaler) on PA8 pin.
 179:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 180:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     [..] System, AHB and APB busses clocks configuration
 181:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****          (+) Several clock sources can be used to drive the System clock (SYSCLK): MSI, HSI,
 182:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****              HSE and main PLL.
 183:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****              The AHB clock (HCLK) is derived from System clock through configurable
 184:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****              prescaler and used to clock the CPU, memory and peripherals mapped
 185:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****              on AHB bus (DMA, GPIO...). APB1 (PCLK1) and APB2 (PCLK2) clocks are derived
 186:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****              from AHB clock through configurable prescalers and used to clock
 187:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****              the peripherals mapped on these busses. You can use
 188:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****              "HAL_RCC_GetSysClockFreq()" function to retrieve the frequencies of these clocks.
 189:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 190:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****          -@- All the peripheral clocks are derived from the System clock (SYSCLK) except:
 191:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 192:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            (+@) SAI: the SAI clock can be derived either from a specific PLL (PLLSAI1) or (PLLSAI2)
 193:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                 from an external clock mapped on the SAI_CKIN pin.
 194:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                 You have to use HAL_RCCEx_PeriphCLKConfig() function to configure this clock.
 195:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            (+@) RTC: the RTC clock can be derived either from the LSI, LSE or HSE clock
 196:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                 divided by 2 to 31.
 197:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                 You have to use __HAL_RCC_RTC_ENABLE() and HAL_RCCEx_PeriphCLKConfig() function
 198:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                 to configure this clock.
 199:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            (+@) USB OTG FS, SDMMC1 and RNG: USB OTG FS requires a frequency equal to 48 MHz
 200:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                 to work correctly, while the SDMMC1 and RNG peripherals require a frequency
 201:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                 equal or lower than to 48 MHz. This clock is derived of the main PLL or PLLSAI1
ARM GAS  /tmp/ccwaNkAs.s 			page 5


 202:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                 through PLLQ divider. You have to enable the peripheral clock and use
 203:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                 HAL_RCCEx_PeriphCLKConfig() function to configure this clock.
 204:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            (+@) IWDG clock which is always the LSI clock.
 205:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 206:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 207:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****          (+) The maximum frequency of the SYSCLK, HCLK, PCLK1 and PCLK2 is 80 MHz.
 208:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****              The clock source frequency should be adapted depending on the device voltage range
 209:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****              as listed in the Reference Manual "Clock source frequency versus voltage scaling" chap
 210:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 211:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   @endverbatim
 212:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 213:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            Table 1. HCLK clock frequency for other STM32L4 devices
 214:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            +-------------------------------------------------------+
 215:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            | Latency         |    HCLK clock frequency (MHz)       |
 216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |                 |-------------------------------------|
 217:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |                 | voltage range 1  | voltage range 2  |
 218:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |                 |      1.2 V       |     1.0 V        |
 219:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |-----------------|------------------|------------------|
 220:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |0WS(1 CPU cycles)|  0 < HCLK <= 16  |  0 < HCLK <= 6   |
 221:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |-----------------|------------------|------------------|
 222:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |1WS(2 CPU cycles)| 16 < HCLK <= 32  |  6 < HCLK <= 12  |
 223:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |-----------------|------------------|------------------|
 224:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |2WS(3 CPU cycles)| 32 < HCLK <= 48  | 12 < HCLK <= 18  |
 225:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |-----------------|------------------|------------------|
 226:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |3WS(4 CPU cycles)| 48 < HCLK <= 64  | 18 < HCLK <= 26  |
 227:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |-----------------|------------------|------------------|
 228:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |4WS(5 CPU cycles)| 64 < HCLK <= 80  | 18 < HCLK <= 26  |
 229:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            +-------------------------------------------------------+
 230:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 231:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            Table 2. HCLK clock frequency for STM32L4+ devices
 232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            +--------------------------------------------------------+
 233:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            | Latency         |     HCLK clock frequency (MHz)       |
 234:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |                 |--------------------------------------|
 235:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |                 |  voltage range 1  | voltage range 2  |
 236:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |                 |       1.2 V       |     1.0 V        |
 237:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |-----------------|-------------------|------------------|
 238:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |0WS(1 CPU cycles)|   0 < HCLK <= 20  |  0 < HCLK <= 8   |
 239:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |-----------------|-------------------|------------------|
 240:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |1WS(2 CPU cycles)|  20 < HCLK <= 40  |  8 < HCLK <= 16  |
 241:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |-----------------|-------------------|------------------|
 242:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |2WS(3 CPU cycles)|  40 < HCLK <= 60  | 16 < HCLK <= 26  |
 243:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |-----------------|-------------------|------------------|
 244:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |3WS(4 CPU cycles)|  60 < HCLK <= 80  | 16 < HCLK <= 26  |
 245:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |-----------------|-------------------|------------------|
 246:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |4WS(5 CPU cycles)|  80 < HCLK <= 100 | 16 < HCLK <= 26  |
 247:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |-----------------|-------------------|------------------|
 248:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |5WS(6 CPU cycles)| 100 < HCLK <= 120 | 16 < HCLK <= 26  |
 249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            +--------------------------------------------------------+
 250:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @{
 251:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
 252:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 253:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /**
 254:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @brief  Reset the RCC clock configuration to the default reset state.
 255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   The default reset state of the clock configuration is given below:
 256:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            - MSI ON and used as system clock source
 257:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            - HSE, HSI, PLL, PLLSAI1 and PLLSAI2 OFF
 258:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            - AHB, APB1 and APB2 prescalers set to 1.
ARM GAS  /tmp/ccwaNkAs.s 			page 6


 259:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            - CSS, MCO1 OFF
 260:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            - All interrupts disabled
 261:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            - All interrupt and reset flags cleared
 262:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   This function does not modify the configuration of the
 263:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            - Peripheral clock sources
 264:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            - LSI, LSE and RTC clocks (Backup domain)
 265:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @retval HAL status
 266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
 267:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_DeInit(void)
 268:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** {
  29              		.loc 1 268 1
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 8
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33 0000 80B5     		push	{r7, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 82B0     		sub	sp, sp, #8
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 16
  41 0004 00AF     		add	r7, sp, #0
  42              	.LCFI2:
  43              		.cfi_def_cfa_register 7
 269:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   uint32_t tickstart;
 270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 271:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Reset to default System clock */
 272:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Set MSION bit */
 273:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   SET_BIT(RCC->CR, RCC_CR_MSION);
  44              		.loc 1 273 3
  45 0006 454B     		ldr	r3, .L10
  46 0008 1B68     		ldr	r3, [r3]
  47 000a 444A     		ldr	r2, .L10
  48 000c 43F00103 		orr	r3, r3, #1
  49 0010 1360     		str	r3, [r2]
 274:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 275:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Insure MSIRDY bit is set before writing default MSIRANGE value */
 276:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Get start tick */
 277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   tickstart = HAL_GetTick();
  50              		.loc 1 277 15
  51 0012 FFF7FEFF 		bl	HAL_GetTick
  52 0016 7860     		str	r0, [r7, #4]
 278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 279:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Wait till MSI is ready */
 280:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   while(READ_BIT(RCC->CR, RCC_CR_MSIRDY) == 0U)
  53              		.loc 1 280 8
  54 0018 08E0     		b	.L2
  55              	.L4:
 281:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
 282:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if((HAL_GetTick() - tickstart) > MSI_TIMEOUT_VALUE)
  56              		.loc 1 282 9
  57 001a FFF7FEFF 		bl	HAL_GetTick
  58 001e 0246     		mov	r2, r0
  59              		.loc 1 282 23
  60 0020 7B68     		ldr	r3, [r7, #4]
  61 0022 D31A     		subs	r3, r2, r3
ARM GAS  /tmp/ccwaNkAs.s 			page 7


  62              		.loc 1 282 7
  63 0024 022B     		cmp	r3, #2
  64 0026 01D9     		bls	.L2
 283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 284:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       return HAL_TIMEOUT;
  65              		.loc 1 284 14
  66 0028 0323     		movs	r3, #3
  67 002a 73E0     		b	.L3
  68              	.L2:
 280:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
  69              		.loc 1 280 9
  70 002c 3B4B     		ldr	r3, .L10
  71 002e 1B68     		ldr	r3, [r3]
  72 0030 03F00203 		and	r3, r3, #2
 280:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
  73              		.loc 1 280 8
  74 0034 002B     		cmp	r3, #0
  75 0036 F0D0     		beq	.L4
 285:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 286:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
 287:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 288:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Set MSIRANGE default value */
 289:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   MODIFY_REG(RCC->CR, RCC_CR_MSIRANGE, RCC_MSIRANGE_6);
  76              		.loc 1 289 3
  77 0038 384B     		ldr	r3, .L10
  78 003a 1B68     		ldr	r3, [r3]
  79 003c 23F0F003 		bic	r3, r3, #240
  80 0040 364A     		ldr	r2, .L10
  81 0042 43F06003 		orr	r3, r3, #96
  82 0046 1360     		str	r3, [r2]
 290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 291:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Reset CFGR register (MSI is selected as system clock source) */
 292:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   CLEAR_REG(RCC->CFGR);
  83              		.loc 1 292 3
  84 0048 344B     		ldr	r3, .L10
  85 004a 0022     		movs	r2, #0
  86 004c 9A60     		str	r2, [r3, #8]
 293:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 294:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable for MSI as system clock source */
 295:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   SystemCoreClock = MSI_VALUE;
  87              		.loc 1 295 19
  88 004e 344B     		ldr	r3, .L10+4
  89 0050 344A     		ldr	r2, .L10+8
  90 0052 1A60     		str	r2, [r3]
 296:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 297:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Configure the source of time base considering new system clock settings  */
 298:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(HAL_InitTick(uwTickPrio) != HAL_OK)
  91              		.loc 1 298 6
  92 0054 344B     		ldr	r3, .L10+12
  93 0056 1B68     		ldr	r3, [r3]
  94 0058 1846     		mov	r0, r3
  95 005a FFF7FEFF 		bl	HAL_InitTick
  96 005e 0346     		mov	r3, r0
  97              		.loc 1 298 5
  98 0060 002B     		cmp	r3, #0
  99 0062 01D0     		beq	.L5
 299:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
ARM GAS  /tmp/ccwaNkAs.s 			page 8


 300:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     return HAL_ERROR;
 100              		.loc 1 300 12
 101 0064 0123     		movs	r3, #1
 102 0066 55E0     		b	.L3
 103              	.L5:
 301:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
 302:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 303:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Insure MSI selected as system clock source */
 304:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Get start tick */
 305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   tickstart = HAL_GetTick();
 104              		.loc 1 305 15
 105 0068 FFF7FEFF 		bl	HAL_GetTick
 106 006c 7860     		str	r0, [r7, #4]
 306:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 307:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Wait till system clock source is ready */
 308:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   while(READ_BIT(RCC->CFGR, RCC_CFGR_SWS) != RCC_CFGR_SWS_MSI)
 107              		.loc 1 308 8
 108 006e 0AE0     		b	.L6
 109              	.L7:
 309:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
 310:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 110              		.loc 1 310 9
 111 0070 FFF7FEFF 		bl	HAL_GetTick
 112 0074 0246     		mov	r2, r0
 113              		.loc 1 310 23
 114 0076 7B68     		ldr	r3, [r7, #4]
 115 0078 D31A     		subs	r3, r2, r3
 116              		.loc 1 310 7
 117 007a 41F28832 		movw	r2, #5000
 118 007e 9342     		cmp	r3, r2
 119 0080 01D9     		bls	.L6
 311:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 312:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       return HAL_TIMEOUT;
 120              		.loc 1 312 14
 121 0082 0323     		movs	r3, #3
 122 0084 46E0     		b	.L3
 123              	.L6:
 308:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
 124              		.loc 1 308 9
 125 0086 254B     		ldr	r3, .L10
 126 0088 9B68     		ldr	r3, [r3, #8]
 127 008a 03F00C03 		and	r3, r3, #12
 308:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
 128              		.loc 1 308 8
 129 008e 002B     		cmp	r3, #0
 130 0090 EED1     		bne	.L7
 313:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 314:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
 315:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 316:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Reset HSION, HSIKERON, HSIASFS, HSEON, HSECSSON, PLLON, PLLSAIxON bits */
 317:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_PLLSAI2_SUPPORT)
 318:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 319:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_HSEON | RCC_CR_HSION | RCC_CR_HSIKERON| RCC_CR_HSIASFS | RCC_CR_PLLON |
 320:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 321:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #elif defined(RCC_PLLSAI1_SUPPORT)
 322:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 323:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_HSEON | RCC_CR_HSION | RCC_CR_HSIKERON| RCC_CR_HSIASFS | RCC_CR_PLLON |
ARM GAS  /tmp/ccwaNkAs.s 			page 9


 131              		.loc 1 323 3
 132 0092 224B     		ldr	r3, .L10
 133 0094 1A68     		ldr	r2, [r3]
 134 0096 2149     		ldr	r1, .L10
 135 0098 244B     		ldr	r3, .L10+16
 136 009a 1340     		ands	r3, r3, r2
 137 009c 0B60     		str	r3, [r1]
 324:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 325:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #else
 326:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_HSEON | RCC_CR_HSION | RCC_CR_HSIKERON| RCC_CR_HSIASFS | RCC_CR_PLLON);
 328:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_PLLSAI2_SUPPORT */
 330:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Insure PLLRDY, PLLSAI1RDY and PLLSAI2RDY (if present) are reset */
 332:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Get start tick */
 333:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   tickstart = HAL_GetTick();
 138              		.loc 1 333 15
 139 009e FFF7FEFF 		bl	HAL_GetTick
 140 00a2 7860     		str	r0, [r7, #4]
 334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 335:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_PLLSAI2_SUPPORT)
 336:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 337:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   while(READ_BIT(RCC->CR, RCC_CR_PLLRDY | RCC_CR_PLLSAI1RDY | RCC_CR_PLLSAI2RDY) != 0U)
 338:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 339:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #elif defined(RCC_PLLSAI1_SUPPORT)
 340:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   while(READ_BIT(RCC->CR, RCC_CR_PLLRDY | RCC_CR_PLLSAI1RDY) != 0U)
 141              		.loc 1 341 8
 142 00a4 08E0     		b	.L8
 143              	.L9:
 342:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 343:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #else
 344:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 345:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   while(READ_BIT(RCC->CR, RCC_CR_PLLRDY) != 0U)
 346:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 347:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif
 348:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
 349:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 144              		.loc 1 349 9
 145 00a6 FFF7FEFF 		bl	HAL_GetTick
 146 00aa 0246     		mov	r2, r0
 147              		.loc 1 349 23
 148 00ac 7B68     		ldr	r3, [r7, #4]
 149 00ae D31A     		subs	r3, r2, r3
 150              		.loc 1 349 7
 151 00b0 022B     		cmp	r3, #2
 152 00b2 01D9     		bls	.L8
 350:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 351:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       return HAL_TIMEOUT;
 153              		.loc 1 351 14
 154 00b4 0323     		movs	r3, #3
 155 00b6 2DE0     		b	.L3
 156              	.L8:
 341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 157              		.loc 1 341 9
 158 00b8 184B     		ldr	r3, .L10
ARM GAS  /tmp/ccwaNkAs.s 			page 10


 159 00ba 1B68     		ldr	r3, [r3]
 160 00bc 03F02063 		and	r3, r3, #167772160
 341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 161              		.loc 1 341 8
 162 00c0 002B     		cmp	r3, #0
 163 00c2 F0D1     		bne	.L9
 352:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 353:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
 354:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Reset PLLCFGR register */
 356:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   CLEAR_REG(RCC->PLLCFGR);
 164              		.loc 1 356 3
 165 00c4 154B     		ldr	r3, .L10
 166 00c6 0022     		movs	r2, #0
 167 00c8 DA60     		str	r2, [r3, #12]
 357:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   SET_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLN_4 );
 168              		.loc 1 357 3
 169 00ca 144B     		ldr	r3, .L10
 170 00cc DB68     		ldr	r3, [r3, #12]
 171 00ce 134A     		ldr	r2, .L10
 172 00d0 43F48053 		orr	r3, r3, #4096
 173 00d4 D360     		str	r3, [r2, #12]
 358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 359:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_PLLSAI1_SUPPORT)
 360:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 361:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Reset PLLSAI1CFGR register */
 362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   CLEAR_REG(RCC->PLLSAI1CFGR);
 174              		.loc 1 362 3
 175 00d6 114B     		ldr	r3, .L10
 176 00d8 0022     		movs	r2, #0
 177 00da 1A61     		str	r2, [r3, #16]
 363:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   SET_BIT(RCC->PLLSAI1CFGR,  RCC_PLLSAI1CFGR_PLLSAI1N_4 );
 178              		.loc 1 363 3
 179 00dc 0F4B     		ldr	r3, .L10
 180 00de 1B69     		ldr	r3, [r3, #16]
 181 00e0 0E4A     		ldr	r2, .L10
 182 00e2 43F48053 		orr	r3, r3, #4096
 183 00e6 1361     		str	r3, [r2, #16]
 364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 365:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_PLLSAI1_SUPPORT */
 366:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 367:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_PLLSAI2_SUPPORT)
 368:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 369:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Reset PLLSAI2CFGR register */
 370:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   CLEAR_REG(RCC->PLLSAI2CFGR);
 371:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   SET_BIT(RCC->PLLSAI2CFGR,  RCC_PLLSAI2CFGR_PLLSAI2N_4 );
 372:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 373:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_PLLSAI2_SUPPORT */
 374:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 375:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Reset HSEBYP bit */
 376:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_HSEBYP);
 184              		.loc 1 376 3
 185 00e8 0C4B     		ldr	r3, .L10
 186 00ea 1B68     		ldr	r3, [r3]
 187 00ec 0B4A     		ldr	r2, .L10
 188 00ee 23F48023 		bic	r3, r3, #262144
 189 00f2 1360     		str	r3, [r2]
ARM GAS  /tmp/ccwaNkAs.s 			page 11


 377:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 378:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Disable all interrupts */
 379:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   CLEAR_REG(RCC->CIER);
 190              		.loc 1 379 3
 191 00f4 094B     		ldr	r3, .L10
 192 00f6 0022     		movs	r2, #0
 193 00f8 9A61     		str	r2, [r3, #24]
 380:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 381:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Clear all interrupt flags */
 382:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   WRITE_REG(RCC->CICR, 0xFFFFFFFFU);
 194              		.loc 1 382 3
 195 00fa 084B     		ldr	r3, .L10
 196 00fc 4FF0FF32 		mov	r2, #-1
 197 0100 1A62     		str	r2, [r3, #32]
 383:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 384:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Clear all reset flags */
 385:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   SET_BIT(RCC->CSR, RCC_CSR_RMVF);
 198              		.loc 1 385 3
 199 0102 064B     		ldr	r3, .L10
 200 0104 D3F89430 		ldr	r3, [r3, #148]
 201 0108 044A     		ldr	r2, .L10
 202 010a 43F40003 		orr	r3, r3, #8388608
 203 010e C2F89430 		str	r3, [r2, #148]
 386:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 387:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   return HAL_OK;
 204              		.loc 1 387 10
 205 0112 0023     		movs	r3, #0
 206              	.L3:
 388:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** }
 207              		.loc 1 388 1
 208 0114 1846     		mov	r0, r3
 209 0116 0837     		adds	r7, r7, #8
 210              	.LCFI3:
 211              		.cfi_def_cfa_offset 8
 212 0118 BD46     		mov	sp, r7
 213              	.LCFI4:
 214              		.cfi_def_cfa_register 13
 215              		@ sp needed
 216 011a 80BD     		pop	{r7, pc}
 217              	.L11:
 218              		.align	2
 219              	.L10:
 220 011c 00100240 		.word	1073876992
 221 0120 00000000 		.word	SystemCoreClock
 222 0124 00093D00 		.word	4000000
 223 0128 00000000 		.word	uwTickPrio
 224 012c FFF4FEFA 		.word	-83954433
 225              		.cfi_endproc
 226              	.LFE130:
 228              		.section	.text.HAL_RCC_OscConfig,"ax",%progbits
 229              		.align	1
 230              		.global	HAL_RCC_OscConfig
 231              		.syntax unified
 232              		.thumb
 233              		.thumb_func
 234              		.fpu fpv4-sp-d16
 236              	HAL_RCC_OscConfig:
ARM GAS  /tmp/ccwaNkAs.s 			page 12


 237              	.LFB131:
 389:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 390:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /**
 391:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @brief  Initialize the RCC Oscillators according to the specified parameters in the
 392:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         RCC_OscInitTypeDef.
 393:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @param  RCC_OscInitStruct  pointer to an RCC_OscInitTypeDef structure that
 394:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         contains the configuration information for the RCC Oscillators.
 395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   The PLL is not disabled when used as system clock.
 396:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   The PLL source is not updated when used as PLLSAI(s) clock source.
 397:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   Transitions LSE Bypass to LSE On and LSE On to LSE Bypass are not
 398:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         supported by this macro. User should request a transition to LSE Off
 399:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         first and then LSE On or LSE Bypass.
 400:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   Transition HSE Bypass to HSE On and HSE On to HSE Bypass are not
 401:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         supported by this macro. User should request a transition to HSE Off
 402:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         first and then HSE On or HSE Bypass.
 403:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @retval HAL status
 404:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
 405:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
 406:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** {
 238              		.loc 1 406 1
 239              		.cfi_startproc
 240              		@ args = 0, pretend = 0, frame = 32
 241              		@ frame_needed = 1, uses_anonymous_args = 0
 242 0000 80B5     		push	{r7, lr}
 243              	.LCFI5:
 244              		.cfi_def_cfa_offset 8
 245              		.cfi_offset 7, -8
 246              		.cfi_offset 14, -4
 247 0002 88B0     		sub	sp, sp, #32
 248              	.LCFI6:
 249              		.cfi_def_cfa_offset 40
 250 0004 00AF     		add	r7, sp, #0
 251              	.LCFI7:
 252              		.cfi_def_cfa_register 7
 253 0006 7860     		str	r0, [r7, #4]
 407:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   uint32_t tickstart;
 408:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   HAL_StatusTypeDef status;
 409:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   uint32_t sysclk_source, pll_config;
 410:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 411:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Check Null pointer */
 412:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(RCC_OscInitStruct == NULL)
 254              		.loc 1 412 5
 255 0008 7B68     		ldr	r3, [r7, #4]
 256 000a 002B     		cmp	r3, #0
 257 000c 02D1     		bne	.L13
 413:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
 414:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     return HAL_ERROR;
 258              		.loc 1 414 12
 259 000e 0123     		movs	r3, #1
 260 0010 00F011BC 		b	.L14
 261              	.L13:
 415:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
 416:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 417:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Check the parameters */
 418:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
 419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 420:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   sysclk_source = __HAL_RCC_GET_SYSCLK_SOURCE();
ARM GAS  /tmp/ccwaNkAs.s 			page 13


 262              		.loc 1 420 19
 263 0014 A04B     		ldr	r3, .L97
 264 0016 9B68     		ldr	r3, [r3, #8]
 265              		.loc 1 420 17
 266 0018 03F00C03 		and	r3, r3, #12
 267 001c BB61     		str	r3, [r7, #24]
 421:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   pll_config = __HAL_RCC_GET_PLL_OSCSOURCE();
 268              		.loc 1 421 16
 269 001e 9E4B     		ldr	r3, .L97
 270 0020 DB68     		ldr	r3, [r3, #12]
 271              		.loc 1 421 14
 272 0022 03F00303 		and	r3, r3, #3
 273 0026 7B61     		str	r3, [r7, #20]
 422:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 423:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /*----------------------------- MSI Configuration --------------------------*/
 424:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_MSI) == RCC_OSCILLATORTYPE_MSI)
 274              		.loc 1 424 25
 275 0028 7B68     		ldr	r3, [r7, #4]
 276 002a 1B68     		ldr	r3, [r3]
 277              		.loc 1 424 43
 278 002c 03F01003 		and	r3, r3, #16
 279              		.loc 1 424 5
 280 0030 002B     		cmp	r3, #0
 281 0032 00F0E480 		beq	.L15
 425:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
 426:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Check the parameters */
 427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     assert_param(IS_RCC_MSI(RCC_OscInitStruct->MSIState));
 428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     assert_param(IS_RCC_MSICALIBRATION_VALUE(RCC_OscInitStruct->MSICalibrationValue));
 429:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     assert_param(IS_RCC_MSI_CLOCK_RANGE(RCC_OscInitStruct->MSIClockRange));
 430:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Check if MSI is used as system clock or as PLL source when PLL is selected as system clock *
 432:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if((sysclk_source == RCC_CFGR_SWS_MSI) ||
 282              		.loc 1 432 7
 283 0036 BB69     		ldr	r3, [r7, #24]
 284 0038 002B     		cmp	r3, #0
 285 003a 07D0     		beq	.L16
 286              		.loc 1 432 44 discriminator 1
 287 003c BB69     		ldr	r3, [r7, #24]
 288 003e 0C2B     		cmp	r3, #12
 289 0040 40F08B80 		bne	.L17
 433:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****        ((sysclk_source == RCC_CFGR_SWS_PLL) && (pll_config == RCC_PLLSOURCE_MSI)))
 290              		.loc 1 433 45
 291 0044 7B69     		ldr	r3, [r7, #20]
 292 0046 012B     		cmp	r3, #1
 293 0048 40F08780 		bne	.L17
 294              	.L16:
 434:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 435:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       if((READ_BIT(RCC->CR, RCC_CR_MSIRDY) != 0U) && (RCC_OscInitStruct->MSIState == RCC_MSI_OFF))
 295              		.loc 1 435 11
 296 004c 924B     		ldr	r3, .L97
 297 004e 1B68     		ldr	r3, [r3]
 298 0050 03F00203 		and	r3, r3, #2
 299              		.loc 1 435 9
 300 0054 002B     		cmp	r3, #0
 301 0056 05D0     		beq	.L18
 302              		.loc 1 435 72 discriminator 1
 303 0058 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccwaNkAs.s 			page 14


 304 005a 9B69     		ldr	r3, [r3, #24]
 305              		.loc 1 435 51 discriminator 1
 306 005c 002B     		cmp	r3, #0
 307 005e 01D1     		bne	.L18
 436:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 437:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         return HAL_ERROR;
 308              		.loc 1 437 16
 309 0060 0123     		movs	r3, #1
 310 0062 E8E3     		b	.L14
 311              	.L18:
 438:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 439:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 440:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****        /* Otherwise, just the calibration and MSI range change are allowed */
 441:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       else
 442:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 443:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
 444:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            must be correctly programmed according to the frequency of the CPU clock
 445:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            (HCLK) and the supply voltage of the device. */
 446:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         if(RCC_OscInitStruct->MSIClockRange > __HAL_RCC_GET_MSI_RANGE())
 312              		.loc 1 446 29
 313 0064 7B68     		ldr	r3, [r7, #4]
 314 0066 1A6A     		ldr	r2, [r3, #32]
 315              		.loc 1 446 47
 316 0068 8B4B     		ldr	r3, .L97
 317 006a 1B68     		ldr	r3, [r3]
 318 006c 03F00803 		and	r3, r3, #8
 319 0070 002B     		cmp	r3, #0
 320 0072 04D0     		beq	.L19
 321              		.loc 1 446 47 is_stmt 0 discriminator 1
 322 0074 884B     		ldr	r3, .L97
 323 0076 1B68     		ldr	r3, [r3]
 324 0078 03F0F003 		and	r3, r3, #240
 325 007c 05E0     		b	.L20
 326              	.L19:
 327              		.loc 1 446 47 discriminator 2
 328 007e 864B     		ldr	r3, .L97
 329 0080 D3F89430 		ldr	r3, [r3, #148]
 330 0084 1B09     		lsrs	r3, r3, #4
 331 0086 03F0F003 		and	r3, r3, #240
 332              	.L20:
 333              		.loc 1 446 11 is_stmt 1 discriminator 4
 334 008a 9342     		cmp	r3, r2
 335 008c 23D2     		bcs	.L21
 447:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 448:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           /* First increase number of wait states update if necessary */
 449:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           if(RCC_SetFlashLatencyFromMSIRange(RCC_OscInitStruct->MSIClockRange) != HAL_OK)
 336              		.loc 1 449 14
 337 008e 7B68     		ldr	r3, [r7, #4]
 338 0090 1B6A     		ldr	r3, [r3, #32]
 339 0092 1846     		mov	r0, r3
 340 0094 FFF7FEFF 		bl	RCC_SetFlashLatencyFromMSIRange
 341 0098 0346     		mov	r3, r0
 342              		.loc 1 449 13
 343 009a 002B     		cmp	r3, #0
 344 009c 01D0     		beq	.L22
 450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           {
 451:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             return HAL_ERROR;
ARM GAS  /tmp/ccwaNkAs.s 			page 15


 345              		.loc 1 451 20
 346 009e 0123     		movs	r3, #1
 347 00a0 C9E3     		b	.L14
 348              	.L22:
 452:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           }
 453:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 454:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           /* Selects the Multiple Speed oscillator (MSI) clock range .*/
 455:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           __HAL_RCC_MSI_RANGE_CONFIG(RCC_OscInitStruct->MSIClockRange);
 349              		.loc 1 455 11
 350 00a2 7D4B     		ldr	r3, .L97
 351 00a4 1B68     		ldr	r3, [r3]
 352 00a6 7C4A     		ldr	r2, .L97
 353 00a8 43F00803 		orr	r3, r3, #8
 354 00ac 1360     		str	r3, [r2]
 355 00ae 7A4B     		ldr	r3, .L97
 356 00b0 1B68     		ldr	r3, [r3]
 357 00b2 23F0F002 		bic	r2, r3, #240
 358 00b6 7B68     		ldr	r3, [r7, #4]
 359 00b8 1B6A     		ldr	r3, [r3, #32]
 360 00ba 7749     		ldr	r1, .L97
 361 00bc 1343     		orrs	r3, r3, r2
 362 00be 0B60     		str	r3, [r1]
 456:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           /* Adjusts the Multiple Speed oscillator (MSI) calibration value.*/
 457:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->MSICalibrationValue);
 363              		.loc 1 457 11
 364 00c0 754B     		ldr	r3, .L97
 365 00c2 5B68     		ldr	r3, [r3, #4]
 366 00c4 23F47F42 		bic	r2, r3, #65280
 367 00c8 7B68     		ldr	r3, [r7, #4]
 368 00ca DB69     		ldr	r3, [r3, #28]
 369 00cc 1B02     		lsls	r3, r3, #8
 370 00ce 7249     		ldr	r1, .L97
 371 00d0 1343     		orrs	r3, r3, r2
 372 00d2 4B60     		str	r3, [r1, #4]
 373 00d4 25E0     		b	.L23
 374              	.L21:
 458:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 459:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         else
 460:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 461:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           /* Else, keep current flash latency while decreasing applies */
 462:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           /* Selects the Multiple Speed oscillator (MSI) clock range .*/
 463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           __HAL_RCC_MSI_RANGE_CONFIG(RCC_OscInitStruct->MSIClockRange);
 375              		.loc 1 463 11
 376 00d6 704B     		ldr	r3, .L97
 377 00d8 1B68     		ldr	r3, [r3]
 378 00da 6F4A     		ldr	r2, .L97
 379 00dc 43F00803 		orr	r3, r3, #8
 380 00e0 1360     		str	r3, [r2]
 381 00e2 6D4B     		ldr	r3, .L97
 382 00e4 1B68     		ldr	r3, [r3]
 383 00e6 23F0F002 		bic	r2, r3, #240
 384 00ea 7B68     		ldr	r3, [r7, #4]
 385 00ec 1B6A     		ldr	r3, [r3, #32]
 386 00ee 6A49     		ldr	r1, .L97
 387 00f0 1343     		orrs	r3, r3, r2
 388 00f2 0B60     		str	r3, [r1]
 464:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           /* Adjusts the Multiple Speed oscillator (MSI) calibration value.*/
ARM GAS  /tmp/ccwaNkAs.s 			page 16


 465:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->MSICalibrationValue);
 389              		.loc 1 465 11
 390 00f4 684B     		ldr	r3, .L97
 391 00f6 5B68     		ldr	r3, [r3, #4]
 392 00f8 23F47F42 		bic	r2, r3, #65280
 393 00fc 7B68     		ldr	r3, [r7, #4]
 394 00fe DB69     		ldr	r3, [r3, #28]
 395 0100 1B02     		lsls	r3, r3, #8
 396 0102 6549     		ldr	r1, .L97
 397 0104 1343     		orrs	r3, r3, r2
 398 0106 4B60     		str	r3, [r1, #4]
 466:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 467:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           /* Decrease number of wait states update if necessary */
 468:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           /* Only possible when MSI is the System clock source  */
 469:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           if(sysclk_source == RCC_CFGR_SWS_MSI)
 399              		.loc 1 469 13
 400 0108 BB69     		ldr	r3, [r7, #24]
 401 010a 002B     		cmp	r3, #0
 402 010c 09D1     		bne	.L23
 470:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           {
 471:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             if(RCC_SetFlashLatencyFromMSIRange(RCC_OscInitStruct->MSIClockRange) != HAL_OK)
 403              		.loc 1 471 16
 404 010e 7B68     		ldr	r3, [r7, #4]
 405 0110 1B6A     		ldr	r3, [r3, #32]
 406 0112 1846     		mov	r0, r3
 407 0114 FFF7FEFF 		bl	RCC_SetFlashLatencyFromMSIRange
 408 0118 0346     		mov	r3, r0
 409              		.loc 1 471 15
 410 011a 002B     		cmp	r3, #0
 411 011c 01D0     		beq	.L23
 472:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             {
 473:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****               return HAL_ERROR;
 412              		.loc 1 473 22
 413 011e 0123     		movs	r3, #1
 414 0120 89E3     		b	.L14
 415              	.L23:
 474:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             }
 475:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           }
 476:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 477:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 478:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Update the SystemCoreClock global variable */
 479:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         SystemCoreClock = HAL_RCC_GetSysClockFreq() >> (AHBPrescTable[READ_BIT(RCC->CFGR, RCC_CFGR_
 416              		.loc 1 479 27
 417 0122 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 418 0126 0246     		mov	r2, r0
 419              		.loc 1 479 71
 420 0128 5B4B     		ldr	r3, .L97
 421 012a 9B68     		ldr	r3, [r3, #8]
 422              		.loc 1 479 106
 423 012c 1B09     		lsrs	r3, r3, #4
 424 012e 03F00F03 		and	r3, r3, #15
 425              		.loc 1 479 70
 426 0132 5A49     		ldr	r1, .L97+4
 427 0134 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 428              		.loc 1 479 128
 429 0136 03F01F03 		and	r3, r3, #31
 430              		.loc 1 479 53
ARM GAS  /tmp/ccwaNkAs.s 			page 17


 431 013a 22FA03F3 		lsr	r3, r2, r3
 432              		.loc 1 479 25
 433 013e 584A     		ldr	r2, .L97+8
 434 0140 1360     		str	r3, [r2]
 480:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 481:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Configure the source of time base considering new system clocks settings*/
 482:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         status = HAL_InitTick(uwTickPrio);
 435              		.loc 1 482 18
 436 0142 584B     		ldr	r3, .L97+12
 437 0144 1B68     		ldr	r3, [r3]
 438 0146 1846     		mov	r0, r3
 439 0148 FFF7FEFF 		bl	HAL_InitTick
 440 014c 0346     		mov	r3, r0
 441 014e FB73     		strb	r3, [r7, #15]
 483:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         if(status != HAL_OK)
 442              		.loc 1 483 11
 443 0150 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 444 0152 002B     		cmp	r3, #0
 445 0154 52D0     		beq	.L95
 484:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 485:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           return status;
 446              		.loc 1 485 18
 447 0156 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 448 0158 6DE3     		b	.L14
 449              	.L17:
 486:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 487:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 488:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 489:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     else
 490:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 491:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Check the MSI State */
 492:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       if(RCC_OscInitStruct->MSIState != RCC_MSI_OFF)
 450              		.loc 1 492 27
 451 015a 7B68     		ldr	r3, [r7, #4]
 452 015c 9B69     		ldr	r3, [r3, #24]
 453              		.loc 1 492 9
 454 015e 002B     		cmp	r3, #0
 455 0160 32D0     		beq	.L25
 493:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 494:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Enable the Internal High Speed oscillator (MSI). */
 495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         __HAL_RCC_MSI_ENABLE();
 456              		.loc 1 495 9
 457 0162 4D4B     		ldr	r3, .L97
 458 0164 1B68     		ldr	r3, [r3]
 459 0166 4C4A     		ldr	r2, .L97
 460 0168 43F00103 		orr	r3, r3, #1
 461 016c 1360     		str	r3, [r2]
 496:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 497:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Get timeout */
 498:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 462              		.loc 1 498 21
 463 016e FFF7FEFF 		bl	HAL_GetTick
 464 0172 3861     		str	r0, [r7, #16]
 499:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 500:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Wait till MSI is ready */
 501:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         while(READ_BIT(RCC->CR, RCC_CR_MSIRDY) == 0U)
 465              		.loc 1 501 14
ARM GAS  /tmp/ccwaNkAs.s 			page 18


 466 0174 08E0     		b	.L26
 467              	.L27:
 502:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 503:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart) > MSI_TIMEOUT_VALUE)
 468              		.loc 1 503 15
 469 0176 FFF7FEFF 		bl	HAL_GetTick
 470 017a 0246     		mov	r2, r0
 471              		.loc 1 503 29
 472 017c 3B69     		ldr	r3, [r7, #16]
 473 017e D31A     		subs	r3, r2, r3
 474              		.loc 1 503 13
 475 0180 022B     		cmp	r3, #2
 476 0182 01D9     		bls	.L26
 504:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           {
 505:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 477              		.loc 1 505 20
 478 0184 0323     		movs	r3, #3
 479 0186 56E3     		b	.L14
 480              	.L26:
 501:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 481              		.loc 1 501 15
 482 0188 434B     		ldr	r3, .L97
 483 018a 1B68     		ldr	r3, [r3]
 484 018c 03F00203 		and	r3, r3, #2
 501:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 485              		.loc 1 501 14
 486 0190 002B     		cmp	r3, #0
 487 0192 F0D0     		beq	.L27
 506:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           }
 507:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 508:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****          /* Selects the Multiple Speed oscillator (MSI) clock range .*/
 509:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         __HAL_RCC_MSI_RANGE_CONFIG(RCC_OscInitStruct->MSIClockRange);
 488              		.loc 1 509 9
 489 0194 404B     		ldr	r3, .L97
 490 0196 1B68     		ldr	r3, [r3]
 491 0198 3F4A     		ldr	r2, .L97
 492 019a 43F00803 		orr	r3, r3, #8
 493 019e 1360     		str	r3, [r2]
 494 01a0 3D4B     		ldr	r3, .L97
 495 01a2 1B68     		ldr	r3, [r3]
 496 01a4 23F0F002 		bic	r2, r3, #240
 497 01a8 7B68     		ldr	r3, [r7, #4]
 498 01aa 1B6A     		ldr	r3, [r3, #32]
 499 01ac 3A49     		ldr	r1, .L97
 500 01ae 1343     		orrs	r3, r3, r2
 501 01b0 0B60     		str	r3, [r1]
 510:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****          /* Adjusts the Multiple Speed oscillator (MSI) calibration value.*/
 511:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->MSICalibrationValue);
 502              		.loc 1 511 9
 503 01b2 394B     		ldr	r3, .L97
 504 01b4 5B68     		ldr	r3, [r3, #4]
 505 01b6 23F47F42 		bic	r2, r3, #65280
 506 01ba 7B68     		ldr	r3, [r7, #4]
 507 01bc DB69     		ldr	r3, [r3, #28]
 508 01be 1B02     		lsls	r3, r3, #8
 509 01c0 3549     		ldr	r1, .L97
 510 01c2 1343     		orrs	r3, r3, r2
ARM GAS  /tmp/ccwaNkAs.s 			page 19


 511 01c4 4B60     		str	r3, [r1, #4]
 512 01c6 1AE0     		b	.L15
 513              	.L25:
 512:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 513:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 514:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       else
 515:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 516:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Disable the Internal High Speed oscillator (MSI). */
 517:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         __HAL_RCC_MSI_DISABLE();
 514              		.loc 1 517 9
 515 01c8 334B     		ldr	r3, .L97
 516 01ca 1B68     		ldr	r3, [r3]
 517 01cc 324A     		ldr	r2, .L97
 518 01ce 23F00103 		bic	r3, r3, #1
 519 01d2 1360     		str	r3, [r2]
 518:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 519:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Get timeout */
 520:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 520              		.loc 1 520 21
 521 01d4 FFF7FEFF 		bl	HAL_GetTick
 522 01d8 3861     		str	r0, [r7, #16]
 521:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 522:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Wait till MSI is ready */
 523:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         while(READ_BIT(RCC->CR, RCC_CR_MSIRDY) != 0U)
 523              		.loc 1 523 14
 524 01da 08E0     		b	.L28
 525              	.L29:
 524:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 525:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart) > MSI_TIMEOUT_VALUE)
 526              		.loc 1 525 15
 527 01dc FFF7FEFF 		bl	HAL_GetTick
 528 01e0 0246     		mov	r2, r0
 529              		.loc 1 525 29
 530 01e2 3B69     		ldr	r3, [r7, #16]
 531 01e4 D31A     		subs	r3, r2, r3
 532              		.loc 1 525 13
 533 01e6 022B     		cmp	r3, #2
 534 01e8 01D9     		bls	.L28
 526:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           {
 527:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 535              		.loc 1 527 20
 536 01ea 0323     		movs	r3, #3
 537 01ec 23E3     		b	.L14
 538              	.L28:
 523:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 539              		.loc 1 523 15
 540 01ee 2A4B     		ldr	r3, .L97
 541 01f0 1B68     		ldr	r3, [r3]
 542 01f2 03F00203 		and	r3, r3, #2
 523:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 543              		.loc 1 523 14
 544 01f6 002B     		cmp	r3, #0
 545 01f8 F0D1     		bne	.L29
 546 01fa 00E0     		b	.L15
 547              	.L95:
 435:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 548              		.loc 1 435 9
ARM GAS  /tmp/ccwaNkAs.s 			page 20


 549 01fc 00BF     		nop
 550              	.L15:
 528:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           }
 529:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 530:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 531:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 532:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
 533:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /*------------------------------- HSE Configuration ------------------------*/
 534:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 551              		.loc 1 534 25
 552 01fe 7B68     		ldr	r3, [r7, #4]
 553 0200 1B68     		ldr	r3, [r3]
 554              		.loc 1 534 43
 555 0202 03F00103 		and	r3, r3, #1
 556              		.loc 1 534 5
 557 0206 002B     		cmp	r3, #0
 558 0208 73D0     		beq	.L30
 535:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
 536:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Check the parameters */
 537:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
 538:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 539:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* When the HSE is used as system clock or clock source for PLL in these cases it is not allowe
 540:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if((sysclk_source == RCC_CFGR_SWS_HSE) ||
 559              		.loc 1 540 7
 560 020a BB69     		ldr	r3, [r7, #24]
 561 020c 082B     		cmp	r3, #8
 562 020e 05D0     		beq	.L31
 563              		.loc 1 540 44 discriminator 1
 564 0210 BB69     		ldr	r3, [r7, #24]
 565 0212 0C2B     		cmp	r3, #12
 566 0214 0ED1     		bne	.L32
 541:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****        ((sysclk_source == RCC_CFGR_SWS_PLL) && (pll_config == RCC_PLLSOURCE_HSE)))
 567              		.loc 1 541 45
 568 0216 7B69     		ldr	r3, [r7, #20]
 569 0218 032B     		cmp	r3, #3
 570 021a 0BD1     		bne	.L32
 571              	.L31:
 542:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 543:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       if((READ_BIT(RCC->CR, RCC_CR_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 572              		.loc 1 543 11
 573 021c 1E4B     		ldr	r3, .L97
 574 021e 1B68     		ldr	r3, [r3]
 575 0220 03F40033 		and	r3, r3, #131072
 576              		.loc 1 543 9
 577 0224 002B     		cmp	r3, #0
 578 0226 63D0     		beq	.L96
 579              		.loc 1 543 72 discriminator 1
 580 0228 7B68     		ldr	r3, [r7, #4]
 581 022a 5B68     		ldr	r3, [r3, #4]
 582              		.loc 1 543 51 discriminator 1
 583 022c 002B     		cmp	r3, #0
 584 022e 5FD1     		bne	.L96
 544:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 545:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         return HAL_ERROR;
 585              		.loc 1 545 16
 586 0230 0123     		movs	r3, #1
 587 0232 00E3     		b	.L14
ARM GAS  /tmp/ccwaNkAs.s 			page 21


 588              	.L32:
 546:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 547:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 548:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     else
 549:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 550:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Set the new HSE configuration ---------------------------------------*/
 551:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 589              		.loc 1 551 7
 590 0234 7B68     		ldr	r3, [r7, #4]
 591 0236 5B68     		ldr	r3, [r3, #4]
 592 0238 B3F5803F 		cmp	r3, #65536
 593 023c 06D1     		bne	.L34
 594              		.loc 1 551 7 is_stmt 0 discriminator 1
 595 023e 164B     		ldr	r3, .L97
 596 0240 1B68     		ldr	r3, [r3]
 597 0242 154A     		ldr	r2, .L97
 598 0244 43F48033 		orr	r3, r3, #65536
 599 0248 1360     		str	r3, [r2]
 600 024a 1DE0     		b	.L35
 601              	.L34:
 602              		.loc 1 551 7 discriminator 2
 603 024c 7B68     		ldr	r3, [r7, #4]
 604 024e 5B68     		ldr	r3, [r3, #4]
 605 0250 B3F5A02F 		cmp	r3, #327680
 606 0254 0CD1     		bne	.L36
 607              		.loc 1 551 7 discriminator 3
 608 0256 104B     		ldr	r3, .L97
 609 0258 1B68     		ldr	r3, [r3]
 610 025a 0F4A     		ldr	r2, .L97
 611 025c 43F48023 		orr	r3, r3, #262144
 612 0260 1360     		str	r3, [r2]
 613 0262 0D4B     		ldr	r3, .L97
 614 0264 1B68     		ldr	r3, [r3]
 615 0266 0C4A     		ldr	r2, .L97
 616 0268 43F48033 		orr	r3, r3, #65536
 617 026c 1360     		str	r3, [r2]
 618 026e 0BE0     		b	.L35
 619              	.L36:
 620              		.loc 1 551 7 discriminator 4
 621 0270 094B     		ldr	r3, .L97
 622 0272 1B68     		ldr	r3, [r3]
 623 0274 084A     		ldr	r2, .L97
 624 0276 23F48033 		bic	r3, r3, #65536
 625 027a 1360     		str	r3, [r2]
 626 027c 064B     		ldr	r3, .L97
 627 027e 1B68     		ldr	r3, [r3]
 628 0280 054A     		ldr	r2, .L97
 629 0282 23F48023 		bic	r3, r3, #262144
 630 0286 1360     		str	r3, [r2]
 631              	.L35:
 552:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 553:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Check the HSE State */
 554:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       if(RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 632              		.loc 1 554 27 is_stmt 1
 633 0288 7B68     		ldr	r3, [r7, #4]
 634 028a 5B68     		ldr	r3, [r3, #4]
 635              		.loc 1 554 9
ARM GAS  /tmp/ccwaNkAs.s 			page 22


 636 028c 002B     		cmp	r3, #0
 637 028e 1BD0     		beq	.L37
 555:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 556:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Get Start Tick*/
 557:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 638              		.loc 1 557 21
 639 0290 FFF7FEFF 		bl	HAL_GetTick
 640 0294 3861     		str	r0, [r7, #16]
 558:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 559:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Wait till HSE is ready */
 560:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         while(READ_BIT(RCC->CR, RCC_CR_HSERDY) == 0U)
 641              		.loc 1 560 14
 642 0296 10E0     		b	.L38
 643              	.L98:
 644              		.align	2
 645              	.L97:
 646 0298 00100240 		.word	1073876992
 647 029c 00000000 		.word	AHBPrescTable
 648 02a0 00000000 		.word	SystemCoreClock
 649 02a4 00000000 		.word	uwTickPrio
 650              	.L39:
 561:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 562:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 651              		.loc 1 562 15
 652 02a8 FFF7FEFF 		bl	HAL_GetTick
 653 02ac 0246     		mov	r2, r0
 654              		.loc 1 562 29
 655 02ae 3B69     		ldr	r3, [r7, #16]
 656 02b0 D31A     		subs	r3, r2, r3
 657              		.loc 1 562 13
 658 02b2 642B     		cmp	r3, #100
 659 02b4 01D9     		bls	.L38
 563:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           {
 564:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 660              		.loc 1 564 20
 661 02b6 0323     		movs	r3, #3
 662 02b8 BDE2     		b	.L14
 663              	.L38:
 560:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 664              		.loc 1 560 15
 665 02ba AF4B     		ldr	r3, .L99
 666 02bc 1B68     		ldr	r3, [r3]
 667 02be 03F40033 		and	r3, r3, #131072
 560:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 668              		.loc 1 560 14
 669 02c2 002B     		cmp	r3, #0
 670 02c4 F0D0     		beq	.L39
 671 02c6 14E0     		b	.L30
 672              	.L37:
 565:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           }
 566:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 567:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 568:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       else
 569:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 570:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Get Start Tick*/
 571:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 673              		.loc 1 571 21
ARM GAS  /tmp/ccwaNkAs.s 			page 23


 674 02c8 FFF7FEFF 		bl	HAL_GetTick
 675 02cc 3861     		str	r0, [r7, #16]
 572:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 573:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Wait till HSE is disabled */
 574:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         while(READ_BIT(RCC->CR, RCC_CR_HSERDY) != 0U)
 676              		.loc 1 574 14
 677 02ce 08E0     		b	.L40
 678              	.L41:
 575:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 576:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 679              		.loc 1 576 15
 680 02d0 FFF7FEFF 		bl	HAL_GetTick
 681 02d4 0246     		mov	r2, r0
 682              		.loc 1 576 29
 683 02d6 3B69     		ldr	r3, [r7, #16]
 684 02d8 D31A     		subs	r3, r2, r3
 685              		.loc 1 576 13
 686 02da 642B     		cmp	r3, #100
 687 02dc 01D9     		bls	.L40
 577:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           {
 578:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 688              		.loc 1 578 20
 689 02de 0323     		movs	r3, #3
 690 02e0 A9E2     		b	.L14
 691              	.L40:
 574:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 692              		.loc 1 574 15
 693 02e2 A54B     		ldr	r3, .L99
 694 02e4 1B68     		ldr	r3, [r3]
 695 02e6 03F40033 		and	r3, r3, #131072
 574:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 696              		.loc 1 574 14
 697 02ea 002B     		cmp	r3, #0
 698 02ec F0D1     		bne	.L41
 699 02ee 00E0     		b	.L30
 700              	.L96:
 543:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 701              		.loc 1 543 9
 702 02f0 00BF     		nop
 703              	.L30:
 579:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           }
 580:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 581:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 582:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 583:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
 584:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /*----------------------------- HSI Configuration --------------------------*/
 585:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 704              		.loc 1 585 25
 705 02f2 7B68     		ldr	r3, [r7, #4]
 706 02f4 1B68     		ldr	r3, [r3]
 707              		.loc 1 585 43
 708 02f6 03F00203 		and	r3, r3, #2
 709              		.loc 1 585 5
 710 02fa 002B     		cmp	r3, #0
 711 02fc 60D0     		beq	.L42
 586:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
 587:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Check the parameters */
ARM GAS  /tmp/ccwaNkAs.s 			page 24


 588:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
 589:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     assert_param(IS_RCC_HSI_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
 590:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 591:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock *
 592:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if((sysclk_source == RCC_CFGR_SWS_HSI) ||
 712              		.loc 1 592 7
 713 02fe BB69     		ldr	r3, [r7, #24]
 714 0300 042B     		cmp	r3, #4
 715 0302 05D0     		beq	.L43
 716              		.loc 1 592 44 discriminator 1
 717 0304 BB69     		ldr	r3, [r7, #24]
 718 0306 0C2B     		cmp	r3, #12
 719 0308 19D1     		bne	.L44
 593:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****        ((sysclk_source == RCC_CFGR_SWS_PLL) && (pll_config == RCC_PLLSOURCE_HSI)))
 720              		.loc 1 593 45
 721 030a 7B69     		ldr	r3, [r7, #20]
 722 030c 022B     		cmp	r3, #2
 723 030e 16D1     		bne	.L44
 724              	.L43:
 594:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 595:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* When HSI is used as system clock it will not be disabled */
 596:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       if((READ_BIT(RCC->CR, RCC_CR_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
 725              		.loc 1 596 11
 726 0310 994B     		ldr	r3, .L99
 727 0312 1B68     		ldr	r3, [r3]
 728 0314 03F48063 		and	r3, r3, #1024
 729              		.loc 1 596 9
 730 0318 002B     		cmp	r3, #0
 731 031a 05D0     		beq	.L45
 732              		.loc 1 596 72 discriminator 1
 733 031c 7B68     		ldr	r3, [r7, #4]
 734 031e DB68     		ldr	r3, [r3, #12]
 735              		.loc 1 596 51 discriminator 1
 736 0320 002B     		cmp	r3, #0
 737 0322 01D1     		bne	.L45
 597:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 598:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         return HAL_ERROR;
 738              		.loc 1 598 16
 739 0324 0123     		movs	r3, #1
 740 0326 86E2     		b	.L14
 741              	.L45:
 599:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 600:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Otherwise, just the calibration is allowed */
 601:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       else
 602:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 603:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 604:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 742              		.loc 1 604 9
 743 0328 934B     		ldr	r3, .L99
 744 032a 5B68     		ldr	r3, [r3, #4]
 745 032c 23F0F852 		bic	r2, r3, #520093696
 746 0330 7B68     		ldr	r3, [r7, #4]
 747 0332 1B69     		ldr	r3, [r3, #16]
 748 0334 1B06     		lsls	r3, r3, #24
 749 0336 9049     		ldr	r1, .L99
 750 0338 1343     		orrs	r3, r3, r2
 751 033a 4B60     		str	r3, [r1, #4]
ARM GAS  /tmp/ccwaNkAs.s 			page 25


 596:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 752              		.loc 1 596 9
 753 033c 40E0     		b	.L42
 754              	.L44:
 605:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 606:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 607:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     else
 608:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 609:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Check the HSI State */
 610:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       if(RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 755              		.loc 1 610 27
 756 033e 7B68     		ldr	r3, [r7, #4]
 757 0340 DB68     		ldr	r3, [r3, #12]
 758              		.loc 1 610 9
 759 0342 002B     		cmp	r3, #0
 760 0344 23D0     		beq	.L46
 611:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 612:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Enable the Internal High Speed oscillator (HSI). */
 613:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         __HAL_RCC_HSI_ENABLE();
 761              		.loc 1 613 9
 762 0346 8C4B     		ldr	r3, .L99
 763 0348 1B68     		ldr	r3, [r3]
 764 034a 8B4A     		ldr	r2, .L99
 765 034c 43F48073 		orr	r3, r3, #256
 766 0350 1360     		str	r3, [r2]
 614:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 615:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Get Start Tick*/
 616:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 767              		.loc 1 616 21
 768 0352 FFF7FEFF 		bl	HAL_GetTick
 769 0356 3861     		str	r0, [r7, #16]
 617:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 618:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Wait till HSI is ready */
 619:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         while(READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 770              		.loc 1 619 14
 771 0358 08E0     		b	.L47
 772              	.L48:
 620:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 621:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 773              		.loc 1 621 15
 774 035a FFF7FEFF 		bl	HAL_GetTick
 775 035e 0246     		mov	r2, r0
 776              		.loc 1 621 29
 777 0360 3B69     		ldr	r3, [r7, #16]
 778 0362 D31A     		subs	r3, r2, r3
 779              		.loc 1 621 13
 780 0364 022B     		cmp	r3, #2
 781 0366 01D9     		bls	.L47
 622:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           {
 623:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 782              		.loc 1 623 20
 783 0368 0323     		movs	r3, #3
 784 036a 64E2     		b	.L14
 785              	.L47:
 619:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 786              		.loc 1 619 15
 787 036c 824B     		ldr	r3, .L99
ARM GAS  /tmp/ccwaNkAs.s 			page 26


 788 036e 1B68     		ldr	r3, [r3]
 789 0370 03F48063 		and	r3, r3, #1024
 619:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 790              		.loc 1 619 14
 791 0374 002B     		cmp	r3, #0
 792 0376 F0D0     		beq	.L48
 624:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           }
 625:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 626:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 627:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 628:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 793              		.loc 1 628 9
 794 0378 7F4B     		ldr	r3, .L99
 795 037a 5B68     		ldr	r3, [r3, #4]
 796 037c 23F0F852 		bic	r2, r3, #520093696
 797 0380 7B68     		ldr	r3, [r7, #4]
 798 0382 1B69     		ldr	r3, [r3, #16]
 799 0384 1B06     		lsls	r3, r3, #24
 800 0386 7C49     		ldr	r1, .L99
 801 0388 1343     		orrs	r3, r3, r2
 802 038a 4B60     		str	r3, [r1, #4]
 803 038c 18E0     		b	.L42
 804              	.L46:
 629:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 630:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       else
 631:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 632:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Disable the Internal High Speed oscillator (HSI). */
 633:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         __HAL_RCC_HSI_DISABLE();
 805              		.loc 1 633 9
 806 038e 7A4B     		ldr	r3, .L99
 807 0390 1B68     		ldr	r3, [r3]
 808 0392 794A     		ldr	r2, .L99
 809 0394 23F48073 		bic	r3, r3, #256
 810 0398 1360     		str	r3, [r2]
 634:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 635:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Get Start Tick*/
 636:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 811              		.loc 1 636 21
 812 039a FFF7FEFF 		bl	HAL_GetTick
 813 039e 3861     		str	r0, [r7, #16]
 637:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 638:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Wait till HSI is disabled */
 639:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         while(READ_BIT(RCC->CR, RCC_CR_HSIRDY) != 0U)
 814              		.loc 1 639 14
 815 03a0 08E0     		b	.L49
 816              	.L50:
 640:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 641:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 817              		.loc 1 641 15
 818 03a2 FFF7FEFF 		bl	HAL_GetTick
 819 03a6 0246     		mov	r2, r0
 820              		.loc 1 641 29
 821 03a8 3B69     		ldr	r3, [r7, #16]
 822 03aa D31A     		subs	r3, r2, r3
 823              		.loc 1 641 13
 824 03ac 022B     		cmp	r3, #2
 825 03ae 01D9     		bls	.L49
ARM GAS  /tmp/ccwaNkAs.s 			page 27


 642:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           {
 643:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 826              		.loc 1 643 20
 827 03b0 0323     		movs	r3, #3
 828 03b2 40E2     		b	.L14
 829              	.L49:
 639:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 830              		.loc 1 639 15
 831 03b4 704B     		ldr	r3, .L99
 832 03b6 1B68     		ldr	r3, [r3]
 833 03b8 03F48063 		and	r3, r3, #1024
 639:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 834              		.loc 1 639 14
 835 03bc 002B     		cmp	r3, #0
 836 03be F0D1     		bne	.L50
 837              	.L42:
 644:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           }
 645:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 646:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 647:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 648:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
 649:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /*------------------------------ LSI Configuration -------------------------*/
 650:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 838              		.loc 1 650 25
 839 03c0 7B68     		ldr	r3, [r7, #4]
 840 03c2 1B68     		ldr	r3, [r3]
 841              		.loc 1 650 43
 842 03c4 03F00803 		and	r3, r3, #8
 843              		.loc 1 650 5
 844 03c8 002B     		cmp	r3, #0
 845 03ca 3CD0     		beq	.L51
 651:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
 652:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Check the parameters */
 653:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));
 654:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 655:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Check the LSI State */
 656:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if(RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 846              		.loc 1 656 25
 847 03cc 7B68     		ldr	r3, [r7, #4]
 848 03ce 5B69     		ldr	r3, [r3, #20]
 849              		.loc 1 656 7
 850 03d0 002B     		cmp	r3, #0
 851 03d2 1CD0     		beq	.L52
 657:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 658:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_CSR_LSIPREDIV)
 659:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       uint32_t csr_temp = RCC->CSR;
 660:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 661:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Check LSI division factor */
 662:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       assert_param(IS_RCC_LSIDIV(RCC_OscInitStruct->LSIDiv));
 663:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 664:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       if (RCC_OscInitStruct->LSIDiv != (csr_temp & RCC_CSR_LSIPREDIV))
 665:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 666:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         if (((csr_temp & RCC_CSR_LSIRDY) == RCC_CSR_LSIRDY) && \
 667:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             ((csr_temp & RCC_CSR_LSION) != RCC_CSR_LSION))
 668:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 669:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            /* If LSIRDY is set while LSION is not enabled,
 670:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****               LSIPREDIV can't be updated  */
ARM GAS  /tmp/ccwaNkAs.s 			page 28


 671:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           return HAL_ERROR;
 672:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 673:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 674:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Turn off LSI before changing RCC_CSR_LSIPREDIV */
 675:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         if ((csr_temp & RCC_CSR_LSION) == RCC_CSR_LSION)
 676:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 677:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           __HAL_RCC_LSI_DISABLE();
 678:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 679:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           /* Get Start Tick*/
 680:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           tickstart = HAL_GetTick();
 681:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 682:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           /* Wait till LSI is disabled */
 683:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           while(READ_BIT(RCC->CSR, RCC_CSR_LSIRDY) != 0U)
 684:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           {
 685:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             if((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 686:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             {
 687:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****               return HAL_TIMEOUT;
 688:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             }
 689:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           }
 690:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 691:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 692:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Set LSI division factor */
 693:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         MODIFY_REG(RCC->CSR, RCC_CSR_LSIPREDIV, RCC_OscInitStruct->LSIDiv);
 694:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 695:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_CSR_LSIPREDIV */
 696:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 697:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Enable the Internal Low Speed oscillator (LSI). */
 698:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       __HAL_RCC_LSI_ENABLE();
 852              		.loc 1 698 7
 853 03d4 684B     		ldr	r3, .L99
 854 03d6 D3F89430 		ldr	r3, [r3, #148]
 855 03da 674A     		ldr	r2, .L99
 856 03dc 43F00103 		orr	r3, r3, #1
 857 03e0 C2F89430 		str	r3, [r2, #148]
 699:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 700:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Get Start Tick*/
 701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 858              		.loc 1 701 19
 859 03e4 FFF7FEFF 		bl	HAL_GetTick
 860 03e8 3861     		str	r0, [r7, #16]
 702:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 703:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Wait till LSI is ready */
 704:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       while(READ_BIT(RCC->CSR, RCC_CSR_LSIRDY) == 0U)
 861              		.loc 1 704 12
 862 03ea 08E0     		b	.L53
 863              	.L54:
 705:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 706:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 864              		.loc 1 706 13
 865 03ec FFF7FEFF 		bl	HAL_GetTick
 866 03f0 0246     		mov	r2, r0
 867              		.loc 1 706 27
 868 03f2 3B69     		ldr	r3, [r7, #16]
 869 03f4 D31A     		subs	r3, r2, r3
 870              		.loc 1 706 11
 871 03f6 022B     		cmp	r3, #2
 872 03f8 01D9     		bls	.L53
ARM GAS  /tmp/ccwaNkAs.s 			page 29


 707:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 708:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 873              		.loc 1 708 18
 874 03fa 0323     		movs	r3, #3
 875 03fc 1BE2     		b	.L14
 876              	.L53:
 704:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 877              		.loc 1 704 13
 878 03fe 5E4B     		ldr	r3, .L99
 879 0400 D3F89430 		ldr	r3, [r3, #148]
 880 0404 03F00203 		and	r3, r3, #2
 704:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 881              		.loc 1 704 12
 882 0408 002B     		cmp	r3, #0
 883 040a EFD0     		beq	.L54
 884 040c 1BE0     		b	.L51
 885              	.L52:
 709:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 710:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 711:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 712:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     else
 713:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 714:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Disable the Internal Low Speed oscillator (LSI). */
 715:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       __HAL_RCC_LSI_DISABLE();
 886              		.loc 1 715 7
 887 040e 5A4B     		ldr	r3, .L99
 888 0410 D3F89430 		ldr	r3, [r3, #148]
 889 0414 584A     		ldr	r2, .L99
 890 0416 23F00103 		bic	r3, r3, #1
 891 041a C2F89430 		str	r3, [r2, #148]
 716:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 717:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Get Start Tick*/
 718:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 892              		.loc 1 718 19
 893 041e FFF7FEFF 		bl	HAL_GetTick
 894 0422 3861     		str	r0, [r7, #16]
 719:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 720:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Wait till LSI is disabled */
 721:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       while(READ_BIT(RCC->CSR, RCC_CSR_LSIRDY) != 0U)
 895              		.loc 1 721 12
 896 0424 08E0     		b	.L55
 897              	.L56:
 722:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 898              		.loc 1 723 13
 899 0426 FFF7FEFF 		bl	HAL_GetTick
 900 042a 0246     		mov	r2, r0
 901              		.loc 1 723 27
 902 042c 3B69     		ldr	r3, [r7, #16]
 903 042e D31A     		subs	r3, r2, r3
 904              		.loc 1 723 11
 905 0430 022B     		cmp	r3, #2
 906 0432 01D9     		bls	.L55
 724:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 725:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 907              		.loc 1 725 18
 908 0434 0323     		movs	r3, #3
ARM GAS  /tmp/ccwaNkAs.s 			page 30


 909 0436 FEE1     		b	.L14
 910              	.L55:
 721:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 911              		.loc 1 721 13
 912 0438 4F4B     		ldr	r3, .L99
 913 043a D3F89430 		ldr	r3, [r3, #148]
 914 043e 03F00203 		and	r3, r3, #2
 721:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 915              		.loc 1 721 12
 916 0442 002B     		cmp	r3, #0
 917 0444 EFD1     		bne	.L56
 918              	.L51:
 726:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 727:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 728:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 729:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
 730:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /*------------------------------ LSE Configuration -------------------------*/
 731:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 919              		.loc 1 731 25
 920 0446 7B68     		ldr	r3, [r7, #4]
 921 0448 1B68     		ldr	r3, [r3]
 922              		.loc 1 731 43
 923 044a 03F00403 		and	r3, r3, #4
 924              		.loc 1 731 5
 925 044e 002B     		cmp	r3, #0
 926 0450 00F0A680 		beq	.L57
 927              	.LBB2:
 732:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
 733:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     FlagStatus       pwrclkchanged = RESET;
 928              		.loc 1 733 22
 929 0454 0023     		movs	r3, #0
 930 0456 FB77     		strb	r3, [r7, #31]
 734:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 735:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Check the parameters */
 736:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
 737:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 738:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Update LSE configuration in Backup Domain control register    */
 739:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Requires to enable write access to Backup Domain of necessary */
 740:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if(HAL_IS_BIT_CLR(RCC->APB1ENR1, RCC_APB1ENR1_PWREN))
 931              		.loc 1 740 8
 932 0458 474B     		ldr	r3, .L99
 933 045a 9B6D     		ldr	r3, [r3, #88]
 934 045c 03F08053 		and	r3, r3, #268435456
 935              		.loc 1 740 7
 936 0460 002B     		cmp	r3, #0
 937 0462 0DD1     		bne	.L58
 938              	.LBB3:
 741:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 742:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_ENABLE();
 939              		.loc 1 742 7
 940 0464 444B     		ldr	r3, .L99
 941 0466 9B6D     		ldr	r3, [r3, #88]
 942 0468 434A     		ldr	r2, .L99
 943 046a 43F08053 		orr	r3, r3, #268435456
 944 046e 9365     		str	r3, [r2, #88]
 945 0470 414B     		ldr	r3, .L99
 946 0472 9B6D     		ldr	r3, [r3, #88]
ARM GAS  /tmp/ccwaNkAs.s 			page 31


 947 0474 03F08053 		and	r3, r3, #268435456
 948 0478 BB60     		str	r3, [r7, #8]
 949 047a BB68     		ldr	r3, [r7, #8]
 950              	.LBE3:
 743:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       pwrclkchanged = SET;
 951              		.loc 1 743 21
 952 047c 0123     		movs	r3, #1
 953 047e FB77     		strb	r3, [r7, #31]
 954              	.L58:
 744:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 745:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 746:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if(HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 955              		.loc 1 746 8
 956 0480 3E4B     		ldr	r3, .L99+4
 957 0482 1B68     		ldr	r3, [r3]
 958 0484 03F48073 		and	r3, r3, #256
 959              		.loc 1 746 7
 960 0488 002B     		cmp	r3, #0
 961 048a 18D1     		bne	.L59
 747:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 748:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Enable write access to Backup domain */
 749:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       SET_BIT(PWR->CR1, PWR_CR1_DBP);
 962              		.loc 1 749 7
 963 048c 3B4B     		ldr	r3, .L99+4
 964 048e 1B68     		ldr	r3, [r3]
 965 0490 3A4A     		ldr	r2, .L99+4
 966 0492 43F48073 		orr	r3, r3, #256
 967 0496 1360     		str	r3, [r2]
 750:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 751:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Wait for Backup domain Write protection disable */
 752:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 968              		.loc 1 752 19
 969 0498 FFF7FEFF 		bl	HAL_GetTick
 970 049c 3861     		str	r0, [r7, #16]
 753:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 754:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       while(HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 971              		.loc 1 754 12
 972 049e 08E0     		b	.L60
 973              	.L61:
 755:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 756:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 974              		.loc 1 756 13
 975 04a0 FFF7FEFF 		bl	HAL_GetTick
 976 04a4 0246     		mov	r2, r0
 977              		.loc 1 756 27
 978 04a6 3B69     		ldr	r3, [r7, #16]
 979 04a8 D31A     		subs	r3, r2, r3
 980              		.loc 1 756 11
 981 04aa 022B     		cmp	r3, #2
 982 04ac 01D9     		bls	.L60
 757:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 758:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 983              		.loc 1 758 18
 984 04ae 0323     		movs	r3, #3
 985 04b0 C1E1     		b	.L14
 986              	.L60:
 754:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
ARM GAS  /tmp/ccwaNkAs.s 			page 32


 987              		.loc 1 754 13
 988 04b2 324B     		ldr	r3, .L99+4
 989 04b4 1B68     		ldr	r3, [r3]
 990 04b6 03F48073 		and	r3, r3, #256
 754:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 991              		.loc 1 754 12
 992 04ba 002B     		cmp	r3, #0
 993 04bc F0D0     		beq	.L61
 994              	.L59:
 759:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 760:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 761:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 762:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 763:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Set the new LSE configuration -----------------------------------------*/
 764:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_BDCR_LSESYSDIS)
 765:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if((RCC_OscInitStruct->LSEState & RCC_BDCR_LSEON) != 0U)
 766:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 767:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Set LSESYSDIS bit according to LSE propagation option (enabled or disabled) */
 768:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       MODIFY_REG(RCC->BDCR, RCC_BDCR_LSESYSDIS, (RCC_OscInitStruct->LSEState & RCC_BDCR_LSESYSDIS))
 769:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 770:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       if((RCC_OscInitStruct->LSEState & RCC_BDCR_LSEBYP) != 0U)
 771:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 772:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* LSE oscillator bypass enable */
 773:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         SET_BIT(RCC->BDCR, RCC_BDCR_LSEBYP);
 774:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         SET_BIT(RCC->BDCR, RCC_BDCR_LSEON);
 775:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 776:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       else
 777:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 778:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* LSE oscillator enable */
 779:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         SET_BIT(RCC->BDCR, RCC_BDCR_LSEON);
 780:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 781:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 782:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     else
 783:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 784:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSEON);
 785:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSEBYP);
 786:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 787:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #else
 788:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 995              		.loc 1 788 5
 996 04be 7B68     		ldr	r3, [r7, #4]
 997 04c0 9B68     		ldr	r3, [r3, #8]
 998 04c2 012B     		cmp	r3, #1
 999 04c4 08D1     		bne	.L62
 1000              		.loc 1 788 5 is_stmt 0 discriminator 1
 1001 04c6 2C4B     		ldr	r3, .L99
 1002 04c8 D3F89030 		ldr	r3, [r3, #144]
 1003 04cc 2A4A     		ldr	r2, .L99
 1004 04ce 43F00103 		orr	r3, r3, #1
 1005 04d2 C2F89030 		str	r3, [r2, #144]
 1006 04d6 24E0     		b	.L63
 1007              	.L62:
 1008              		.loc 1 788 5 discriminator 2
 1009 04d8 7B68     		ldr	r3, [r7, #4]
 1010 04da 9B68     		ldr	r3, [r3, #8]
 1011 04dc 052B     		cmp	r3, #5
 1012 04de 10D1     		bne	.L64
ARM GAS  /tmp/ccwaNkAs.s 			page 33


 1013              		.loc 1 788 5 discriminator 3
 1014 04e0 254B     		ldr	r3, .L99
 1015 04e2 D3F89030 		ldr	r3, [r3, #144]
 1016 04e6 244A     		ldr	r2, .L99
 1017 04e8 43F00403 		orr	r3, r3, #4
 1018 04ec C2F89030 		str	r3, [r2, #144]
 1019 04f0 214B     		ldr	r3, .L99
 1020 04f2 D3F89030 		ldr	r3, [r3, #144]
 1021 04f6 204A     		ldr	r2, .L99
 1022 04f8 43F00103 		orr	r3, r3, #1
 1023 04fc C2F89030 		str	r3, [r2, #144]
 1024 0500 0FE0     		b	.L63
 1025              	.L64:
 1026              		.loc 1 788 5 discriminator 4
 1027 0502 1D4B     		ldr	r3, .L99
 1028 0504 D3F89030 		ldr	r3, [r3, #144]
 1029 0508 1B4A     		ldr	r2, .L99
 1030 050a 23F00103 		bic	r3, r3, #1
 1031 050e C2F89030 		str	r3, [r2, #144]
 1032 0512 194B     		ldr	r3, .L99
 1033 0514 D3F89030 		ldr	r3, [r3, #144]
 1034 0518 174A     		ldr	r2, .L99
 1035 051a 23F00403 		bic	r3, r3, #4
 1036 051e C2F89030 		str	r3, [r2, #144]
 1037              	.L63:
 789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_BDCR_LSESYSDIS */
 790:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 791:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Check the LSE State */
 792:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if(RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 1038              		.loc 1 792 25 is_stmt 1
 1039 0522 7B68     		ldr	r3, [r7, #4]
 1040 0524 9B68     		ldr	r3, [r3, #8]
 1041              		.loc 1 792 7
 1042 0526 002B     		cmp	r3, #0
 1043 0528 16D0     		beq	.L65
 793:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 794:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Get Start Tick*/
 795:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 1044              		.loc 1 795 19
 1045 052a FFF7FEFF 		bl	HAL_GetTick
 1046 052e 3861     		str	r0, [r7, #16]
 796:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 797:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Wait till LSE is ready */
 798:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       while(READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == 0U)
 1047              		.loc 1 798 12
 1048 0530 0AE0     		b	.L66
 1049              	.L67:
 799:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 800:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 1050              		.loc 1 800 13
 1051 0532 FFF7FEFF 		bl	HAL_GetTick
 1052 0536 0246     		mov	r2, r0
 1053              		.loc 1 800 27
 1054 0538 3B69     		ldr	r3, [r7, #16]
 1055 053a D31A     		subs	r3, r2, r3
 1056              		.loc 1 800 11
 1057 053c 41F28832 		movw	r2, #5000
ARM GAS  /tmp/ccwaNkAs.s 			page 34


 1058 0540 9342     		cmp	r3, r2
 1059 0542 01D9     		bls	.L66
 801:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 802:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 1060              		.loc 1 802 18
 1061 0544 0323     		movs	r3, #3
 1062 0546 76E1     		b	.L14
 1063              	.L66:
 798:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 1064              		.loc 1 798 13
 1065 0548 0B4B     		ldr	r3, .L99
 1066 054a D3F89030 		ldr	r3, [r3, #144]
 1067 054e 03F00203 		and	r3, r3, #2
 798:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 1068              		.loc 1 798 12
 1069 0552 002B     		cmp	r3, #0
 1070 0554 EDD0     		beq	.L67
 1071 0556 1AE0     		b	.L68
 1072              	.L65:
 803:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 804:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 805:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 806:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     else
 807:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 808:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Get Start Tick*/
 809:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 1073              		.loc 1 809 19
 1074 0558 FFF7FEFF 		bl	HAL_GetTick
 1075 055c 3861     		str	r0, [r7, #16]
 810:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 811:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Wait till LSE is disabled */
 812:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       while(READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) != 0U)
 1076              		.loc 1 812 12
 1077 055e 0FE0     		b	.L69
 1078              	.L70:
 813:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 814:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 1079              		.loc 1 814 13
 1080 0560 FFF7FEFF 		bl	HAL_GetTick
 1081 0564 0246     		mov	r2, r0
 1082              		.loc 1 814 27
 1083 0566 3B69     		ldr	r3, [r7, #16]
 1084 0568 D31A     		subs	r3, r2, r3
 1085              		.loc 1 814 11
 1086 056a 41F28832 		movw	r2, #5000
 1087 056e 9342     		cmp	r3, r2
 1088 0570 06D9     		bls	.L69
 815:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 816:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 1089              		.loc 1 816 18
 1090 0572 0323     		movs	r3, #3
 1091 0574 5FE1     		b	.L14
 1092              	.L100:
 1093 0576 00BF     		.align	2
 1094              	.L99:
 1095 0578 00100240 		.word	1073876992
 1096 057c 00700040 		.word	1073770496
ARM GAS  /tmp/ccwaNkAs.s 			page 35


 1097              	.L69:
 812:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 1098              		.loc 1 812 13
 1099 0580 AA4B     		ldr	r3, .L101
 1100 0582 D3F89030 		ldr	r3, [r3, #144]
 1101 0586 03F00203 		and	r3, r3, #2
 812:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 1102              		.loc 1 812 12
 1103 058a 002B     		cmp	r3, #0
 1104 058c E8D1     		bne	.L70
 1105              	.L68:
 817:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 818:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 819:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 820:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_BDCR_LSESYSDIS)
 821:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* By default, stop disabling LSE propagation */
 822:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSESYSDIS);
 823:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_BDCR_LSESYSDIS */
 824:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 825:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 826:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Restore clock configuration if changed */
 827:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if(pwrclkchanged == SET)
 1106              		.loc 1 827 7
 1107 058e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 1108 0590 012B     		cmp	r3, #1
 1109 0592 05D1     		bne	.L57
 828:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 829:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_DISABLE();
 1110              		.loc 1 829 7
 1111 0594 A54B     		ldr	r3, .L101
 1112 0596 9B6D     		ldr	r3, [r3, #88]
 1113 0598 A44A     		ldr	r2, .L101
 1114 059a 23F08053 		bic	r3, r3, #268435456
 1115 059e 9365     		str	r3, [r2, #88]
 1116              	.L57:
 1117              	.LBE2:
 830:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 831:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
 832:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_HSI48_SUPPORT)
 833:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /*------------------------------ HSI48 Configuration -----------------------*/
 834:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
 1118              		.loc 1 834 25
 1119 05a0 7B68     		ldr	r3, [r7, #4]
 1120 05a2 1B68     		ldr	r3, [r3]
 1121              		.loc 1 834 43
 1122 05a4 03F02003 		and	r3, r3, #32
 1123              		.loc 1 834 5
 1124 05a8 002B     		cmp	r3, #0
 1125 05aa 3CD0     		beq	.L71
 835:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
 836:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Check the parameters */
 837:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     assert_param(IS_RCC_HSI48(RCC_OscInitStruct->HSI48State));
 838:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 839:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Check the LSI State */
 840:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if(RCC_OscInitStruct->HSI48State != RCC_HSI48_OFF)
 1126              		.loc 1 840 25
 1127 05ac 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccwaNkAs.s 			page 36


 1128 05ae 5B6A     		ldr	r3, [r3, #36]
 1129              		.loc 1 840 7
 1130 05b0 002B     		cmp	r3, #0
 1131 05b2 1CD0     		beq	.L72
 841:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 842:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Enable the Internal Low Speed oscillator (HSI48). */
 843:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       __HAL_RCC_HSI48_ENABLE();
 1132              		.loc 1 843 7
 1133 05b4 9D4B     		ldr	r3, .L101
 1134 05b6 D3F89830 		ldr	r3, [r3, #152]
 1135 05ba 9C4A     		ldr	r2, .L101
 1136 05bc 43F00103 		orr	r3, r3, #1
 1137 05c0 C2F89830 		str	r3, [r2, #152]
 844:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 845:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Get Start Tick*/
 846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 1138              		.loc 1 846 19
 1139 05c4 FFF7FEFF 		bl	HAL_GetTick
 1140 05c8 3861     		str	r0, [r7, #16]
 847:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 848:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Wait till HSI48 is ready */
 849:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       while(READ_BIT(RCC->CRRCR, RCC_CRRCR_HSI48RDY) == 0U)
 1141              		.loc 1 849 12
 1142 05ca 08E0     		b	.L73
 1143              	.L74:
 850:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 851:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 1144              		.loc 1 851 13
 1145 05cc FFF7FEFF 		bl	HAL_GetTick
 1146 05d0 0246     		mov	r2, r0
 1147              		.loc 1 851 27
 1148 05d2 3B69     		ldr	r3, [r7, #16]
 1149 05d4 D31A     		subs	r3, r2, r3
 1150              		.loc 1 851 11
 1151 05d6 022B     		cmp	r3, #2
 1152 05d8 01D9     		bls	.L73
 852:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 853:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 1153              		.loc 1 853 18
 1154 05da 0323     		movs	r3, #3
 1155 05dc 2BE1     		b	.L14
 1156              	.L73:
 849:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 1157              		.loc 1 849 13
 1158 05de 934B     		ldr	r3, .L101
 1159 05e0 D3F89830 		ldr	r3, [r3, #152]
 1160 05e4 03F00203 		and	r3, r3, #2
 849:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 1161              		.loc 1 849 12
 1162 05e8 002B     		cmp	r3, #0
 1163 05ea EFD0     		beq	.L74
 1164 05ec 1BE0     		b	.L71
 1165              	.L72:
 854:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 855:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 856:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 857:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     else
ARM GAS  /tmp/ccwaNkAs.s 			page 37


 858:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 859:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Disable the Internal Low Speed oscillator (HSI48). */
 860:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       __HAL_RCC_HSI48_DISABLE();
 1166              		.loc 1 860 7
 1167 05ee 8F4B     		ldr	r3, .L101
 1168 05f0 D3F89830 		ldr	r3, [r3, #152]
 1169 05f4 8D4A     		ldr	r2, .L101
 1170 05f6 23F00103 		bic	r3, r3, #1
 1171 05fa C2F89830 		str	r3, [r2, #152]
 861:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 862:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Get Start Tick*/
 863:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 1172              		.loc 1 863 19
 1173 05fe FFF7FEFF 		bl	HAL_GetTick
 1174 0602 3861     		str	r0, [r7, #16]
 864:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 865:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Wait till HSI48 is disabled */
 866:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       while(READ_BIT(RCC->CRRCR, RCC_CRRCR_HSI48RDY) != 0U)
 1175              		.loc 1 866 12
 1176 0604 08E0     		b	.L75
 1177              	.L76:
 867:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 868:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 1178              		.loc 1 868 13
 1179 0606 FFF7FEFF 		bl	HAL_GetTick
 1180 060a 0246     		mov	r2, r0
 1181              		.loc 1 868 27
 1182 060c 3B69     		ldr	r3, [r7, #16]
 1183 060e D31A     		subs	r3, r2, r3
 1184              		.loc 1 868 11
 1185 0610 022B     		cmp	r3, #2
 1186 0612 01D9     		bls	.L75
 869:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 870:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 1187              		.loc 1 870 18
 1188 0614 0323     		movs	r3, #3
 1189 0616 0EE1     		b	.L14
 1190              	.L75:
 866:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 1191              		.loc 1 866 13
 1192 0618 844B     		ldr	r3, .L101
 1193 061a D3F89830 		ldr	r3, [r3, #152]
 1194 061e 03F00203 		and	r3, r3, #2
 866:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 1195              		.loc 1 866 12
 1196 0622 002B     		cmp	r3, #0
 1197 0624 EFD1     		bne	.L76
 1198              	.L71:
 871:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 872:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 873:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 874:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
 875:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_HSI48_SUPPORT */
 876:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /*-------------------------------- PLL Configuration -----------------------*/
 877:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Check the parameters */
 878:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
 879:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
ARM GAS  /tmp/ccwaNkAs.s 			page 38


 880:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(RCC_OscInitStruct->PLL.PLLState != RCC_PLL_NONE)
 1199              		.loc 1 880 28
 1200 0626 7B68     		ldr	r3, [r7, #4]
 1201 0628 9B6A     		ldr	r3, [r3, #40]
 1202              		.loc 1 880 5
 1203 062a 002B     		cmp	r3, #0
 1204 062c 00F00281 		beq	.L77
 881:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
 882:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* PLL On ? */
 883:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if(RCC_OscInitStruct->PLL.PLLState == RCC_PLL_ON)
 1205              		.loc 1 883 30
 1206 0630 7B68     		ldr	r3, [r7, #4]
 1207 0632 9B6A     		ldr	r3, [r3, #40]
 1208              		.loc 1 883 7
 1209 0634 022B     		cmp	r3, #2
 1210 0636 40F0C580 		bne	.L78
 884:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 885:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Check the parameters */
 886:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
 887:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
 888:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
 889:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_PLLP_SUPPORT)
 890:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
 891:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_PLLP_SUPPORT */
 892:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
 893:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       assert_param(IS_RCC_PLLR_VALUE(RCC_OscInitStruct->PLL.PLLR));
 894:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 895:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Do nothing if PLL configuration is the unchanged */
 896:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       pll_config = RCC->PLLCFGR;
 1211              		.loc 1 896 23
 1212 063a 7C4B     		ldr	r3, .L101
 1213              		.loc 1 896 18
 1214 063c DB68     		ldr	r3, [r3, #12]
 1215 063e 7B61     		str	r3, [r7, #20]
 897:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC)  != RCC_OscInitStruct->PLL.PLLSource) ||
 1216              		.loc 1 897 11
 1217 0640 7B69     		ldr	r3, [r7, #20]
 1218 0642 03F00302 		and	r2, r3, #3
 1219              		.loc 1 897 78
 1220 0646 7B68     		ldr	r3, [r7, #4]
 1221 0648 DB6A     		ldr	r3, [r3, #44]
 1222              		.loc 1 897 9
 1223 064a 9A42     		cmp	r2, r3
 1224 064c 2CD1     		bne	.L79
 898:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****          (READ_BIT(pll_config, RCC_PLLCFGR_PLLM)    != ((RCC_OscInitStruct->PLL.PLLM - 1U) << RCC_P
 1225              		.loc 1 898 11 discriminator 1
 1226 064e 7B69     		ldr	r3, [r7, #20]
 1227 0650 03F07002 		and	r2, r3, #112
 1228              		.loc 1 898 80 discriminator 1
 1229 0654 7B68     		ldr	r3, [r7, #4]
 1230 0656 1B6B     		ldr	r3, [r3, #48]
 1231              		.loc 1 898 86 discriminator 1
 1232 0658 013B     		subs	r3, r3, #1
 1233              		.loc 1 898 92 discriminator 1
 1234 065a 1B01     		lsls	r3, r3, #4
 897:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC)  != RCC_OscInitStruct->PLL.PLLSource) ||
 1235              		.loc 1 897 90 discriminator 1
ARM GAS  /tmp/ccwaNkAs.s 			page 39


 1236 065c 9A42     		cmp	r2, r3
 1237 065e 23D1     		bne	.L79
 899:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****          (READ_BIT(pll_config, RCC_PLLCFGR_PLLN)    != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_
 1238              		.loc 1 899 11
 1239 0660 7B69     		ldr	r3, [r7, #20]
 1240 0662 03F4FE42 		and	r2, r3, #32512
 1241              		.loc 1 899 79
 1242 0666 7B68     		ldr	r3, [r7, #4]
 1243 0668 5B6B     		ldr	r3, [r3, #52]
 1244              		.loc 1 899 85
 1245 066a 1B02     		lsls	r3, r3, #8
 898:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****          (READ_BIT(pll_config, RCC_PLLCFGR_PLLM)    != ((RCC_OscInitStruct->PLL.PLLM - 1U) << RCC_P
 1246              		.loc 1 898 118
 1247 066c 9A42     		cmp	r2, r3
 1248 066e 1BD1     		bne	.L79
 900:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_PLLP_SUPPORT)
 901:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_PLLP_DIV_2_31_SUPPORT)
 902:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****          (READ_BIT(pll_config, RCC_PLLCFGR_PLLPDIV) != (RCC_OscInitStruct->PLL.PLLP << RCC_PLLCFGR_
 1249              		.loc 1 902 11
 1250 0670 7B69     		ldr	r3, [r7, #20]
 1251 0672 03F07842 		and	r2, r3, #-134217728
 1252              		.loc 1 902 79
 1253 0676 7B68     		ldr	r3, [r7, #4]
 1254 0678 9B6B     		ldr	r3, [r3, #56]
 1255              		.loc 1 902 85
 1256 067a DB06     		lsls	r3, r3, #27
 899:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****          (READ_BIT(pll_config, RCC_PLLCFGR_PLLN)    != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_
 1257              		.loc 1 899 111
 1258 067c 9A42     		cmp	r2, r3
 1259 067e 13D1     		bne	.L79
 903:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #else
 904:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****          (READ_BIT(pll_config, RCC_PLLCFGR_PLLP)    != ((RCC_OscInitStruct->PLL.PLLP == RCC_PLLP_DI
 905:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif
 906:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif
 907:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****          (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ)    != ((((RCC_OscInitStruct->PLL.PLLQ) >> 1U) - 1U
 1260              		.loc 1 907 11
 1261 0680 7B69     		ldr	r3, [r7, #20]
 1262 0682 03F4C002 		and	r2, r3, #6291456
 1263              		.loc 1 907 82
 1264 0686 7B68     		ldr	r3, [r7, #4]
 1265 0688 DB6B     		ldr	r3, [r3, #60]
 1266              		.loc 1 907 89
 1267 068a 5B08     		lsrs	r3, r3, #1
 1268              		.loc 1 907 96
 1269 068c 013B     		subs	r3, r3, #1
 1270              		.loc 1 907 102
 1271 068e 5B05     		lsls	r3, r3, #21
 902:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #else
 1272              		.loc 1 902 114
 1273 0690 9A42     		cmp	r2, r3
 1274 0692 09D1     		bne	.L79
 908:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****          (READ_BIT(pll_config, RCC_PLLCFGR_PLLR)    != ((((RCC_OscInitStruct->PLL.PLLR) >> 1U) - 1U
 1275              		.loc 1 908 11
 1276 0694 7B69     		ldr	r3, [r7, #20]
 1277 0696 03F0C062 		and	r2, r3, #100663296
 1278              		.loc 1 908 82
 1279 069a 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccwaNkAs.s 			page 40


 1280 069c 1B6C     		ldr	r3, [r3, #64]
 1281              		.loc 1 908 89
 1282 069e 5B08     		lsrs	r3, r3, #1
 1283              		.loc 1 908 96
 1284 06a0 013B     		subs	r3, r3, #1
 1285              		.loc 1 908 102
 1286 06a2 5B06     		lsls	r3, r3, #25
 907:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****          (READ_BIT(pll_config, RCC_PLLCFGR_PLLR)    != ((((RCC_OscInitStruct->PLL.PLLR) >> 1U) - 1U
 1287              		.loc 1 907 128
 1288 06a4 9A42     		cmp	r2, r3
 1289 06a6 67D0     		beq	.L80
 1290              	.L79:
 909:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 910:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Check if the PLL is used as system clock or not */
 911:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         if(sysclk_source != RCC_CFGR_SWS_PLL)
 1291              		.loc 1 911 11
 1292 06a8 BB69     		ldr	r3, [r7, #24]
 1293 06aa 0C2B     		cmp	r3, #12
 1294 06ac 62D0     		beq	.L81
 912:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 913:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_PLLSAI1_SUPPORT) || defined(RCC_PLLSAI2_SUPPORT)
 914:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           /* Check if main PLL can be updated */
 915:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           /* Not possible if the source is shared by other enabled PLLSAIx */
 916:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           if((READ_BIT(RCC->CR, RCC_CR_PLLSAI1ON) != 0U)
 1295              		.loc 1 916 15
 1296 06ae 5F4B     		ldr	r3, .L101
 1297 06b0 1B68     		ldr	r3, [r3]
 1298 06b2 03F08063 		and	r3, r3, #67108864
 1299              		.loc 1 916 13
 1300 06b6 002B     		cmp	r3, #0
 1301 06b8 01D0     		beq	.L82
 917:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_PLLSAI2_SUPPORT)
 918:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****              || (READ_BIT(RCC->CR, RCC_CR_PLLSAI2ON) != 0U)
 919:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif
 920:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             )
 921:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           {
 922:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             return HAL_ERROR;
 1302              		.loc 1 922 20
 1303 06ba 0123     		movs	r3, #1
 1304 06bc BBE0     		b	.L14
 1305              	.L82:
 923:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           }
 924:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           else
 925:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_PLLSAI1_SUPPORT || RCC_PLLSAI2_SUPPORT */
 926:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           {
 927:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             /* Disable the main PLL. */
 928:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             __HAL_RCC_PLL_DISABLE();
 1306              		.loc 1 928 13
 1307 06be 5B4B     		ldr	r3, .L101
 1308 06c0 1B68     		ldr	r3, [r3]
 1309 06c2 5A4A     		ldr	r2, .L101
 1310 06c4 23F08073 		bic	r3, r3, #16777216
 1311 06c8 1360     		str	r3, [r2]
 929:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 930:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             /* Get Start Tick*/
 931:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             tickstart = HAL_GetTick();
 1312              		.loc 1 931 25
ARM GAS  /tmp/ccwaNkAs.s 			page 41


 1313 06ca FFF7FEFF 		bl	HAL_GetTick
 1314 06ce 3861     		str	r0, [r7, #16]
 932:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 933:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             /* Wait till PLL is ready */
 934:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             while(READ_BIT(RCC->CR, RCC_CR_PLLRDY) != 0U)
 1315              		.loc 1 934 18
 1316 06d0 08E0     		b	.L83
 1317              	.L84:
 935:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             {
 936:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****               if((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 1318              		.loc 1 936 19
 1319 06d2 FFF7FEFF 		bl	HAL_GetTick
 1320 06d6 0246     		mov	r2, r0
 1321              		.loc 1 936 33
 1322 06d8 3B69     		ldr	r3, [r7, #16]
 1323 06da D31A     		subs	r3, r2, r3
 1324              		.loc 1 936 17
 1325 06dc 022B     		cmp	r3, #2
 1326 06de 01D9     		bls	.L83
 937:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****               {
 938:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                 return HAL_TIMEOUT;
 1327              		.loc 1 938 24
 1328 06e0 0323     		movs	r3, #3
 1329 06e2 A8E0     		b	.L14
 1330              	.L83:
 934:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             {
 1331              		.loc 1 934 19
 1332 06e4 514B     		ldr	r3, .L101
 1333 06e6 1B68     		ldr	r3, [r3]
 1334 06e8 03F00073 		and	r3, r3, #33554432
 934:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             {
 1335              		.loc 1 934 18
 1336 06ec 002B     		cmp	r3, #0
 1337 06ee F0D1     		bne	.L84
 939:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****               }
 940:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             }
 941:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 942:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             /* Configure the main PLL clock source, multiplication and division factors. */
 943:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 1338              		.loc 1 943 13
 1339 06f0 4E4B     		ldr	r3, .L101
 1340 06f2 DA68     		ldr	r2, [r3, #12]
 1341 06f4 4E4B     		ldr	r3, .L101+4
 1342 06f6 1340     		ands	r3, r3, r2
 1343 06f8 7A68     		ldr	r2, [r7, #4]
 1344 06fa D16A     		ldr	r1, [r2, #44]
 1345 06fc 7A68     		ldr	r2, [r7, #4]
 1346 06fe 126B     		ldr	r2, [r2, #48]
 1347 0700 013A     		subs	r2, r2, #1
 1348 0702 1201     		lsls	r2, r2, #4
 1349 0704 1143     		orrs	r1, r1, r2
 1350 0706 7A68     		ldr	r2, [r7, #4]
 1351 0708 526B     		ldr	r2, [r2, #52]
 1352 070a 1202     		lsls	r2, r2, #8
 1353 070c 1143     		orrs	r1, r1, r2
 1354 070e 7A68     		ldr	r2, [r7, #4]
 1355 0710 D26B     		ldr	r2, [r2, #60]
ARM GAS  /tmp/ccwaNkAs.s 			page 42


 1356 0712 5208     		lsrs	r2, r2, #1
 1357 0714 013A     		subs	r2, r2, #1
 1358 0716 5205     		lsls	r2, r2, #21
 1359 0718 1143     		orrs	r1, r1, r2
 1360 071a 7A68     		ldr	r2, [r7, #4]
 1361 071c 126C     		ldr	r2, [r2, #64]
 1362 071e 5208     		lsrs	r2, r2, #1
 1363 0720 013A     		subs	r2, r2, #1
 1364 0722 5206     		lsls	r2, r2, #25
 1365 0724 1143     		orrs	r1, r1, r2
 1366 0726 7A68     		ldr	r2, [r7, #4]
 1367 0728 926B     		ldr	r2, [r2, #56]
 1368 072a D206     		lsls	r2, r2, #27
 1369 072c 0A43     		orrs	r2, r2, r1
 1370 072e 3F49     		ldr	r1, .L101
 1371 0730 1343     		orrs	r3, r3, r2
 1372 0732 CB60     		str	r3, [r1, #12]
 944:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                                  RCC_OscInitStruct->PLL.PLLM,
 945:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                                  RCC_OscInitStruct->PLL.PLLN,
 946:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_PLLP_SUPPORT)
 947:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                                  RCC_OscInitStruct->PLL.PLLP,
 948:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif
 949:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                                  RCC_OscInitStruct->PLL.PLLQ,
 950:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                                  RCC_OscInitStruct->PLL.PLLR);
 951:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 952:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             /* Enable the main PLL. */
 953:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             __HAL_RCC_PLL_ENABLE();
 1373              		.loc 1 953 13
 1374 0734 3D4B     		ldr	r3, .L101
 1375 0736 1B68     		ldr	r3, [r3]
 1376 0738 3C4A     		ldr	r2, .L101
 1377 073a 43F08073 		orr	r3, r3, #16777216
 1378 073e 1360     		str	r3, [r2]
 954:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 955:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             /* Enable PLL System Clock output. */
 956:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL_SYSCLK);
 1379              		.loc 1 956 13
 1380 0740 3A4B     		ldr	r3, .L101
 1381 0742 DB68     		ldr	r3, [r3, #12]
 1382 0744 394A     		ldr	r2, .L101
 1383 0746 43F08073 		orr	r3, r3, #16777216
 1384 074a D360     		str	r3, [r2, #12]
 957:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 958:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             /* Get Start Tick*/
 959:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             tickstart = HAL_GetTick();
 1385              		.loc 1 959 25
 1386 074c FFF7FEFF 		bl	HAL_GetTick
 1387 0750 3861     		str	r0, [r7, #16]
 960:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 961:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             /* Wait till PLL is ready */
 962:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             while(READ_BIT(RCC->CR, RCC_CR_PLLRDY) == 0U)
 1388              		.loc 1 962 18
 1389 0752 08E0     		b	.L85
 1390              	.L86:
 963:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             {
 964:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****               if((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 1391              		.loc 1 964 19
ARM GAS  /tmp/ccwaNkAs.s 			page 43


 1392 0754 FFF7FEFF 		bl	HAL_GetTick
 1393 0758 0246     		mov	r2, r0
 1394              		.loc 1 964 33
 1395 075a 3B69     		ldr	r3, [r7, #16]
 1396 075c D31A     		subs	r3, r2, r3
 1397              		.loc 1 964 17
 1398 075e 022B     		cmp	r3, #2
 1399 0760 01D9     		bls	.L85
 965:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****               {
 966:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                 return HAL_TIMEOUT;
 1400              		.loc 1 966 24
 1401 0762 0323     		movs	r3, #3
 1402 0764 67E0     		b	.L14
 1403              	.L85:
 962:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             {
 1404              		.loc 1 962 19
 1405 0766 314B     		ldr	r3, .L101
 1406 0768 1B68     		ldr	r3, [r3]
 1407 076a 03F00073 		and	r3, r3, #33554432
 962:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             {
 1408              		.loc 1 962 18
 1409 076e 002B     		cmp	r3, #0
 1410 0770 F0D0     		beq	.L86
 911:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 1411              		.loc 1 911 11
 1412 0772 5FE0     		b	.L77
 1413              	.L81:
 967:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****               }
 968:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             }
 969:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           }
 970:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 971:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         else
 972:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 973:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           /* PLL is already used as System core clock */
 974:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           return HAL_ERROR;
 1414              		.loc 1 974 18
 1415 0774 0123     		movs	r3, #1
 1416 0776 5EE0     		b	.L14
 1417              	.L80:
 975:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 976:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 977:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       else
 978:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 979:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* PLL configuration is unchanged */
 980:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Re-enable PLL if it was disabled (ie. low power mode) */
 981:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         if(READ_BIT(RCC->CR, RCC_CR_PLLRDY) == 0U)
 1418              		.loc 1 981 12
 1419 0778 2C4B     		ldr	r3, .L101
 1420 077a 1B68     		ldr	r3, [r3]
 1421 077c 03F00073 		and	r3, r3, #33554432
 1422              		.loc 1 981 11
 1423 0780 002B     		cmp	r3, #0
 1424 0782 57D1     		bne	.L77
 982:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 983:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           /* Enable the main PLL. */
 984:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           __HAL_RCC_PLL_ENABLE();
 1425              		.loc 1 984 11
ARM GAS  /tmp/ccwaNkAs.s 			page 44


 1426 0784 294B     		ldr	r3, .L101
 1427 0786 1B68     		ldr	r3, [r3]
 1428 0788 284A     		ldr	r2, .L101
 1429 078a 43F08073 		orr	r3, r3, #16777216
 1430 078e 1360     		str	r3, [r2]
 985:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 986:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           /* Enable PLL System Clock output. */
 987:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL_SYSCLK);
 1431              		.loc 1 987 11
 1432 0790 264B     		ldr	r3, .L101
 1433 0792 DB68     		ldr	r3, [r3, #12]
 1434 0794 254A     		ldr	r2, .L101
 1435 0796 43F08073 		orr	r3, r3, #16777216
 1436 079a D360     		str	r3, [r2, #12]
 988:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 989:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           /* Get Start Tick*/
 990:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           tickstart = HAL_GetTick();
 1437              		.loc 1 990 23
 1438 079c FFF7FEFF 		bl	HAL_GetTick
 1439 07a0 3861     		str	r0, [r7, #16]
 991:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 992:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           /* Wait till PLL is ready */
 993:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           while(READ_BIT(RCC->CR, RCC_CR_PLLRDY) == 0U)
 1440              		.loc 1 993 16
 1441 07a2 08E0     		b	.L89
 1442              	.L90:
 994:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           {
 995:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             if((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 1443              		.loc 1 995 17
 1444 07a4 FFF7FEFF 		bl	HAL_GetTick
 1445 07a8 0246     		mov	r2, r0
 1446              		.loc 1 995 31
 1447 07aa 3B69     		ldr	r3, [r7, #16]
 1448 07ac D31A     		subs	r3, r2, r3
 1449              		.loc 1 995 15
 1450 07ae 022B     		cmp	r3, #2
 1451 07b0 01D9     		bls	.L89
 996:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             {
 997:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****               return HAL_TIMEOUT;
 1452              		.loc 1 997 22
 1453 07b2 0323     		movs	r3, #3
 1454 07b4 3FE0     		b	.L14
 1455              	.L89:
 993:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           {
 1456              		.loc 1 993 17
 1457 07b6 1D4B     		ldr	r3, .L101
 1458 07b8 1B68     		ldr	r3, [r3]
 1459 07ba 03F00073 		and	r3, r3, #33554432
 993:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           {
 1460              		.loc 1 993 16
 1461 07be 002B     		cmp	r3, #0
 1462 07c0 F0D0     		beq	.L90
 1463 07c2 37E0     		b	.L77
 1464              	.L78:
 998:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             }
 999:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           }
1000:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
ARM GAS  /tmp/ccwaNkAs.s 			page 45


1001:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
1002:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
1003:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     else
1004:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
1005:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Check that PLL is not used as system clock or not */
1006:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       if(sysclk_source != RCC_CFGR_SWS_PLL)
 1465              		.loc 1 1006 9
 1466 07c4 BB69     		ldr	r3, [r7, #24]
 1467 07c6 0C2B     		cmp	r3, #12
 1468 07c8 2DD0     		beq	.L91
1007:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
1008:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Disable the main PLL. */
1009:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 1469              		.loc 1 1009 9
 1470 07ca 184B     		ldr	r3, .L101
 1471 07cc 1B68     		ldr	r3, [r3]
 1472 07ce 174A     		ldr	r2, .L101
 1473 07d0 23F08073 		bic	r3, r3, #16777216
 1474 07d4 1360     		str	r3, [r2]
1010:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1011:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Disable all PLL outputs to save power if no PLLs on */
1012:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_PLLSAI1_SUPPORT) && defined(RCC_CR_PLLSAI2RDY)
1013:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         if(READ_BIT(RCC->CR, (RCC_CR_PLLSAI1RDY | RCC_CR_PLLSAI2RDY)) == 0U)
1014:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
1015:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           MODIFY_REG(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC, RCC_PLLSOURCE_NONE);
1016:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
1017:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #elif defined(RCC_PLLSAI1_SUPPORT)
1018:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         if(READ_BIT(RCC->CR, RCC_CR_PLLSAI1RDY) == 0U)
 1475              		.loc 1 1018 12
 1476 07d6 154B     		ldr	r3, .L101
 1477 07d8 1B68     		ldr	r3, [r3]
 1478 07da 03F00063 		and	r3, r3, #134217728
 1479              		.loc 1 1018 11
 1480 07de 002B     		cmp	r3, #0
 1481 07e0 05D1     		bne	.L92
1019:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
1020:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           MODIFY_REG(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC, RCC_PLLSOURCE_NONE);
 1482              		.loc 1 1020 11
 1483 07e2 124B     		ldr	r3, .L101
 1484 07e4 DB68     		ldr	r3, [r3, #12]
 1485 07e6 114A     		ldr	r2, .L101
 1486 07e8 23F00303 		bic	r3, r3, #3
 1487 07ec D360     		str	r3, [r2, #12]
 1488              	.L92:
1021:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
1022:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #else
1023:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         MODIFY_REG(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC, RCC_PLLSOURCE_NONE);
1024:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_PLLSAI1_SUPPORT && RCC_CR_PLLSAI2RDY */
1025:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1026:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_PLLSAI2_SUPPORT)
1027:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         __HAL_RCC_PLLCLKOUT_DISABLE(RCC_PLL_SYSCLK | RCC_PLL_48M1CLK | RCC_PLL_SAI3CLK);
1028:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #elif defined(RCC_PLLSAI1_SUPPORT)
1029:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         __HAL_RCC_PLLCLKOUT_DISABLE(RCC_PLL_SYSCLK | RCC_PLL_48M1CLK | RCC_PLL_SAI2CLK);
 1489              		.loc 1 1029 9
 1490 07ee 0F4B     		ldr	r3, .L101
 1491 07f0 DB68     		ldr	r3, [r3, #12]
 1492 07f2 0E4A     		ldr	r2, .L101
ARM GAS  /tmp/ccwaNkAs.s 			page 46


 1493 07f4 23F08873 		bic	r3, r3, #17825792
 1494 07f8 23F48033 		bic	r3, r3, #65536
 1495 07fc D360     		str	r3, [r2, #12]
1030:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #else
1031:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         __HAL_RCC_PLLCLKOUT_DISABLE(RCC_PLL_SYSCLK | RCC_PLL_48M1CLK);
1032:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_PLLSAI2_SUPPORT */
1033:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1034:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Get Start Tick*/
1035:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 1496              		.loc 1 1035 21
 1497 07fe FFF7FEFF 		bl	HAL_GetTick
 1498 0802 3861     		str	r0, [r7, #16]
1036:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1037:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Wait till PLL is disabled */
1038:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         while(READ_BIT(RCC->CR, RCC_CR_PLLRDY) != 0U)
 1499              		.loc 1 1038 14
 1500 0804 08E0     		b	.L93
 1501              	.L94:
1039:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
1040:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 1502              		.loc 1 1040 15
 1503 0806 FFF7FEFF 		bl	HAL_GetTick
 1504 080a 0246     		mov	r2, r0
 1505              		.loc 1 1040 29
 1506 080c 3B69     		ldr	r3, [r7, #16]
 1507 080e D31A     		subs	r3, r2, r3
 1508              		.loc 1 1040 13
 1509 0810 022B     		cmp	r3, #2
 1510 0812 01D9     		bls	.L93
1041:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           {
1042:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 1511              		.loc 1 1042 20
 1512 0814 0323     		movs	r3, #3
 1513 0816 0EE0     		b	.L14
 1514              	.L93:
1038:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 1515              		.loc 1 1038 15
 1516 0818 044B     		ldr	r3, .L101
 1517 081a 1B68     		ldr	r3, [r3]
 1518 081c 03F00073 		and	r3, r3, #33554432
1038:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 1519              		.loc 1 1038 14
 1520 0820 002B     		cmp	r3, #0
 1521 0822 F0D1     		bne	.L94
 1522 0824 06E0     		b	.L77
 1523              	.L91:
1043:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           }
1044:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
1045:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
1046:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       else
1047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
1048:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* PLL is already used as System core clock */
1049:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         return HAL_ERROR;
 1524              		.loc 1 1049 16
 1525 0826 0123     		movs	r3, #1
 1526 0828 05E0     		b	.L14
 1527              	.L102:
ARM GAS  /tmp/ccwaNkAs.s 			page 47


 1528 082a 00BF     		.align	2
 1529              	.L101:
 1530 082c 00100240 		.word	1073876992
 1531 0830 8C809D01 		.word	27099276
 1532              	.L77:
1050:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
1051:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
1052:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1053:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   return HAL_OK;
 1533              		.loc 1 1053 10
 1534 0834 0023     		movs	r3, #0
 1535              	.L14:
1054:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** }
 1536              		.loc 1 1054 1
 1537 0836 1846     		mov	r0, r3
 1538 0838 2037     		adds	r7, r7, #32
 1539              	.LCFI8:
 1540              		.cfi_def_cfa_offset 8
 1541 083a BD46     		mov	sp, r7
 1542              	.LCFI9:
 1543              		.cfi_def_cfa_register 13
 1544              		@ sp needed
 1545 083c 80BD     		pop	{r7, pc}
 1546              		.cfi_endproc
 1547              	.LFE131:
 1549 083e 00BF     		.section	.text.HAL_RCC_ClockConfig,"ax",%progbits
 1550              		.align	1
 1551              		.global	HAL_RCC_ClockConfig
 1552              		.syntax unified
 1553              		.thumb
 1554              		.thumb_func
 1555              		.fpu fpv4-sp-d16
 1557              	HAL_RCC_ClockConfig:
 1558              	.LFB132:
1055:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1056:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /**
1057:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @brief  Initialize the CPU, AHB and APB busses clocks according to the specified
1058:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         parameters in the RCC_ClkInitStruct.
1059:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct  pointer to an RCC_OscInitTypeDef structure that
1060:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         contains the configuration information for the RCC peripheral.
1061:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @param  FLatency  FLASH Latency
1062:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *          This parameter can be one of the following values:
1063:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_0   FLASH 0 Latency cycle
1064:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_1   FLASH 1 Latency cycle
1065:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_2   FLASH 2 Latency cycles
1066:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_3   FLASH 3 Latency cycles
1067:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_4   FLASH 4 Latency cycles
1068:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   @if STM32L4S9xx
1069:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_5   FLASH 5 Latency cycles
1070:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_6   FLASH 6 Latency cycles
1071:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_7   FLASH 7 Latency cycles
1072:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_8   FLASH 8 Latency cycles
1073:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_9   FLASH 9 Latency cycles
1074:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_10  FLASH 10 Latency cycles
1075:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_11  FLASH 11 Latency cycles
1076:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_12  FLASH 12 Latency cycles
1077:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_13  FLASH 13 Latency cycles
ARM GAS  /tmp/ccwaNkAs.s 			page 48


1078:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_14  FLASH 14 Latency cycles
1079:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_15  FLASH 15 Latency cycles
1080:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   @endif
1081:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *
1082:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency
1083:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         and updated by HAL_RCC_GetHCLKFreq() function called within this function
1084:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *
1085:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   The MSI is used by default as system clock source after
1086:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         startup from Reset, wake-up from STANDBY mode. After restart from Reset,
1087:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         the MSI frequency is set to its default value 4 MHz.
1088:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *
1089:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   The HSI can be selected as system clock source after
1090:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         from STOP modes or in case of failure of the HSE used directly or indirectly
1091:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         as system clock (if the Clock Security System CSS is enabled).
1092:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *
1093:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   A switch from one clock source to another occurs only if the target
1094:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         clock source is ready (clock stable after startup delay or PLL locked).
1095:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         If a clock source which is not yet ready is selected, the switch will
1096:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         occur when the clock source is ready.
1097:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *
1098:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   You can use HAL_RCC_GetClockConfig() function to know which clock is
1099:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         currently used as system clock source.
1100:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *
1101:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   Depending on the device voltage range, the software has to set correctly
1102:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
1103:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         (for more details refer to section above "Initialization/de-initialization functions")
1104:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @retval None
1105:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
1106:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
1107:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** {
 1559              		.loc 1 1107 1
 1560              		.cfi_startproc
 1561              		@ args = 0, pretend = 0, frame = 16
 1562              		@ frame_needed = 1, uses_anonymous_args = 0
 1563 0000 80B5     		push	{r7, lr}
 1564              	.LCFI10:
 1565              		.cfi_def_cfa_offset 8
 1566              		.cfi_offset 7, -8
 1567              		.cfi_offset 14, -4
 1568 0002 84B0     		sub	sp, sp, #16
 1569              	.LCFI11:
 1570              		.cfi_def_cfa_offset 24
 1571 0004 00AF     		add	r7, sp, #0
 1572              	.LCFI12:
 1573              		.cfi_def_cfa_register 7
 1574 0006 7860     		str	r0, [r7, #4]
 1575 0008 3960     		str	r1, [r7]
1108:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   uint32_t tickstart;
1109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(STM32L4P5xx) || defined(STM32L4Q5xx) || \
1110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     defined(STM32L4R5xx) || defined(STM32L4R7xx) || defined(STM32L4R9xx) || defined(STM32L4S5xx) ||
1111:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   uint32_t hpre = RCC_SYSCLK_DIV1;
1112:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif
1113:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   HAL_StatusTypeDef status;
1114:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1115:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Check Null pointer */
1116:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(RCC_ClkInitStruct == NULL)
 1576              		.loc 1 1116 5
ARM GAS  /tmp/ccwaNkAs.s 			page 49


 1577 000a 7B68     		ldr	r3, [r7, #4]
 1578 000c 002B     		cmp	r3, #0
 1579 000e 01D1     		bne	.L104
1117:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1118:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     return HAL_ERROR;
 1580              		.loc 1 1118 12
 1581 0010 0123     		movs	r3, #1
 1582 0012 C8E0     		b	.L105
 1583              	.L104:
1119:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1120:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1121:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Check the parameters */
1122:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   assert_param(IS_RCC_CLOCKTYPE(RCC_ClkInitStruct->ClockType));
1123:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   assert_param(IS_FLASH_LATENCY(FLatency));
1124:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1125:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
1126:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     must be correctly programmed according to the frequency of the CPU clock
1127:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     (HCLK) and the supply voltage of the device. */
1128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1129:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Increasing the number of wait states because of higher CPU frequency */
1130:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(FLatency > __HAL_FLASH_GET_LATENCY())
 1584              		.loc 1 1130 17
 1585 0014 664B     		ldr	r3, .L118
 1586 0016 1B68     		ldr	r3, [r3]
 1587 0018 03F00703 		and	r3, r3, #7
 1588              		.loc 1 1130 5
 1589 001c 3A68     		ldr	r2, [r7]
 1590 001e 9A42     		cmp	r2, r3
 1591 0020 10D9     		bls	.L106
1131:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1132:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
1133:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 1592              		.loc 1 1133 5
 1593 0022 634B     		ldr	r3, .L118
 1594 0024 1B68     		ldr	r3, [r3]
 1595 0026 23F00702 		bic	r2, r3, #7
 1596 002a 6149     		ldr	r1, .L118
 1597 002c 3B68     		ldr	r3, [r7]
 1598 002e 1343     		orrs	r3, r3, r2
 1599 0030 0B60     		str	r3, [r1]
1134:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1135:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
1136:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
1137:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if(__HAL_FLASH_GET_LATENCY() != FLatency)
 1600              		.loc 1 1137 8
 1601 0032 5F4B     		ldr	r3, .L118
 1602 0034 1B68     		ldr	r3, [r3]
 1603 0036 03F00703 		and	r3, r3, #7
 1604              		.loc 1 1137 7
 1605 003a 3A68     		ldr	r2, [r7]
 1606 003c 9A42     		cmp	r2, r3
 1607 003e 01D0     		beq	.L106
1138:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
1139:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       return HAL_ERROR;
 1608              		.loc 1 1139 14
 1609 0040 0123     		movs	r3, #1
 1610 0042 B0E0     		b	.L105
ARM GAS  /tmp/ccwaNkAs.s 			page 50


 1611              	.L106:
1140:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
1141:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1142:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1143:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /*------------------------- SYSCLK Configuration ---------------------------*/
1144:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 1612              		.loc 1 1144 25
 1613 0044 7B68     		ldr	r3, [r7, #4]
 1614 0046 1B68     		ldr	r3, [r3]
 1615              		.loc 1 1144 38
 1616 0048 03F00103 		and	r3, r3, #1
 1617              		.loc 1 1144 5
 1618 004c 002B     		cmp	r3, #0
 1619 004e 4CD0     		beq	.L107
1145:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1146:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
1147:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1148:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* PLL is selected as System Clock Source */
1149:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 1620              		.loc 1 1149 25
 1621 0050 7B68     		ldr	r3, [r7, #4]
 1622 0052 5B68     		ldr	r3, [r3, #4]
 1623              		.loc 1 1149 7
 1624 0054 032B     		cmp	r3, #3
 1625 0056 07D1     		bne	.L108
1150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
1151:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Check the PLL ready flag */
1152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       if(READ_BIT(RCC->CR, RCC_CR_PLLRDY) == 0U)
 1626              		.loc 1 1152 10
 1627 0058 564B     		ldr	r3, .L118+4
 1628 005a 1B68     		ldr	r3, [r3]
 1629 005c 03F00073 		and	r3, r3, #33554432
 1630              		.loc 1 1152 9
 1631 0060 002B     		cmp	r3, #0
 1632 0062 21D1     		bne	.L109
1153:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
1154:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         return HAL_ERROR;
 1633              		.loc 1 1154 16
 1634 0064 0123     		movs	r3, #1
 1635 0066 9EE0     		b	.L105
 1636              	.L108:
1155:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
1156:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(STM32L4P5xx) || defined(STM32L4Q5xx) || \
1157:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     defined(STM32L4R5xx) || defined(STM32L4R7xx) || defined(STM32L4R9xx) || defined(STM32L4S5xx) ||
1158:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Undershoot management when selection PLL as SYSCLK source and frequency above 80Mhz */
1159:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Compute target PLL output frequency */
1160:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       if(RCC_GetSysClockFreqFromPLLSource() > 80000000U)
1161:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
1162:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         if(READ_BIT(RCC->CFGR, RCC_CFGR_HPRE) == RCC_SYSCLK_DIV1)
1163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
1164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           /* Intermediate step with HCLK prescaler 2 necessary before to go over 80Mhz */
1165:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_SYSCLK_DIV2);
1166:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           hpre = RCC_SYSCLK_DIV2;
1167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
1168:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         else if((((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK) && (R
1169:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
1170:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           /* Intermediate step with HCLK prescaler 2 necessary before to go over 80Mhz */
ARM GAS  /tmp/ccwaNkAs.s 			page 51


1171:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_SYSCLK_DIV2);
1172:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           hpre = RCC_SYSCLK_DIV2;
1173:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
1174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         else
1175:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
1176:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           /* nothing to do */
1177:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
1178:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
1179:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif
1180:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
1181:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     else
1182:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
1183:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* HSE is selected as System Clock Source */
1184:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 1637              		.loc 1 1184 27
 1638 0068 7B68     		ldr	r3, [r7, #4]
 1639 006a 5B68     		ldr	r3, [r3, #4]
 1640              		.loc 1 1184 9
 1641 006c 022B     		cmp	r3, #2
 1642 006e 07D1     		bne	.L110
1185:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
1186:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Check the HSE ready flag */
1187:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         if(READ_BIT(RCC->CR, RCC_CR_HSERDY) == 0U)
 1643              		.loc 1 1187 12
 1644 0070 504B     		ldr	r3, .L118+4
 1645 0072 1B68     		ldr	r3, [r3]
 1646 0074 03F40033 		and	r3, r3, #131072
 1647              		.loc 1 1187 11
 1648 0078 002B     		cmp	r3, #0
 1649 007a 15D1     		bne	.L109
1188:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
1189:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           return HAL_ERROR;
 1650              		.loc 1 1189 18
 1651 007c 0123     		movs	r3, #1
 1652 007e 92E0     		b	.L105
 1653              	.L110:
1190:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
1191:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
1192:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* MSI is selected as System Clock Source */
1193:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_MSI)
 1654              		.loc 1 1193 32
 1655 0080 7B68     		ldr	r3, [r7, #4]
 1656 0082 5B68     		ldr	r3, [r3, #4]
 1657              		.loc 1 1193 14
 1658 0084 002B     		cmp	r3, #0
 1659 0086 07D1     		bne	.L111
1194:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
1195:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Check the MSI ready flag */
1196:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         if(READ_BIT(RCC->CR, RCC_CR_MSIRDY) == 0U)
 1660              		.loc 1 1196 12
 1661 0088 4A4B     		ldr	r3, .L118+4
 1662 008a 1B68     		ldr	r3, [r3]
 1663 008c 03F00203 		and	r3, r3, #2
 1664              		.loc 1 1196 11
 1665 0090 002B     		cmp	r3, #0
 1666 0092 09D1     		bne	.L109
1197:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
ARM GAS  /tmp/ccwaNkAs.s 			page 52


1198:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           return HAL_ERROR;
 1667              		.loc 1 1198 18
 1668 0094 0123     		movs	r3, #1
 1669 0096 86E0     		b	.L105
 1670              	.L111:
1199:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
1200:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
1201:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* HSI is selected as System Clock Source */
1202:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       else
1203:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
1204:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Check the HSI ready flag */
1205:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         if(READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 1671              		.loc 1 1205 12
 1672 0098 464B     		ldr	r3, .L118+4
 1673 009a 1B68     		ldr	r3, [r3]
 1674 009c 03F48063 		and	r3, r3, #1024
 1675              		.loc 1 1205 11
 1676 00a0 002B     		cmp	r3, #0
 1677 00a2 01D1     		bne	.L109
1206:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
1207:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           return HAL_ERROR;
 1678              		.loc 1 1207 18
 1679 00a4 0123     		movs	r3, #1
 1680 00a6 7EE0     		b	.L105
 1681              	.L109:
1208:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
1209:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
1210:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(STM32L4P5xx) || defined(STM32L4Q5xx) || \
1211:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     defined(STM32L4R5xx) || defined(STM32L4R7xx) || defined(STM32L4R9xx) || defined(STM32L4S5xx) ||
1212:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Overshoot management when going down from PLL as SYSCLK source and frequency above 80Mhz *
1213:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       if(HAL_RCC_GetSysClockFreq() > 80000000U)
1214:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
1215:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Intermediate step with HCLK prescaler 2 necessary before to go under 80Mhz */
1216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_SYSCLK_DIV2);
1217:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         hpre = RCC_SYSCLK_DIV2;
1218:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
1219:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif
1220:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1221:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
1222:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1223:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
 1682              		.loc 1 1223 5
 1683 00a8 424B     		ldr	r3, .L118+4
 1684 00aa 9B68     		ldr	r3, [r3, #8]
 1685 00ac 23F00302 		bic	r2, r3, #3
 1686 00b0 7B68     		ldr	r3, [r7, #4]
 1687 00b2 5B68     		ldr	r3, [r3, #4]
 1688 00b4 3F49     		ldr	r1, .L118+4
 1689 00b6 1343     		orrs	r3, r3, r2
 1690 00b8 8B60     		str	r3, [r1, #8]
1224:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1225:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Get Start Tick*/
1226:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     tickstart = HAL_GetTick();
 1691              		.loc 1 1226 17
 1692 00ba FFF7FEFF 		bl	HAL_GetTick
 1693 00be F860     		str	r0, [r7, #12]
1227:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
ARM GAS  /tmp/ccwaNkAs.s 			page 53


1228:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     while(__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 1694              		.loc 1 1228 10
 1695 00c0 0AE0     		b	.L112
 1696              	.L113:
1229:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
1230:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       if((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 1697              		.loc 1 1230 11
 1698 00c2 FFF7FEFF 		bl	HAL_GetTick
 1699 00c6 0246     		mov	r2, r0
 1700              		.loc 1 1230 25
 1701 00c8 FB68     		ldr	r3, [r7, #12]
 1702 00ca D31A     		subs	r3, r2, r3
 1703              		.loc 1 1230 9
 1704 00cc 41F28832 		movw	r2, #5000
 1705 00d0 9342     		cmp	r3, r2
 1706 00d2 01D9     		bls	.L112
1231:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
1232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         return HAL_TIMEOUT;
 1707              		.loc 1 1232 16
 1708 00d4 0323     		movs	r3, #3
 1709 00d6 66E0     		b	.L105
 1710              	.L112:
1228:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 1711              		.loc 1 1228 11
 1712 00d8 364B     		ldr	r3, .L118+4
 1713 00da 9B68     		ldr	r3, [r3, #8]
 1714 00dc 03F00C02 		and	r2, r3, #12
1228:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 1715              		.loc 1 1228 62
 1716 00e0 7B68     		ldr	r3, [r7, #4]
 1717 00e2 5B68     		ldr	r3, [r3, #4]
1228:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 1718              		.loc 1 1228 77
 1719 00e4 9B00     		lsls	r3, r3, #2
1228:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 1720              		.loc 1 1228 10
 1721 00e6 9A42     		cmp	r2, r3
 1722 00e8 EBD1     		bne	.L113
 1723              	.L107:
1233:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
1234:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
1235:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1236:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1237:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /*-------------------------- HCLK Configuration --------------------------*/
1238:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 1724              		.loc 1 1238 25
 1725 00ea 7B68     		ldr	r3, [r7, #4]
 1726 00ec 1B68     		ldr	r3, [r3]
 1727              		.loc 1 1238 38
 1728 00ee 03F00203 		and	r3, r3, #2
 1729              		.loc 1 1238 5
 1730 00f2 002B     		cmp	r3, #0
 1731 00f4 08D0     		beq	.L114
1239:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1240:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
1241:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 1732              		.loc 1 1241 5
ARM GAS  /tmp/ccwaNkAs.s 			page 54


 1733 00f6 2F4B     		ldr	r3, .L118+4
 1734 00f8 9B68     		ldr	r3, [r3, #8]
 1735 00fa 23F0F002 		bic	r2, r3, #240
 1736 00fe 7B68     		ldr	r3, [r7, #4]
 1737 0100 9B68     		ldr	r3, [r3, #8]
 1738 0102 2C49     		ldr	r1, .L118+4
 1739 0104 1343     		orrs	r3, r3, r2
 1740 0106 8B60     		str	r3, [r1, #8]
 1741              	.L114:
1242:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1243:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(STM32L4P5xx) || defined(STM32L4Q5xx) || \
1244:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     defined(STM32L4R5xx) || defined(STM32L4R7xx) || defined(STM32L4R9xx) || defined(STM32L4S5xx) ||
1245:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   else
1246:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1247:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Is intermediate HCLK prescaler 2 applied internally, complete with HCLK prescaler 1 */
1248:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if(hpre == RCC_SYSCLK_DIV2)
1249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
1250:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_SYSCLK_DIV1);
1251:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
1252:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1253:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif
1254:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Decreasing the number of wait states because of lower CPU frequency */
1256:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(FLatency < __HAL_FLASH_GET_LATENCY())
 1742              		.loc 1 1256 17
 1743 0108 294B     		ldr	r3, .L118
 1744 010a 1B68     		ldr	r3, [r3]
 1745 010c 03F00703 		and	r3, r3, #7
 1746              		.loc 1 1256 5
 1747 0110 3A68     		ldr	r2, [r7]
 1748 0112 9A42     		cmp	r2, r3
 1749 0114 10D2     		bcs	.L115
1257:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1258:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
1259:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 1750              		.loc 1 1259 5
 1751 0116 264B     		ldr	r3, .L118
 1752 0118 1B68     		ldr	r3, [r3]
 1753 011a 23F00702 		bic	r2, r3, #7
 1754 011e 2449     		ldr	r1, .L118
 1755 0120 3B68     		ldr	r3, [r7]
 1756 0122 1343     		orrs	r3, r3, r2
 1757 0124 0B60     		str	r3, [r1]
1260:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1261:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
1262:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
1263:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if(__HAL_FLASH_GET_LATENCY() != FLatency)
 1758              		.loc 1 1263 8
 1759 0126 224B     		ldr	r3, .L118
 1760 0128 1B68     		ldr	r3, [r3]
 1761 012a 03F00703 		and	r3, r3, #7
 1762              		.loc 1 1263 7
 1763 012e 3A68     		ldr	r2, [r7]
 1764 0130 9A42     		cmp	r2, r3
 1765 0132 01D0     		beq	.L115
1264:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
1265:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       return HAL_ERROR;
ARM GAS  /tmp/ccwaNkAs.s 			page 55


 1766              		.loc 1 1265 14
 1767 0134 0123     		movs	r3, #1
 1768 0136 36E0     		b	.L105
 1769              	.L115:
1266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
1267:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1268:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1269:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /*-------------------------- PCLK1 Configuration ---------------------------*/
1270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 1770              		.loc 1 1270 25
 1771 0138 7B68     		ldr	r3, [r7, #4]
 1772 013a 1B68     		ldr	r3, [r3]
 1773              		.loc 1 1270 38
 1774 013c 03F00403 		and	r3, r3, #4
 1775              		.loc 1 1270 5
 1776 0140 002B     		cmp	r3, #0
 1777 0142 08D0     		beq	.L116
1271:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1272:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
1273:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 1778              		.loc 1 1273 5
 1779 0144 1B4B     		ldr	r3, .L118+4
 1780 0146 9B68     		ldr	r3, [r3, #8]
 1781 0148 23F4E062 		bic	r2, r3, #1792
 1782 014c 7B68     		ldr	r3, [r7, #4]
 1783 014e DB68     		ldr	r3, [r3, #12]
 1784 0150 1849     		ldr	r1, .L118+4
 1785 0152 1343     		orrs	r3, r3, r2
 1786 0154 8B60     		str	r3, [r1, #8]
 1787              	.L116:
1274:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1275:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1276:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /*-------------------------- PCLK2 Configuration ---------------------------*/
1277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 1788              		.loc 1 1277 25
 1789 0156 7B68     		ldr	r3, [r7, #4]
 1790 0158 1B68     		ldr	r3, [r3]
 1791              		.loc 1 1277 38
 1792 015a 03F00803 		and	r3, r3, #8
 1793              		.loc 1 1277 5
 1794 015e 002B     		cmp	r3, #0
 1795 0160 09D0     		beq	.L117
1278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1279:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
1280:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 1796              		.loc 1 1280 5
 1797 0162 144B     		ldr	r3, .L118+4
 1798 0164 9B68     		ldr	r3, [r3, #8]
 1799 0166 23F46052 		bic	r2, r3, #14336
 1800 016a 7B68     		ldr	r3, [r7, #4]
 1801 016c 1B69     		ldr	r3, [r3, #16]
 1802 016e DB00     		lsls	r3, r3, #3
 1803 0170 1049     		ldr	r1, .L118+4
 1804 0172 1343     		orrs	r3, r3, r2
 1805 0174 8B60     		str	r3, [r1, #8]
 1806              	.L117:
1281:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
ARM GAS  /tmp/ccwaNkAs.s 			page 56


1282:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable */
1284:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   SystemCoreClock = HAL_RCC_GetSysClockFreq() >> (AHBPrescTable[READ_BIT(RCC->CFGR, RCC_CFGR_HPRE) 
 1807              		.loc 1 1284 21
 1808 0176 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 1809 017a 0246     		mov	r2, r0
 1810              		.loc 1 1284 65
 1811 017c 0D4B     		ldr	r3, .L118+4
 1812 017e 9B68     		ldr	r3, [r3, #8]
 1813              		.loc 1 1284 100
 1814 0180 1B09     		lsrs	r3, r3, #4
 1815 0182 03F00F03 		and	r3, r3, #15
 1816              		.loc 1 1284 64
 1817 0186 0C49     		ldr	r1, .L118+8
 1818 0188 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 1819              		.loc 1 1284 122
 1820 018a 03F01F03 		and	r3, r3, #31
 1821              		.loc 1 1284 47
 1822 018e 22FA03F3 		lsr	r3, r2, r3
 1823              		.loc 1 1284 19
 1824 0192 0A4A     		ldr	r2, .L118+12
 1825 0194 1360     		str	r3, [r2]
1285:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1286:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Configure the source of time base considering new system clocks settings*/
1287:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   status = HAL_InitTick(uwTickPrio);
 1826              		.loc 1 1287 12
 1827 0196 0A4B     		ldr	r3, .L118+16
 1828 0198 1B68     		ldr	r3, [r3]
 1829 019a 1846     		mov	r0, r3
 1830 019c FFF7FEFF 		bl	HAL_InitTick
 1831 01a0 0346     		mov	r3, r0
 1832 01a2 FB72     		strb	r3, [r7, #11]
1288:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1289:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   return status;
 1833              		.loc 1 1289 10
 1834 01a4 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1835              	.L105:
1290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** }
 1836              		.loc 1 1290 1
 1837 01a6 1846     		mov	r0, r3
 1838 01a8 1037     		adds	r7, r7, #16
 1839              	.LCFI13:
 1840              		.cfi_def_cfa_offset 8
 1841 01aa BD46     		mov	sp, r7
 1842              	.LCFI14:
 1843              		.cfi_def_cfa_register 13
 1844              		@ sp needed
 1845 01ac 80BD     		pop	{r7, pc}
 1846              	.L119:
 1847 01ae 00BF     		.align	2
 1848              	.L118:
 1849 01b0 00200240 		.word	1073881088
 1850 01b4 00100240 		.word	1073876992
 1851 01b8 00000000 		.word	AHBPrescTable
 1852 01bc 00000000 		.word	SystemCoreClock
 1853 01c0 00000000 		.word	uwTickPrio
 1854              		.cfi_endproc
ARM GAS  /tmp/ccwaNkAs.s 			page 57


 1855              	.LFE132:
 1857              		.section	.text.HAL_RCC_MCOConfig,"ax",%progbits
 1858              		.align	1
 1859              		.global	HAL_RCC_MCOConfig
 1860              		.syntax unified
 1861              		.thumb
 1862              		.thumb_func
 1863              		.fpu fpv4-sp-d16
 1865              	HAL_RCC_MCOConfig:
 1866              	.LFB133:
1291:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1292:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /**
1293:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @}
1294:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
1295:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1296:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group2 Peripheral Control functions
1297:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****  *  @brief   RCC clocks control functions
1298:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****  *
1299:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** @verbatim
1300:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****  ===============================================================================
1301:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                       ##### Peripheral Control functions #####
1302:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****  ===============================================================================
1303:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     [..]
1304:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     This subsection provides a set of functions allowing to:
1305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1306:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     (+) Ouput clock to MCO pin.
1307:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     (+) Retrieve current clock frequencies.
1308:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     (+) Enable the Clock Security System.
1309:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1310:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** @endverbatim
1311:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @{
1312:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
1313:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1314:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /**
1315:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @brief  Select the clock source to output on MCO pin(PA8).
1316:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   PA8 should be configured in alternate function mode.
1317:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @param  RCC_MCOx  specifies the output direction for the clock source.
1318:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *          For STM32L4xx family this parameter can have only one value:
1319:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1  Clock source to output on MCO1 pin(PA8).
1320:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @param  RCC_MCOSource  specifies the clock source to output.
1321:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *          This parameter can be one of the following values:
1322:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_NOCLOCK  MCO output disabled, no clock on MCO
1323:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_SYSCLK  system  clock selected as MCO source
1324:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_MSI  MSI clock selected as MCO source
1325:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI  HSI clock selected as MCO source
1326:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSE  HSE clock selected as MCO sourcee
1327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK  main PLL clock selected as MCO source
1328:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_LSI  LSI clock selected as MCO source
1329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_LSE  LSE clock selected as MCO source
1330:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   @if STM32L443xx
1331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI48  HSI48 clock selected as MCO source for devices with 
1332:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   @endif
1333:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @param  RCC_MCODiv  specifies the MCO prescaler.
1334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *          This parameter can be one of the following values:
1335:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_1  no division applied to MCO clock
1336:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_2  division by 2 applied to MCO clock
1337:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_4  division by 4 applied to MCO clock
ARM GAS  /tmp/ccwaNkAs.s 			page 58


1338:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_8  division by 8 applied to MCO clock
1339:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_16  division by 16 applied to MCO clock
1340:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @retval None
1341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
1342:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** void HAL_RCC_MCOConfig( uint32_t RCC_MCOx, uint32_t RCC_MCOSource, uint32_t RCC_MCODiv)
1343:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** {
 1867              		.loc 1 1343 1
 1868              		.cfi_startproc
 1869              		@ args = 0, pretend = 0, frame = 40
 1870              		@ frame_needed = 1, uses_anonymous_args = 0
 1871 0000 80B5     		push	{r7, lr}
 1872              	.LCFI15:
 1873              		.cfi_def_cfa_offset 8
 1874              		.cfi_offset 7, -8
 1875              		.cfi_offset 14, -4
 1876 0002 8AB0     		sub	sp, sp, #40
 1877              	.LCFI16:
 1878              		.cfi_def_cfa_offset 48
 1879 0004 00AF     		add	r7, sp, #0
 1880              	.LCFI17:
 1881              		.cfi_def_cfa_register 7
 1882 0006 F860     		str	r0, [r7, #12]
 1883 0008 B960     		str	r1, [r7, #8]
 1884 000a 7A60     		str	r2, [r7, #4]
 1885              	.LBB4:
1344:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   GPIO_InitTypeDef GPIO_InitStruct;
1345:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1346:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Check the parameters */
1347:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   assert_param(IS_RCC_MCO(RCC_MCOx));
1348:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   assert_param(IS_RCC_MCODIV(RCC_MCODiv));
1349:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   assert_param(IS_RCC_MCO1SOURCE(RCC_MCOSource));
1350:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1351:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Prevent unused argument(s) compilation warning if no assert_param check */
1352:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   UNUSED(RCC_MCOx);
1353:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1354:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* MCO Clock Enable */
1355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   __MCO1_CLK_ENABLE();
 1886              		.loc 1 1355 3
 1887 000c 154B     		ldr	r3, .L121
 1888 000e DB6C     		ldr	r3, [r3, #76]
 1889 0010 144A     		ldr	r2, .L121
 1890 0012 43F00103 		orr	r3, r3, #1
 1891 0016 D364     		str	r3, [r2, #76]
 1892 0018 124B     		ldr	r3, .L121
 1893 001a DB6C     		ldr	r3, [r3, #76]
 1894 001c 03F00103 		and	r3, r3, #1
 1895 0020 3B61     		str	r3, [r7, #16]
 1896 0022 3B69     		ldr	r3, [r7, #16]
 1897              	.LBE4:
1356:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1357:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Configue the MCO1 pin in alternate function mode */
1358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   GPIO_InitStruct.Pin = MCO1_PIN;
 1898              		.loc 1 1358 23
 1899 0024 4FF48073 		mov	r3, #256
 1900 0028 7B61     		str	r3, [r7, #20]
1359:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 1901              		.loc 1 1359 24
ARM GAS  /tmp/ccwaNkAs.s 			page 59


 1902 002a 0223     		movs	r3, #2
 1903 002c BB61     		str	r3, [r7, #24]
1360:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 1904              		.loc 1 1360 25
 1905 002e 0223     		movs	r3, #2
 1906 0030 3B62     		str	r3, [r7, #32]
1361:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 1907              		.loc 1 1361 24
 1908 0032 0023     		movs	r3, #0
 1909 0034 FB61     		str	r3, [r7, #28]
1362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
 1910              		.loc 1 1362 29
 1911 0036 0023     		movs	r3, #0
 1912 0038 7B62     		str	r3, [r7, #36]
1363:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   HAL_GPIO_Init(MCO1_GPIO_PORT, &GPIO_InitStruct);
 1913              		.loc 1 1363 3
 1914 003a 07F11403 		add	r3, r7, #20
 1915 003e 1946     		mov	r1, r3
 1916 0040 4FF09040 		mov	r0, #1207959552
 1917 0044 FFF7FEFF 		bl	HAL_GPIO_Init
1364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1365:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Mask MCOSEL[] and MCOPRE[] bits then set MCO1 clock source and prescaler */
1366:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   MODIFY_REG(RCC->CFGR, (RCC_CFGR_MCOSEL | RCC_CFGR_MCOPRE), (RCC_MCOSource | RCC_MCODiv ));
 1918              		.loc 1 1366 3
 1919 0048 064B     		ldr	r3, .L121
 1920 004a 9B68     		ldr	r3, [r3, #8]
 1921 004c 23F0FE42 		bic	r2, r3, #2130706432
 1922 0050 B968     		ldr	r1, [r7, #8]
 1923 0052 7B68     		ldr	r3, [r7, #4]
 1924 0054 0B43     		orrs	r3, r3, r1
 1925 0056 0349     		ldr	r1, .L121
 1926 0058 1343     		orrs	r3, r3, r2
 1927 005a 8B60     		str	r3, [r1, #8]
1367:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** }
 1928              		.loc 1 1367 1
 1929 005c 00BF     		nop
 1930 005e 2837     		adds	r7, r7, #40
 1931              	.LCFI18:
 1932              		.cfi_def_cfa_offset 8
 1933 0060 BD46     		mov	sp, r7
 1934              	.LCFI19:
 1935              		.cfi_def_cfa_register 13
 1936              		@ sp needed
 1937 0062 80BD     		pop	{r7, pc}
 1938              	.L122:
 1939              		.align	2
 1940              	.L121:
 1941 0064 00100240 		.word	1073876992
 1942              		.cfi_endproc
 1943              	.LFE133:
 1945              		.section	.text.HAL_RCC_GetSysClockFreq,"ax",%progbits
 1946              		.align	1
 1947              		.global	HAL_RCC_GetSysClockFreq
 1948              		.syntax unified
 1949              		.thumb
 1950              		.thumb_func
 1951              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccwaNkAs.s 			page 60


 1953              	HAL_RCC_GetSysClockFreq:
 1954              	.LFB134:
1368:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1369:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /**
1370:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @brief  Return the SYSCLK frequency.
1371:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *
1372:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   The system frequency computed by this function is not the real
1373:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         frequency in the chip. It is calculated based on the predefined
1374:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         constant and the selected clock source:
1375:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note     If SYSCLK source is MSI, function returns values based on MSI
1376:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *             Value as defined by the MSI range.
1377:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note     If SYSCLK source is HSI, function returns values based on HSI_VALUE(*)
1378:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note     If SYSCLK source is HSE, function returns values based on HSE_VALUE(**)
1379:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note     If SYSCLK source is PLL, function returns values based on HSE_VALUE(**),
1380:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *           HSI_VALUE(*) or MSI Value multiplied/divided by the PLL factors.
1381:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note     (*) HSI_VALUE is a constant defined in stm32l4xx_hal_conf.h file (default value
1382:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *               16 MHz) but the real value may vary depending on the variations
1383:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *               in voltage and temperature.
1384:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note     (**) HSE_VALUE is a constant defined in stm32l4xx_hal_conf.h file (default value
1385:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *                8 MHz), user has to ensure that HSE_VALUE is same as the real
1386:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *                frequency of the crystal used. Otherwise, this function may
1387:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *                have wrong result.
1388:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *
1389:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   The result of this function could be not correct when using fractional
1390:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         value for HSE crystal.
1391:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *
1392:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   This function can be used by the user application to compute the
1393:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         baudrate for the communication peripherals or configure other parameters.
1394:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *
1395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   Each time SYSCLK changes, this function must be called to update the
1396:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         right SYSCLK value. Otherwise, any configuration based on this function will be incorre
1397:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *
1398:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *
1399:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @retval SYSCLK frequency
1400:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
1401:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** uint32_t HAL_RCC_GetSysClockFreq(void)
1402:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** {
 1955              		.loc 1 1402 1
 1956              		.cfi_startproc
 1957              		@ args = 0, pretend = 0, frame = 32
 1958              		@ frame_needed = 1, uses_anonymous_args = 0
 1959              		@ link register save eliminated.
 1960 0000 80B4     		push	{r7}
 1961              	.LCFI20:
 1962              		.cfi_def_cfa_offset 4
 1963              		.cfi_offset 7, -4
 1964 0002 89B0     		sub	sp, sp, #36
 1965              	.LCFI21:
 1966              		.cfi_def_cfa_offset 40
 1967 0004 00AF     		add	r7, sp, #0
 1968              	.LCFI22:
 1969              		.cfi_def_cfa_register 7
1403:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   uint32_t msirange = 0U, sysclockfreq = 0U;
 1970              		.loc 1 1403 12
 1971 0006 0023     		movs	r3, #0
 1972 0008 FB61     		str	r3, [r7, #28]
 1973              		.loc 1 1403 27
ARM GAS  /tmp/ccwaNkAs.s 			page 61


 1974 000a 0023     		movs	r3, #0
 1975 000c BB61     		str	r3, [r7, #24]
1404:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   uint32_t pllvco, pllsource, pllr, pllm;    /* no init needed */
1405:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   uint32_t sysclk_source, pll_oscsource;
1406:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1407:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   sysclk_source = __HAL_RCC_GET_SYSCLK_SOURCE();
 1976              		.loc 1 1407 19
 1977 000e 3E4B     		ldr	r3, .L138
 1978 0010 9B68     		ldr	r3, [r3, #8]
 1979              		.loc 1 1407 17
 1980 0012 03F00C03 		and	r3, r3, #12
 1981 0016 3B61     		str	r3, [r7, #16]
1408:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   pll_oscsource = __HAL_RCC_GET_PLL_OSCSOURCE();
 1982              		.loc 1 1408 19
 1983 0018 3B4B     		ldr	r3, .L138
 1984 001a DB68     		ldr	r3, [r3, #12]
 1985              		.loc 1 1408 17
 1986 001c 03F00303 		and	r3, r3, #3
 1987 0020 FB60     		str	r3, [r7, #12]
1409:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1410:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if((sysclk_source == RCC_CFGR_SWS_MSI) ||
 1988              		.loc 1 1410 5
 1989 0022 3B69     		ldr	r3, [r7, #16]
 1990 0024 002B     		cmp	r3, #0
 1991 0026 05D0     		beq	.L124
 1992              		.loc 1 1410 42 discriminator 1
 1993 0028 3B69     		ldr	r3, [r7, #16]
 1994 002a 0C2B     		cmp	r3, #12
 1995 002c 21D1     		bne	.L125
1411:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****      ((sysclk_source == RCC_CFGR_SWS_PLL) && (pll_oscsource == RCC_PLLSOURCE_MSI)))
 1996              		.loc 1 1411 43
 1997 002e FB68     		ldr	r3, [r7, #12]
 1998 0030 012B     		cmp	r3, #1
 1999 0032 1ED1     		bne	.L125
 2000              	.L124:
1412:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1413:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* MSI or PLL with MSI source used as system clock source */
1414:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1415:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Get SYSCLK source */
1416:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if(READ_BIT(RCC->CR, RCC_CR_MSIRGSEL) == 0U)
 2001              		.loc 1 1416 8
 2002 0034 344B     		ldr	r3, .L138
 2003 0036 1B68     		ldr	r3, [r3]
 2004 0038 03F00803 		and	r3, r3, #8
 2005              		.loc 1 1416 7
 2006 003c 002B     		cmp	r3, #0
 2007 003e 07D1     		bne	.L126
1417:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     { /* MSISRANGE from RCC_CSR applies */
1418:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       msirange = READ_BIT(RCC->CSR, RCC_CSR_MSISRANGE) >> RCC_CSR_MSISRANGE_Pos;
 2008              		.loc 1 1418 18
 2009 0040 314B     		ldr	r3, .L138
 2010 0042 D3F89430 		ldr	r3, [r3, #148]
 2011              		.loc 1 1418 56
 2012 0046 1B0A     		lsrs	r3, r3, #8
 2013              		.loc 1 1418 16
 2014 0048 03F00F03 		and	r3, r3, #15
 2015 004c FB61     		str	r3, [r7, #28]
ARM GAS  /tmp/ccwaNkAs.s 			page 62


 2016 004e 05E0     		b	.L127
 2017              	.L126:
1419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
1420:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     else
1421:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     { /* MSIRANGE from RCC_CR applies */
1422:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       msirange = READ_BIT(RCC->CR, RCC_CR_MSIRANGE) >> RCC_CR_MSIRANGE_Pos;
 2018              		.loc 1 1422 18
 2019 0050 2D4B     		ldr	r3, .L138
 2020 0052 1B68     		ldr	r3, [r3]
 2021              		.loc 1 1422 53
 2022 0054 1B09     		lsrs	r3, r3, #4
 2023              		.loc 1 1422 16
 2024 0056 03F00F03 		and	r3, r3, #15
 2025 005a FB61     		str	r3, [r7, #28]
 2026              	.L127:
1423:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
1424:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /*MSI frequency range in HZ*/
1425:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     msirange = MSIRangeTable[msirange];
 2027              		.loc 1 1425 14
 2028 005c 2B4A     		ldr	r2, .L138+4
 2029 005e FB69     		ldr	r3, [r7, #28]
 2030 0060 52F82330 		ldr	r3, [r2, r3, lsl #2]
 2031 0064 FB61     		str	r3, [r7, #28]
1426:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if(sysclk_source == RCC_CFGR_SWS_MSI)
 2032              		.loc 1 1427 7
 2033 0066 3B69     		ldr	r3, [r7, #16]
 2034 0068 002B     		cmp	r3, #0
 2035 006a 0DD1     		bne	.L129
1428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
1429:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* MSI used as system clock source */
1430:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       sysclockfreq = msirange;
 2036              		.loc 1 1430 20
 2037 006c FB69     		ldr	r3, [r7, #28]
 2038 006e BB61     		str	r3, [r7, #24]
1427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 2039              		.loc 1 1427 7
 2040 0070 0AE0     		b	.L129
 2041              	.L125:
1431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
1432:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1433:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   else if(sysclk_source == RCC_CFGR_SWS_HSI)
 2042              		.loc 1 1433 10
 2043 0072 3B69     		ldr	r3, [r7, #16]
 2044 0074 042B     		cmp	r3, #4
 2045 0076 02D1     		bne	.L130
1434:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1435:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* HSI used as system clock source */
1436:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     sysclockfreq = HSI_VALUE;
 2046              		.loc 1 1436 18
 2047 0078 254B     		ldr	r3, .L138+8
 2048 007a BB61     		str	r3, [r7, #24]
 2049 007c 04E0     		b	.L129
 2050              	.L130:
1437:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1438:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   else if(sysclk_source == RCC_CFGR_SWS_HSE)
 2051              		.loc 1 1438 10
ARM GAS  /tmp/ccwaNkAs.s 			page 63


 2052 007e 3B69     		ldr	r3, [r7, #16]
 2053 0080 082B     		cmp	r3, #8
 2054 0082 01D1     		bne	.L129
1439:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1440:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* HSE used as system clock source */
1441:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     sysclockfreq = HSE_VALUE;
 2055              		.loc 1 1441 18
 2056 0084 234B     		ldr	r3, .L138+12
 2057 0086 BB61     		str	r3, [r7, #24]
 2058              	.L129:
1442:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1443:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   else
1444:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1445:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* unexpected case: sysclockfreq at 0 */
1446:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1447:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1448:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(sysclk_source == RCC_CFGR_SWS_PLL)
 2059              		.loc 1 1448 5
 2060 0088 3B69     		ldr	r3, [r7, #16]
 2061 008a 0C2B     		cmp	r3, #12
 2062 008c 34D1     		bne	.L131
1449:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* PLL used as system clock  source */
1451:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1452:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* PLL_VCO = (HSE_VALUE or HSI_VALUE or MSI_VALUE) * PLLN / PLLM
1453:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     SYSCLK = PLL_VCO / PLLR
1454:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     */
1455:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     pllsource = READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC);
 2063              		.loc 1 1455 17
 2064 008e 1E4B     		ldr	r3, .L138
 2065 0090 DB68     		ldr	r3, [r3, #12]
 2066              		.loc 1 1455 15
 2067 0092 03F00303 		and	r3, r3, #3
 2068 0096 BB60     		str	r3, [r7, #8]
1456:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1457:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     switch (pllsource)
 2069              		.loc 1 1457 5
 2070 0098 BB68     		ldr	r3, [r7, #8]
 2071 009a 022B     		cmp	r3, #2
 2072 009c 03D0     		beq	.L132
 2073 009e BB68     		ldr	r3, [r7, #8]
 2074 00a0 032B     		cmp	r3, #3
 2075 00a2 03D0     		beq	.L133
 2076 00a4 05E0     		b	.L137
 2077              	.L132:
1458:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
1459:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     case RCC_PLLSOURCE_HSI:  /* HSI used as PLL clock source */
1460:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       pllvco = HSI_VALUE;
 2078              		.loc 1 1460 14
 2079 00a6 1A4B     		ldr	r3, .L138+8
 2080 00a8 7B61     		str	r3, [r7, #20]
1461:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       break;
 2081              		.loc 1 1461 7
 2082 00aa 05E0     		b	.L135
 2083              	.L133:
1462:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     case RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
ARM GAS  /tmp/ccwaNkAs.s 			page 64


1464:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       pllvco = HSE_VALUE;
 2084              		.loc 1 1464 14
 2085 00ac 194B     		ldr	r3, .L138+12
 2086 00ae 7B61     		str	r3, [r7, #20]
1465:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       break;
 2087              		.loc 1 1465 7
 2088 00b0 02E0     		b	.L135
 2089              	.L137:
1466:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1467:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     case RCC_PLLSOURCE_MSI:  /* MSI used as PLL clock source */
1468:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     default:
1469:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       pllvco = msirange;
 2090              		.loc 1 1469 14
 2091 00b2 FB69     		ldr	r3, [r7, #28]
 2092 00b4 7B61     		str	r3, [r7, #20]
1470:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       break;
 2093              		.loc 1 1470 7
 2094 00b6 00BF     		nop
 2095              	.L135:
1471:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
1472:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     pllm = (READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) + 1U ;
 2096              		.loc 1 1472 13
 2097 00b8 134B     		ldr	r3, .L138
 2098 00ba DB68     		ldr	r3, [r3, #12]
 2099              		.loc 1 1472 54
 2100 00bc 1B09     		lsrs	r3, r3, #4
 2101 00be 03F00703 		and	r3, r3, #7
 2102              		.loc 1 1472 10
 2103 00c2 0133     		adds	r3, r3, #1
 2104 00c4 7B60     		str	r3, [r7, #4]
1473:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     pllvco = (pllvco * (READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)) / pllm;
 2105              		.loc 1 1473 25
 2106 00c6 104B     		ldr	r3, .L138
 2107 00c8 DB68     		ldr	r3, [r3, #12]
 2108              		.loc 1 1473 66
 2109 00ca 1B0A     		lsrs	r3, r3, #8
 2110 00cc 03F07F03 		and	r3, r3, #127
 2111              		.loc 1 1473 22
 2112 00d0 7A69     		ldr	r2, [r7, #20]
 2113 00d2 02FB03F2 		mul	r2, r2, r3
 2114              		.loc 1 1473 12
 2115 00d6 7B68     		ldr	r3, [r7, #4]
 2116 00d8 B2FBF3F3 		udiv	r3, r2, r3
 2117 00dc 7B61     		str	r3, [r7, #20]
1474:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     pllr = ((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLR) >> RCC_PLLCFGR_PLLR_Pos) + 1U ) * 2U;
 2118              		.loc 1 1474 14
 2119 00de 0A4B     		ldr	r3, .L138
 2120 00e0 DB68     		ldr	r3, [r3, #12]
 2121              		.loc 1 1474 55
 2122 00e2 5B0E     		lsrs	r3, r3, #25
 2123 00e4 03F00303 		and	r3, r3, #3
 2124              		.loc 1 1474 80
 2125 00e8 0133     		adds	r3, r3, #1
 2126              		.loc 1 1474 10
 2127 00ea 5B00     		lsls	r3, r3, #1
 2128 00ec 3B60     		str	r3, [r7]
1475:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     sysclockfreq = pllvco / pllr;
ARM GAS  /tmp/ccwaNkAs.s 			page 65


 2129              		.loc 1 1475 18
 2130 00ee 7A69     		ldr	r2, [r7, #20]
 2131 00f0 3B68     		ldr	r3, [r7]
 2132 00f2 B2FBF3F3 		udiv	r3, r2, r3
 2133 00f6 BB61     		str	r3, [r7, #24]
 2134              	.L131:
1476:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1477:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1478:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   return sysclockfreq;
 2135              		.loc 1 1478 10
 2136 00f8 BB69     		ldr	r3, [r7, #24]
1479:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** }
 2137              		.loc 1 1479 1
 2138 00fa 1846     		mov	r0, r3
 2139 00fc 2437     		adds	r7, r7, #36
 2140              	.LCFI23:
 2141              		.cfi_def_cfa_offset 4
 2142 00fe BD46     		mov	sp, r7
 2143              	.LCFI24:
 2144              		.cfi_def_cfa_register 13
 2145              		@ sp needed
 2146 0100 5DF8047B 		ldr	r7, [sp], #4
 2147              	.LCFI25:
 2148              		.cfi_restore 7
 2149              		.cfi_def_cfa_offset 0
 2150 0104 7047     		bx	lr
 2151              	.L139:
 2152 0106 00BF     		.align	2
 2153              	.L138:
 2154 0108 00100240 		.word	1073876992
 2155 010c 00000000 		.word	MSIRangeTable
 2156 0110 0024F400 		.word	16000000
 2157 0114 00127A00 		.word	8000000
 2158              		.cfi_endproc
 2159              	.LFE134:
 2161              		.section	.text.HAL_RCC_GetHCLKFreq,"ax",%progbits
 2162              		.align	1
 2163              		.global	HAL_RCC_GetHCLKFreq
 2164              		.syntax unified
 2165              		.thumb
 2166              		.thumb_func
 2167              		.fpu fpv4-sp-d16
 2169              	HAL_RCC_GetHCLKFreq:
 2170              	.LFB135:
1480:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1481:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /**
1482:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @brief  Return the HCLK frequency.
1483:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   Each time HCLK changes, this function must be called to update the
1484:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         right HCLK value. Otherwise, any configuration based on this function will be incorrect
1485:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *
1486:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency.
1487:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @retval HCLK frequency in Hz
1488:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
1489:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** uint32_t HAL_RCC_GetHCLKFreq(void)
1490:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** {
 2171              		.loc 1 1490 1
 2172              		.cfi_startproc
ARM GAS  /tmp/ccwaNkAs.s 			page 66


 2173              		@ args = 0, pretend = 0, frame = 0
 2174              		@ frame_needed = 1, uses_anonymous_args = 0
 2175              		@ link register save eliminated.
 2176 0000 80B4     		push	{r7}
 2177              	.LCFI26:
 2178              		.cfi_def_cfa_offset 4
 2179              		.cfi_offset 7, -4
 2180 0002 00AF     		add	r7, sp, #0
 2181              	.LCFI27:
 2182              		.cfi_def_cfa_register 7
1491:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   return SystemCoreClock;
 2183              		.loc 1 1491 10
 2184 0004 034B     		ldr	r3, .L142
 2185 0006 1B68     		ldr	r3, [r3]
1492:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** }
 2186              		.loc 1 1492 1
 2187 0008 1846     		mov	r0, r3
 2188 000a BD46     		mov	sp, r7
 2189              	.LCFI28:
 2190              		.cfi_def_cfa_register 13
 2191              		@ sp needed
 2192 000c 5DF8047B 		ldr	r7, [sp], #4
 2193              	.LCFI29:
 2194              		.cfi_restore 7
 2195              		.cfi_def_cfa_offset 0
 2196 0010 7047     		bx	lr
 2197              	.L143:
 2198 0012 00BF     		.align	2
 2199              	.L142:
 2200 0014 00000000 		.word	SystemCoreClock
 2201              		.cfi_endproc
 2202              	.LFE135:
 2204              		.section	.text.HAL_RCC_GetPCLK1Freq,"ax",%progbits
 2205              		.align	1
 2206              		.global	HAL_RCC_GetPCLK1Freq
 2207              		.syntax unified
 2208              		.thumb
 2209              		.thumb_func
 2210              		.fpu fpv4-sp-d16
 2212              	HAL_RCC_GetPCLK1Freq:
 2213              	.LFB136:
1493:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1494:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /**
1495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @brief  Return the PCLK1 frequency.
1496:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   Each time PCLK1 changes, this function must be called to update the
1497:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrec
1498:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @retval PCLK1 frequency in Hz
1499:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
1500:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK1Freq(void)
1501:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** {
 2214              		.loc 1 1501 1
 2215              		.cfi_startproc
 2216              		@ args = 0, pretend = 0, frame = 0
 2217              		@ frame_needed = 1, uses_anonymous_args = 0
 2218 0000 80B5     		push	{r7, lr}
 2219              	.LCFI30:
 2220              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccwaNkAs.s 			page 67


 2221              		.cfi_offset 7, -8
 2222              		.cfi_offset 14, -4
 2223 0002 00AF     		add	r7, sp, #0
 2224              	.LCFI31:
 2225              		.cfi_def_cfa_register 7
1502:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
1503:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq() >> (APBPrescTable[READ_BIT(RCC->CFGR, RCC_CFGR_PPRE1) >> RCC_CFGR_P
 2226              		.loc 1 1503 11
 2227 0004 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 2228 0008 0246     		mov	r2, r0
 2229              		.loc 1 1503 51
 2230 000a 064B     		ldr	r3, .L146
 2231 000c 9B68     		ldr	r3, [r3, #8]
 2232              		.loc 1 1503 87
 2233 000e 1B0A     		lsrs	r3, r3, #8
 2234 0010 03F00703 		and	r3, r3, #7
 2235              		.loc 1 1503 50
 2236 0014 0449     		ldr	r1, .L146+4
 2237 0016 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 2238              		.loc 1 1503 110
 2239 0018 03F01F03 		and	r3, r3, #31
 2240              		.loc 1 1503 33
 2241 001c 22FA03F3 		lsr	r3, r2, r3
1504:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** }
 2242              		.loc 1 1504 1
 2243 0020 1846     		mov	r0, r3
 2244 0022 80BD     		pop	{r7, pc}
 2245              	.L147:
 2246              		.align	2
 2247              	.L146:
 2248 0024 00100240 		.word	1073876992
 2249 0028 00000000 		.word	APBPrescTable
 2250              		.cfi_endproc
 2251              	.LFE136:
 2253              		.section	.text.HAL_RCC_GetPCLK2Freq,"ax",%progbits
 2254              		.align	1
 2255              		.global	HAL_RCC_GetPCLK2Freq
 2256              		.syntax unified
 2257              		.thumb
 2258              		.thumb_func
 2259              		.fpu fpv4-sp-d16
 2261              	HAL_RCC_GetPCLK2Freq:
 2262              	.LFB137:
1505:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1506:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /**
1507:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @brief  Return the PCLK2 frequency.
1508:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   Each time PCLK2 changes, this function must be called to update the
1509:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrec
1510:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @retval PCLK2 frequency in Hz
1511:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
1512:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK2Freq(void)
1513:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** {
 2263              		.loc 1 1513 1
 2264              		.cfi_startproc
 2265              		@ args = 0, pretend = 0, frame = 0
 2266              		@ frame_needed = 1, uses_anonymous_args = 0
 2267 0000 80B5     		push	{r7, lr}
ARM GAS  /tmp/ccwaNkAs.s 			page 68


 2268              	.LCFI32:
 2269              		.cfi_def_cfa_offset 8
 2270              		.cfi_offset 7, -8
 2271              		.cfi_offset 14, -4
 2272 0002 00AF     		add	r7, sp, #0
 2273              	.LCFI33:
 2274              		.cfi_def_cfa_register 7
1514:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
1515:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq()>> (APBPrescTable[READ_BIT(RCC->CFGR, RCC_CFGR_PPRE2) >> RCC_CFGR_PP
 2275              		.loc 1 1515 11
 2276 0004 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 2277 0008 0246     		mov	r2, r0
 2278              		.loc 1 1515 50
 2279 000a 064B     		ldr	r3, .L150
 2280 000c 9B68     		ldr	r3, [r3, #8]
 2281              		.loc 1 1515 86
 2282 000e DB0A     		lsrs	r3, r3, #11
 2283 0010 03F00703 		and	r3, r3, #7
 2284              		.loc 1 1515 49
 2285 0014 0449     		ldr	r1, .L150+4
 2286 0016 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 2287              		.loc 1 1515 109
 2288 0018 03F01F03 		and	r3, r3, #31
 2289              		.loc 1 1515 32
 2290 001c 22FA03F3 		lsr	r3, r2, r3
1516:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** }
 2291              		.loc 1 1516 1
 2292 0020 1846     		mov	r0, r3
 2293 0022 80BD     		pop	{r7, pc}
 2294              	.L151:
 2295              		.align	2
 2296              	.L150:
 2297 0024 00100240 		.word	1073876992
 2298 0028 00000000 		.word	APBPrescTable
 2299              		.cfi_endproc
 2300              	.LFE137:
 2302              		.section	.text.HAL_RCC_GetOscConfig,"ax",%progbits
 2303              		.align	1
 2304              		.global	HAL_RCC_GetOscConfig
 2305              		.syntax unified
 2306              		.thumb
 2307              		.thumb_func
 2308              		.fpu fpv4-sp-d16
 2310              	HAL_RCC_GetOscConfig:
 2311              	.LFB138:
1517:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1518:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /**
1519:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @brief  Configure the RCC_OscInitStruct according to the internal
1520:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         RCC configuration registers.
1521:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @param  RCC_OscInitStruct  pointer to an RCC_OscInitTypeDef structure that
1522:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         will be configured.
1523:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @retval None
1524:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
1525:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** void HAL_RCC_GetOscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
1526:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** {
 2312              		.loc 1 1526 1
 2313              		.cfi_startproc
ARM GAS  /tmp/ccwaNkAs.s 			page 69


 2314              		@ args = 0, pretend = 0, frame = 8
 2315              		@ frame_needed = 1, uses_anonymous_args = 0
 2316              		@ link register save eliminated.
 2317 0000 80B4     		push	{r7}
 2318              	.LCFI34:
 2319              		.cfi_def_cfa_offset 4
 2320              		.cfi_offset 7, -4
 2321 0002 83B0     		sub	sp, sp, #12
 2322              	.LCFI35:
 2323              		.cfi_def_cfa_offset 16
 2324 0004 00AF     		add	r7, sp, #0
 2325              	.LCFI36:
 2326              		.cfi_def_cfa_register 7
 2327 0006 7860     		str	r0, [r7, #4]
1527:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Check the parameters */
1528:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   assert_param(RCC_OscInitStruct != (void *)NULL);
1529:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1530:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Set all possible values for the Oscillator type parameter ---------------*/
1531:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_HSI48_SUPPORT)
1532:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   RCC_OscInitStruct->OscillatorType = RCC_OSCILLATORTYPE_HSE | RCC_OSCILLATORTYPE_HSI | RCC_OSCILLA
 2328              		.loc 1 1532 37
 2329 0008 7B68     		ldr	r3, [r7, #4]
 2330 000a 3F22     		movs	r2, #63
 2331 000c 1A60     		str	r2, [r3]
1533:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                                       RCC_OSCILLATORTYPE_LSE | RCC_OSCILLATORTYPE_LSI | RCC_OSCILLA
1534:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #else
1535:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   RCC_OscInitStruct->OscillatorType = RCC_OSCILLATORTYPE_HSE | RCC_OSCILLATORTYPE_HSI | RCC_OSCILLA
1536:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                                       RCC_OSCILLATORTYPE_LSE | RCC_OSCILLATORTYPE_LSI;
1537:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_HSI48_SUPPORT */
1538:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1539:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Get the HSE configuration -----------------------------------------------*/
1540:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(READ_BIT(RCC->CR, RCC_CR_HSEBYP) == RCC_CR_HSEBYP)
 2332              		.loc 1 1540 6
 2333 000e 604B     		ldr	r3, .L169
 2334 0010 1B68     		ldr	r3, [r3]
 2335 0012 03F48023 		and	r3, r3, #262144
 2336              		.loc 1 1540 5
 2337 0016 B3F5802F 		cmp	r3, #262144
 2338 001a 04D1     		bne	.L153
1541:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1542:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_BYPASS;
 2339              		.loc 1 1542 33
 2340 001c 7B68     		ldr	r3, [r7, #4]
 2341 001e 4FF4A022 		mov	r2, #327680
 2342 0022 5A60     		str	r2, [r3, #4]
 2343 0024 0EE0     		b	.L154
 2344              	.L153:
1543:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1544:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   else if(READ_BIT(RCC->CR, RCC_CR_HSEON) == RCC_CR_HSEON)
 2345              		.loc 1 1544 11
 2346 0026 5A4B     		ldr	r3, .L169
 2347 0028 1B68     		ldr	r3, [r3]
 2348 002a 03F48033 		and	r3, r3, #65536
 2349              		.loc 1 1544 10
 2350 002e B3F5803F 		cmp	r3, #65536
 2351 0032 04D1     		bne	.L155
1545:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
ARM GAS  /tmp/ccwaNkAs.s 			page 70


1546:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_ON;
 2352              		.loc 1 1546 33
 2353 0034 7B68     		ldr	r3, [r7, #4]
 2354 0036 4FF48032 		mov	r2, #65536
 2355 003a 5A60     		str	r2, [r3, #4]
 2356 003c 02E0     		b	.L154
 2357              	.L155:
1547:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1548:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   else
1549:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1550:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_OFF;
 2358              		.loc 1 1550 33
 2359 003e 7B68     		ldr	r3, [r7, #4]
 2360 0040 0022     		movs	r2, #0
 2361 0042 5A60     		str	r2, [r3, #4]
 2362              	.L154:
1551:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1552:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1553:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****    /* Get the MSI configuration -----------------------------------------------*/
1554:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(READ_BIT(RCC->CR, RCC_CR_MSION) == RCC_CR_MSION)
 2363              		.loc 1 1554 6
 2364 0044 524B     		ldr	r3, .L169
 2365 0046 1B68     		ldr	r3, [r3]
 2366 0048 03F00103 		and	r3, r3, #1
 2367              		.loc 1 1554 5
 2368 004c 012B     		cmp	r3, #1
 2369 004e 03D1     		bne	.L156
1555:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1556:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     RCC_OscInitStruct->MSIState = RCC_MSI_ON;
 2370              		.loc 1 1556 33
 2371 0050 7B68     		ldr	r3, [r7, #4]
 2372 0052 0122     		movs	r2, #1
 2373 0054 9A61     		str	r2, [r3, #24]
 2374 0056 02E0     		b	.L157
 2375              	.L156:
1557:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1558:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   else
1559:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1560:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     RCC_OscInitStruct->MSIState = RCC_MSI_OFF;
 2376              		.loc 1 1560 33
 2377 0058 7B68     		ldr	r3, [r7, #4]
 2378 005a 0022     		movs	r2, #0
 2379 005c 9A61     		str	r2, [r3, #24]
 2380              	.L157:
1561:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1562:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1563:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   RCC_OscInitStruct->MSICalibrationValue = READ_BIT(RCC->ICSCR, RCC_ICSCR_MSITRIM) >> RCC_ICSCR_MSI
 2381              		.loc 1 1563 44
 2382 005e 4C4B     		ldr	r3, .L169
 2383 0060 5B68     		ldr	r3, [r3, #4]
 2384              		.loc 1 1563 84
 2385 0062 1B0A     		lsrs	r3, r3, #8
 2386 0064 DAB2     		uxtb	r2, r3
 2387              		.loc 1 1563 42
 2388 0066 7B68     		ldr	r3, [r7, #4]
 2389 0068 DA61     		str	r2, [r3, #28]
1564:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   RCC_OscInitStruct->MSIClockRange = READ_BIT(RCC->CR, RCC_CR_MSIRANGE);
ARM GAS  /tmp/ccwaNkAs.s 			page 71


 2390              		.loc 1 1564 38
 2391 006a 494B     		ldr	r3, .L169
 2392 006c 1B68     		ldr	r3, [r3]
 2393 006e 03F0F002 		and	r2, r3, #240
 2394              		.loc 1 1564 36
 2395 0072 7B68     		ldr	r3, [r7, #4]
 2396 0074 1A62     		str	r2, [r3, #32]
1565:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1566:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Get the HSI configuration -----------------------------------------------*/
1567:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(READ_BIT(RCC->CR, RCC_CR_HSION) == RCC_CR_HSION)
 2397              		.loc 1 1567 6
 2398 0076 464B     		ldr	r3, .L169
 2399 0078 1B68     		ldr	r3, [r3]
 2400 007a 03F48073 		and	r3, r3, #256
 2401              		.loc 1 1567 5
 2402 007e B3F5807F 		cmp	r3, #256
 2403 0082 04D1     		bne	.L158
1568:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1569:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_ON;
 2404              		.loc 1 1569 33
 2405 0084 7B68     		ldr	r3, [r7, #4]
 2406 0086 4FF48072 		mov	r2, #256
 2407 008a DA60     		str	r2, [r3, #12]
 2408 008c 02E0     		b	.L159
 2409              	.L158:
1570:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1571:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   else
1572:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1573:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_OFF;
 2410              		.loc 1 1573 33
 2411 008e 7B68     		ldr	r3, [r7, #4]
 2412 0090 0022     		movs	r2, #0
 2413 0092 DA60     		str	r2, [r3, #12]
 2414              	.L159:
1574:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1575:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1576:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   RCC_OscInitStruct->HSICalibrationValue = READ_BIT(RCC->ICSCR, RCC_ICSCR_HSITRIM) >> RCC_ICSCR_HSI
 2415              		.loc 1 1576 44
 2416 0094 3E4B     		ldr	r3, .L169
 2417 0096 5B68     		ldr	r3, [r3, #4]
 2418              		.loc 1 1576 84
 2419 0098 1B0E     		lsrs	r3, r3, #24
 2420 009a 03F01F02 		and	r2, r3, #31
 2421              		.loc 1 1576 42
 2422 009e 7B68     		ldr	r3, [r7, #4]
 2423 00a0 1A61     		str	r2, [r3, #16]
1577:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1578:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Get the LSE configuration -----------------------------------------------*/
1579:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(READ_BIT(RCC->BDCR, RCC_BDCR_LSEBYP) == RCC_BDCR_LSEBYP)
 2424              		.loc 1 1579 6
 2425 00a2 3B4B     		ldr	r3, .L169
 2426 00a4 D3F89030 		ldr	r3, [r3, #144]
 2427 00a8 03F00403 		and	r3, r3, #4
 2428              		.loc 1 1579 5
 2429 00ac 042B     		cmp	r3, #4
 2430 00ae 03D1     		bne	.L160
1580:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
ARM GAS  /tmp/ccwaNkAs.s 			page 72


1581:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_BDCR_LSESYSDIS)
1582:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if((RCC->BDCR & RCC_BDCR_LSESYSDIS) == RCC_BDCR_LSESYSDIS)
1583:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
1584:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       RCC_OscInitStruct->LSEState = RCC_LSE_BYPASS_RTC_ONLY;
1585:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
1586:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     else
1587:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_BDCR_LSESYSDIS */
1588:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
1589:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       RCC_OscInitStruct->LSEState = RCC_LSE_BYPASS;
 2431              		.loc 1 1589 35
 2432 00b0 7B68     		ldr	r3, [r7, #4]
 2433 00b2 0522     		movs	r2, #5
 2434 00b4 9A60     		str	r2, [r3, #8]
 2435 00b6 0DE0     		b	.L161
 2436              	.L160:
1590:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
1591:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1592:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   else if(READ_BIT(RCC->BDCR, RCC_BDCR_LSEON) == RCC_BDCR_LSEON)
 2437              		.loc 1 1592 11
 2438 00b8 354B     		ldr	r3, .L169
 2439 00ba D3F89030 		ldr	r3, [r3, #144]
 2440 00be 03F00103 		and	r3, r3, #1
 2441              		.loc 1 1592 10
 2442 00c2 012B     		cmp	r3, #1
 2443 00c4 03D1     		bne	.L162
1593:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1594:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_BDCR_LSESYSDIS)
1595:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if((RCC->BDCR & RCC_BDCR_LSESYSDIS) == RCC_BDCR_LSESYSDIS)
1596:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
1597:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       RCC_OscInitStruct->LSEState = RCC_LSE_ON_RTC_ONLY;
1598:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
1599:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     else
1600:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_BDCR_LSESYSDIS */
1601:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
1602:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       RCC_OscInitStruct->LSEState = RCC_LSE_ON;
 2444              		.loc 1 1602 35
 2445 00c6 7B68     		ldr	r3, [r7, #4]
 2446 00c8 0122     		movs	r2, #1
 2447 00ca 9A60     		str	r2, [r3, #8]
 2448 00cc 02E0     		b	.L161
 2449              	.L162:
1603:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
1604:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1605:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   else
1606:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1607:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_OFF;
 2450              		.loc 1 1607 33
 2451 00ce 7B68     		ldr	r3, [r7, #4]
 2452 00d0 0022     		movs	r2, #0
 2453 00d2 9A60     		str	r2, [r3, #8]
 2454              	.L161:
1608:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1609:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1610:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Get the LSI configuration -----------------------------------------------*/
1611:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(READ_BIT(RCC->CSR, RCC_CSR_LSION) == RCC_CSR_LSION)
 2455              		.loc 1 1611 6
 2456 00d4 2E4B     		ldr	r3, .L169
ARM GAS  /tmp/ccwaNkAs.s 			page 73


 2457 00d6 D3F89430 		ldr	r3, [r3, #148]
 2458 00da 03F00103 		and	r3, r3, #1
 2459              		.loc 1 1611 5
 2460 00de 012B     		cmp	r3, #1
 2461 00e0 03D1     		bne	.L163
1612:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1613:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_ON;
 2462              		.loc 1 1613 33
 2463 00e2 7B68     		ldr	r3, [r7, #4]
 2464 00e4 0122     		movs	r2, #1
 2465 00e6 5A61     		str	r2, [r3, #20]
 2466 00e8 02E0     		b	.L164
 2467              	.L163:
1614:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1615:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   else
1616:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1617:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_OFF;
 2468              		.loc 1 1617 33
 2469 00ea 7B68     		ldr	r3, [r7, #4]
 2470 00ec 0022     		movs	r2, #0
 2471 00ee 5A61     		str	r2, [r3, #20]
 2472              	.L164:
1618:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1619:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_CSR_LSIPREDIV)
1620:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1621:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Get the LSI configuration -----------------------------------------------*/
1622:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if((RCC->CSR & RCC_CSR_LSIPREDIV) == RCC_CSR_LSIPREDIV)
1623:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1624:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     RCC_OscInitStruct->LSIDiv = RCC_LSI_DIV128;
1625:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1626:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   else
1627:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1628:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     RCC_OscInitStruct->LSIDiv = RCC_LSI_DIV1;
1629:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1630:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_CSR_LSIPREDIV */
1631:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1632:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_HSI48_SUPPORT)
1633:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Get the HSI48 configuration ---------------------------------------------*/
1634:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(READ_BIT(RCC->CRRCR, RCC_CRRCR_HSI48ON) == RCC_CRRCR_HSI48ON)
 2473              		.loc 1 1634 6
 2474 00f0 274B     		ldr	r3, .L169
 2475 00f2 D3F89830 		ldr	r3, [r3, #152]
 2476 00f6 03F00103 		and	r3, r3, #1
 2477              		.loc 1 1634 5
 2478 00fa 012B     		cmp	r3, #1
 2479 00fc 03D1     		bne	.L165
1635:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1636:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     RCC_OscInitStruct->HSI48State = RCC_HSI48_ON;
 2480              		.loc 1 1636 35
 2481 00fe 7B68     		ldr	r3, [r7, #4]
 2482 0100 0122     		movs	r2, #1
 2483 0102 5A62     		str	r2, [r3, #36]
 2484 0104 02E0     		b	.L166
 2485              	.L165:
1637:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1638:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   else
1639:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
ARM GAS  /tmp/ccwaNkAs.s 			page 74


1640:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     RCC_OscInitStruct->HSI48State = RCC_HSI48_OFF;
 2486              		.loc 1 1640 35
 2487 0106 7B68     		ldr	r3, [r7, #4]
 2488 0108 0022     		movs	r2, #0
 2489 010a 5A62     		str	r2, [r3, #36]
 2490              	.L166:
1641:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1642:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #else
1643:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   RCC_OscInitStruct->HSI48State = RCC_HSI48_OFF;
1644:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_HSI48_SUPPORT */
1645:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1646:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Get the PLL configuration -----------------------------------------------*/
1647:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(READ_BIT(RCC->CR, RCC_CR_PLLON) == RCC_CR_PLLON)
 2491              		.loc 1 1647 6
 2492 010c 204B     		ldr	r3, .L169
 2493 010e 1B68     		ldr	r3, [r3]
 2494 0110 03F08073 		and	r3, r3, #16777216
 2495              		.loc 1 1647 5
 2496 0114 B3F1807F 		cmp	r3, #16777216
 2497 0118 03D1     		bne	.L167
1648:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1649:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_ON;
 2498              		.loc 1 1649 37
 2499 011a 7B68     		ldr	r3, [r7, #4]
 2500 011c 0222     		movs	r2, #2
 2501 011e 9A62     		str	r2, [r3, #40]
 2502 0120 02E0     		b	.L168
 2503              	.L167:
1650:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1651:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   else
1652:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1653:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_OFF;
 2504              		.loc 1 1653 37
 2505 0122 7B68     		ldr	r3, [r7, #4]
 2506 0124 0122     		movs	r2, #1
 2507 0126 9A62     		str	r2, [r3, #40]
 2508              	.L168:
1654:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1655:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLSource = READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC);
 2509              		.loc 1 1655 38
 2510 0128 194B     		ldr	r3, .L169
 2511 012a DB68     		ldr	r3, [r3, #12]
 2512 012c 03F00302 		and	r2, r3, #3
 2513              		.loc 1 1655 36
 2514 0130 7B68     		ldr	r3, [r7, #4]
 2515 0132 DA62     		str	r2, [r3, #44]
1656:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLM = (READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) 
 2516              		.loc 1 1656 34
 2517 0134 164B     		ldr	r3, .L169
 2518 0136 DB68     		ldr	r3, [r3, #12]
 2519              		.loc 1 1656 75
 2520 0138 1B09     		lsrs	r3, r3, #4
 2521 013a 03F00703 		and	r3, r3, #7
 2522              		.loc 1 1656 100
 2523 013e 5A1C     		adds	r2, r3, #1
 2524              		.loc 1 1656 31
 2525 0140 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccwaNkAs.s 			page 75


 2526 0142 1A63     		str	r2, [r3, #48]
1657:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLN = READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos;
 2527              		.loc 1 1657 33
 2528 0144 124B     		ldr	r3, .L169
 2529 0146 DB68     		ldr	r3, [r3, #12]
 2530              		.loc 1 1657 74
 2531 0148 1B0A     		lsrs	r3, r3, #8
 2532 014a 03F07F02 		and	r2, r3, #127
 2533              		.loc 1 1657 31
 2534 014e 7B68     		ldr	r3, [r7, #4]
 2535 0150 5A63     		str	r2, [r3, #52]
1658:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLQ = (((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLQ) >> RCC_PLLCFGR_PLLQ_Pos
 2536              		.loc 1 1658 36
 2537 0152 0F4B     		ldr	r3, .L169
 2538 0154 DB68     		ldr	r3, [r3, #12]
 2539              		.loc 1 1658 77
 2540 0156 5B0D     		lsrs	r3, r3, #21
 2541 0158 03F00303 		and	r3, r3, #3
 2542              		.loc 1 1658 102
 2543 015c 0133     		adds	r3, r3, #1
 2544              		.loc 1 1658 108
 2545 015e 5A00     		lsls	r2, r3, #1
 2546              		.loc 1 1658 31
 2547 0160 7B68     		ldr	r3, [r7, #4]
 2548 0162 DA63     		str	r2, [r3, #60]
1659:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLR = (((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLR) >> RCC_PLLCFGR_PLLR_Pos
 2549              		.loc 1 1659 36
 2550 0164 0A4B     		ldr	r3, .L169
 2551 0166 DB68     		ldr	r3, [r3, #12]
 2552              		.loc 1 1659 77
 2553 0168 5B0E     		lsrs	r3, r3, #25
 2554 016a 03F00303 		and	r3, r3, #3
 2555              		.loc 1 1659 102
 2556 016e 0133     		adds	r3, r3, #1
 2557              		.loc 1 1659 108
 2558 0170 5A00     		lsls	r2, r3, #1
 2559              		.loc 1 1659 31
 2560 0172 7B68     		ldr	r3, [r7, #4]
 2561 0174 1A64     		str	r2, [r3, #64]
1660:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_PLLP_SUPPORT)
1661:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_PLLP_DIV_2_31_SUPPORT)
1662:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLP = READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLPDIV) >> RCC_PLLCFGR_PLLPDIV_
 2562              		.loc 1 1662 33
 2563 0176 064B     		ldr	r3, .L169
 2564 0178 DB68     		ldr	r3, [r3, #12]
 2565              		.loc 1 1662 77
 2566 017a DB0E     		lsrs	r3, r3, #27
 2567 017c 03F01F02 		and	r2, r3, #31
 2568              		.loc 1 1662 31
 2569 0180 7B68     		ldr	r3, [r7, #4]
 2570 0182 9A63     		str	r2, [r3, #56]
1663:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #else
1664:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLP) != 0U)
1665:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1666:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLP = RCC_PLLP_DIV17;
1667:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1668:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   else
ARM GAS  /tmp/ccwaNkAs.s 			page 76


1669:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1670:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLP = RCC_PLLP_DIV7;
1671:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1672:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_PLLP_DIV_2_31_SUPPORT */
1673:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_PLLP_SUPPORT */
1674:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** }
 2571              		.loc 1 1674 1
 2572 0184 00BF     		nop
 2573 0186 0C37     		adds	r7, r7, #12
 2574              	.LCFI37:
 2575              		.cfi_def_cfa_offset 4
 2576 0188 BD46     		mov	sp, r7
 2577              	.LCFI38:
 2578              		.cfi_def_cfa_register 13
 2579              		@ sp needed
 2580 018a 5DF8047B 		ldr	r7, [sp], #4
 2581              	.LCFI39:
 2582              		.cfi_restore 7
 2583              		.cfi_def_cfa_offset 0
 2584 018e 7047     		bx	lr
 2585              	.L170:
 2586              		.align	2
 2587              	.L169:
 2588 0190 00100240 		.word	1073876992
 2589              		.cfi_endproc
 2590              	.LFE138:
 2592              		.section	.text.HAL_RCC_GetClockConfig,"ax",%progbits
 2593              		.align	1
 2594              		.global	HAL_RCC_GetClockConfig
 2595              		.syntax unified
 2596              		.thumb
 2597              		.thumb_func
 2598              		.fpu fpv4-sp-d16
 2600              	HAL_RCC_GetClockConfig:
 2601              	.LFB139:
1675:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1676:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /**
1677:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @brief  Configure the RCC_ClkInitStruct according to the internal
1678:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         RCC configuration registers.
1679:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct  pointer to an RCC_ClkInitTypeDef structure that
1680:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         will be configured.
1681:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @param  pFLatency  Pointer on the Flash Latency.
1682:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @retval None
1683:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
1684:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
1685:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** {
 2602              		.loc 1 1685 1
 2603              		.cfi_startproc
 2604              		@ args = 0, pretend = 0, frame = 8
 2605              		@ frame_needed = 1, uses_anonymous_args = 0
 2606              		@ link register save eliminated.
 2607 0000 80B4     		push	{r7}
 2608              	.LCFI40:
 2609              		.cfi_def_cfa_offset 4
 2610              		.cfi_offset 7, -4
 2611 0002 83B0     		sub	sp, sp, #12
 2612              	.LCFI41:
ARM GAS  /tmp/ccwaNkAs.s 			page 77


 2613              		.cfi_def_cfa_offset 16
 2614 0004 00AF     		add	r7, sp, #0
 2615              	.LCFI42:
 2616              		.cfi_def_cfa_register 7
 2617 0006 7860     		str	r0, [r7, #4]
 2618 0008 3960     		str	r1, [r7]
1686:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Check the parameters */
1687:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   assert_param(RCC_ClkInitStruct != (void  *)NULL);
1688:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   assert_param(pFLatency != (void *)NULL);
1689:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1690:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Set all possible values for the Clock type parameter --------------------*/
1691:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | 
 2619              		.loc 1 1691 32
 2620 000a 7B68     		ldr	r3, [r7, #4]
 2621 000c 0F22     		movs	r2, #15
 2622 000e 1A60     		str	r2, [r3]
1692:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1693:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Get the SYSCLK configuration --------------------------------------------*/
1694:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   RCC_ClkInitStruct->SYSCLKSource = READ_BIT(RCC->CFGR, RCC_CFGR_SW);
 2623              		.loc 1 1694 37
 2624 0010 124B     		ldr	r3, .L172
 2625 0012 9B68     		ldr	r3, [r3, #8]
 2626 0014 03F00302 		and	r2, r3, #3
 2627              		.loc 1 1694 35
 2628 0018 7B68     		ldr	r3, [r7, #4]
 2629 001a 5A60     		str	r2, [r3, #4]
1695:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1696:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Get the HCLK configuration ----------------------------------------------*/
1697:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   RCC_ClkInitStruct->AHBCLKDivider = READ_BIT(RCC->CFGR, RCC_CFGR_HPRE);
 2630              		.loc 1 1697 38
 2631 001c 0F4B     		ldr	r3, .L172
 2632 001e 9B68     		ldr	r3, [r3, #8]
 2633 0020 03F0F002 		and	r2, r3, #240
 2634              		.loc 1 1697 36
 2635 0024 7B68     		ldr	r3, [r7, #4]
 2636 0026 9A60     		str	r2, [r3, #8]
1698:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1699:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Get the APB1 configuration ----------------------------------------------*/
1700:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   RCC_ClkInitStruct->APB1CLKDivider = READ_BIT(RCC->CFGR, RCC_CFGR_PPRE1);
 2637              		.loc 1 1700 39
 2638 0028 0C4B     		ldr	r3, .L172
 2639 002a 9B68     		ldr	r3, [r3, #8]
 2640 002c 03F4E062 		and	r2, r3, #1792
 2641              		.loc 1 1700 37
 2642 0030 7B68     		ldr	r3, [r7, #4]
 2643 0032 DA60     		str	r2, [r3, #12]
1701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1702:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Get the APB2 configuration ----------------------------------------------*/
1703:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   RCC_ClkInitStruct->APB2CLKDivider = (READ_BIT(RCC->CFGR, RCC_CFGR_PPRE2) >> 3U);
 2644              		.loc 1 1703 40
 2645 0034 094B     		ldr	r3, .L172
 2646 0036 9B68     		ldr	r3, [r3, #8]
 2647              		.loc 1 1703 76
 2648 0038 DB08     		lsrs	r3, r3, #3
 2649 003a 03F4E062 		and	r2, r3, #1792
 2650              		.loc 1 1703 37
 2651 003e 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccwaNkAs.s 			page 78


 2652 0040 1A61     		str	r2, [r3, #16]
1704:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1705:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Get the Flash Wait State (Latency) configuration ------------------------*/
1706:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *pFLatency = __HAL_FLASH_GET_LATENCY();
 2653              		.loc 1 1706 16
 2654 0042 074B     		ldr	r3, .L172+4
 2655 0044 1B68     		ldr	r3, [r3]
 2656 0046 03F00702 		and	r2, r3, #7
 2657              		.loc 1 1706 14
 2658 004a 3B68     		ldr	r3, [r7]
 2659 004c 1A60     		str	r2, [r3]
1707:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** }
 2660              		.loc 1 1707 1
 2661 004e 00BF     		nop
 2662 0050 0C37     		adds	r7, r7, #12
 2663              	.LCFI43:
 2664              		.cfi_def_cfa_offset 4
 2665 0052 BD46     		mov	sp, r7
 2666              	.LCFI44:
 2667              		.cfi_def_cfa_register 13
 2668              		@ sp needed
 2669 0054 5DF8047B 		ldr	r7, [sp], #4
 2670              	.LCFI45:
 2671              		.cfi_restore 7
 2672              		.cfi_def_cfa_offset 0
 2673 0058 7047     		bx	lr
 2674              	.L173:
 2675 005a 00BF     		.align	2
 2676              	.L172:
 2677 005c 00100240 		.word	1073876992
 2678 0060 00200240 		.word	1073881088
 2679              		.cfi_endproc
 2680              	.LFE139:
 2682              		.section	.text.HAL_RCC_EnableCSS,"ax",%progbits
 2683              		.align	1
 2684              		.global	HAL_RCC_EnableCSS
 2685              		.syntax unified
 2686              		.thumb
 2687              		.thumb_func
 2688              		.fpu fpv4-sp-d16
 2690              	HAL_RCC_EnableCSS:
 2691              	.LFB140:
1708:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1709:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /**
1710:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @brief  Enable the Clock Security System.
1711:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   If a failure is detected on the HSE oscillator clock, this oscillator
1712:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         is automatically disabled and an interrupt is generated to inform the
1713:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         software about the failure (Clock Security System Interrupt, CSSI),
1714:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         allowing the MCU to perform rescue operations. The CSSI is linked to
1715:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         the Cortex-M4 NMI (Non-Maskable Interrupt) exception vector.
1716:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   The Clock Security System can only be cleared by reset.
1717:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @retval None
1718:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
1719:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** void HAL_RCC_EnableCSS(void)
1720:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** {
 2692              		.loc 1 1720 1
 2693              		.cfi_startproc
ARM GAS  /tmp/ccwaNkAs.s 			page 79


 2694              		@ args = 0, pretend = 0, frame = 0
 2695              		@ frame_needed = 1, uses_anonymous_args = 0
 2696              		@ link register save eliminated.
 2697 0000 80B4     		push	{r7}
 2698              	.LCFI46:
 2699              		.cfi_def_cfa_offset 4
 2700              		.cfi_offset 7, -4
 2701 0002 00AF     		add	r7, sp, #0
 2702              	.LCFI47:
 2703              		.cfi_def_cfa_register 7
1721:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   SET_BIT(RCC->CR, RCC_CR_CSSON) ;
 2704              		.loc 1 1721 3
 2705 0004 054B     		ldr	r3, .L175
 2706 0006 1B68     		ldr	r3, [r3]
 2707 0008 044A     		ldr	r2, .L175
 2708 000a 43F40023 		orr	r3, r3, #524288
 2709 000e 1360     		str	r3, [r2]
1722:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** }
 2710              		.loc 1 1722 1
 2711 0010 00BF     		nop
 2712 0012 BD46     		mov	sp, r7
 2713              	.LCFI48:
 2714              		.cfi_def_cfa_register 13
 2715              		@ sp needed
 2716 0014 5DF8047B 		ldr	r7, [sp], #4
 2717              	.LCFI49:
 2718              		.cfi_restore 7
 2719              		.cfi_def_cfa_offset 0
 2720 0018 7047     		bx	lr
 2721              	.L176:
 2722 001a 00BF     		.align	2
 2723              	.L175:
 2724 001c 00100240 		.word	1073876992
 2725              		.cfi_endproc
 2726              	.LFE140:
 2728              		.section	.text.HAL_RCC_NMI_IRQHandler,"ax",%progbits
 2729              		.align	1
 2730              		.global	HAL_RCC_NMI_IRQHandler
 2731              		.syntax unified
 2732              		.thumb
 2733              		.thumb_func
 2734              		.fpu fpv4-sp-d16
 2736              	HAL_RCC_NMI_IRQHandler:
 2737              	.LFB141:
1723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1724:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /**
1725:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @brief Handle the RCC Clock Security System interrupt request.
1726:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note This API should be called under the NMI_Handler().
1727:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @retval None
1728:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
1729:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** void HAL_RCC_NMI_IRQHandler(void)
1730:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** {
 2738              		.loc 1 1730 1
 2739              		.cfi_startproc
 2740              		@ args = 0, pretend = 0, frame = 0
 2741              		@ frame_needed = 1, uses_anonymous_args = 0
 2742 0000 80B5     		push	{r7, lr}
ARM GAS  /tmp/ccwaNkAs.s 			page 80


 2743              	.LCFI50:
 2744              		.cfi_def_cfa_offset 8
 2745              		.cfi_offset 7, -8
 2746              		.cfi_offset 14, -4
 2747 0002 00AF     		add	r7, sp, #0
 2748              	.LCFI51:
 2749              		.cfi_def_cfa_register 7
1731:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Check RCC CSSF interrupt flag  */
1732:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(__HAL_RCC_GET_IT(RCC_IT_CSS))
 2750              		.loc 1 1732 6
 2751 0004 074B     		ldr	r3, .L180
 2752 0006 DB69     		ldr	r3, [r3, #28]
 2753 0008 03F48073 		and	r3, r3, #256
 2754              		.loc 1 1732 5
 2755 000c B3F5807F 		cmp	r3, #256
 2756 0010 05D1     		bne	.L179
1733:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1734:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* RCC Clock Security System interrupt user callback */
1735:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     HAL_RCC_CSSCallback();
 2757              		.loc 1 1735 5
 2758 0012 FFF7FEFF 		bl	HAL_RCC_CSSCallback
1736:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1737:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Clear RCC CSS pending bit */
1738:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     __HAL_RCC_CLEAR_IT(RCC_IT_CSS);
 2759              		.loc 1 1738 5
 2760 0016 034B     		ldr	r3, .L180
 2761 0018 4FF48072 		mov	r2, #256
 2762 001c 1A62     		str	r2, [r3, #32]
 2763              	.L179:
1739:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1740:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** }
 2764              		.loc 1 1740 1
 2765 001e 00BF     		nop
 2766 0020 80BD     		pop	{r7, pc}
 2767              	.L181:
 2768 0022 00BF     		.align	2
 2769              	.L180:
 2770 0024 00100240 		.word	1073876992
 2771              		.cfi_endproc
 2772              	.LFE141:
 2774              		.section	.text.HAL_RCC_CSSCallback,"ax",%progbits
 2775              		.align	1
 2776              		.weak	HAL_RCC_CSSCallback
 2777              		.syntax unified
 2778              		.thumb
 2779              		.thumb_func
 2780              		.fpu fpv4-sp-d16
 2782              	HAL_RCC_CSSCallback:
 2783              	.LFB142:
1741:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1742:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /**
1743:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @brief  RCC Clock Security System interrupt callback.
1744:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @retval none
1745:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
1746:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** __weak void HAL_RCC_CSSCallback(void)
1747:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** {
 2784              		.loc 1 1747 1
ARM GAS  /tmp/ccwaNkAs.s 			page 81


 2785              		.cfi_startproc
 2786              		@ args = 0, pretend = 0, frame = 0
 2787              		@ frame_needed = 1, uses_anonymous_args = 0
 2788              		@ link register save eliminated.
 2789 0000 80B4     		push	{r7}
 2790              	.LCFI52:
 2791              		.cfi_def_cfa_offset 4
 2792              		.cfi_offset 7, -4
 2793 0002 00AF     		add	r7, sp, #0
 2794              	.LCFI53:
 2795              		.cfi_def_cfa_register 7
1748:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1749:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             the HAL_RCC_CSSCallback should be implemented in the user file
1750:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****    */
1751:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** }
 2796              		.loc 1 1751 1
 2797 0004 00BF     		nop
 2798 0006 BD46     		mov	sp, r7
 2799              	.LCFI54:
 2800              		.cfi_def_cfa_register 13
 2801              		@ sp needed
 2802 0008 5DF8047B 		ldr	r7, [sp], #4
 2803              	.LCFI55:
 2804              		.cfi_restore 7
 2805              		.cfi_def_cfa_offset 0
 2806 000c 7047     		bx	lr
 2807              		.cfi_endproc
 2808              	.LFE142:
 2810              		.section	.text.RCC_SetFlashLatencyFromMSIRange,"ax",%progbits
 2811              		.align	1
 2812              		.syntax unified
 2813              		.thumb
 2814              		.thumb_func
 2815              		.fpu fpv4-sp-d16
 2817              	RCC_SetFlashLatencyFromMSIRange:
 2818              	.LFB143:
1752:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1753:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /**
1754:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @}
1755:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
1756:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1757:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /**
1758:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @}
1759:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
1760:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1761:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /* Private function prototypes -----------------------------------------------*/
1762:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /** @addtogroup RCC_Private_Functions
1763:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @{
1764:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
1765:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /**
1766:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @brief  Update number of Flash wait states in line with MSI range and current
1767:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             voltage range.
1768:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @param  msirange  MSI range value from RCC_MSIRANGE_0 to RCC_MSIRANGE_11
1769:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @retval HAL status
1770:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
1771:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** static HAL_StatusTypeDef RCC_SetFlashLatencyFromMSIRange(uint32_t msirange)
1772:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** {
ARM GAS  /tmp/ccwaNkAs.s 			page 82


 2819              		.loc 1 1772 1
 2820              		.cfi_startproc
 2821              		@ args = 0, pretend = 0, frame = 24
 2822              		@ frame_needed = 1, uses_anonymous_args = 0
 2823 0000 80B5     		push	{r7, lr}
 2824              	.LCFI56:
 2825              		.cfi_def_cfa_offset 8
 2826              		.cfi_offset 7, -8
 2827              		.cfi_offset 14, -4
 2828 0002 86B0     		sub	sp, sp, #24
 2829              	.LCFI57:
 2830              		.cfi_def_cfa_offset 32
 2831 0004 00AF     		add	r7, sp, #0
 2832              	.LCFI58:
 2833              		.cfi_def_cfa_register 7
 2834 0006 7860     		str	r0, [r7, #4]
1773:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   uint32_t vos;
1774:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   uint32_t latency = FLASH_LATENCY_0;  /* default value 0WS */
 2835              		.loc 1 1774 12
 2836 0008 0023     		movs	r3, #0
 2837 000a 3B61     		str	r3, [r7, #16]
1775:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1776:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(__HAL_RCC_PWR_IS_CLK_ENABLED())
 2838              		.loc 1 1776 6
 2839 000c 2A4B     		ldr	r3, .L193
 2840 000e 9B6D     		ldr	r3, [r3, #88]
 2841 0010 03F08053 		and	r3, r3, #268435456
 2842              		.loc 1 1776 5
 2843 0014 002B     		cmp	r3, #0
 2844 0016 03D0     		beq	.L184
1777:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1778:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     vos = HAL_PWREx_GetVoltageRange();
 2845              		.loc 1 1778 11
 2846 0018 FFF7FEFF 		bl	HAL_PWREx_GetVoltageRange
 2847 001c 7861     		str	r0, [r7, #20]
 2848 001e 14E0     		b	.L185
 2849              	.L184:
 2850              	.LBB5:
1779:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1780:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   else
1781:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1782:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     __HAL_RCC_PWR_CLK_ENABLE();
 2851              		.loc 1 1782 5
 2852 0020 254B     		ldr	r3, .L193
 2853 0022 9B6D     		ldr	r3, [r3, #88]
 2854 0024 244A     		ldr	r2, .L193
 2855 0026 43F08053 		orr	r3, r3, #268435456
 2856 002a 9365     		str	r3, [r2, #88]
 2857 002c 224B     		ldr	r3, .L193
 2858 002e 9B6D     		ldr	r3, [r3, #88]
 2859 0030 03F08053 		and	r3, r3, #268435456
 2860 0034 FB60     		str	r3, [r7, #12]
 2861 0036 FB68     		ldr	r3, [r7, #12]
 2862              	.LBE5:
1783:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     vos = HAL_PWREx_GetVoltageRange();
 2863              		.loc 1 1783 11
 2864 0038 FFF7FEFF 		bl	HAL_PWREx_GetVoltageRange
ARM GAS  /tmp/ccwaNkAs.s 			page 83


 2865 003c 7861     		str	r0, [r7, #20]
1784:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     __HAL_RCC_PWR_CLK_DISABLE();
 2866              		.loc 1 1784 5
 2867 003e 1E4B     		ldr	r3, .L193
 2868 0040 9B6D     		ldr	r3, [r3, #88]
 2869 0042 1D4A     		ldr	r2, .L193
 2870 0044 23F08053 		bic	r3, r3, #268435456
 2871 0048 9365     		str	r3, [r2, #88]
 2872              	.L185:
1785:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1786:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1787:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(vos == PWR_REGULATOR_VOLTAGE_SCALE1)
 2873              		.loc 1 1787 5
 2874 004a 7B69     		ldr	r3, [r7, #20]
 2875 004c B3F5007F 		cmp	r3, #512
 2876 0050 0BD1     		bne	.L186
1788:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if(msirange > RCC_MSIRANGE_8)
 2877              		.loc 1 1789 7
 2878 0052 7B68     		ldr	r3, [r7, #4]
 2879 0054 802B     		cmp	r3, #128
 2880 0056 19D9     		bls	.L187
1790:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
1791:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* MSI > 16Mhz */
1792:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       if(msirange > RCC_MSIRANGE_10)
 2881              		.loc 1 1792 9
 2882 0058 7B68     		ldr	r3, [r7, #4]
 2883 005a A02B     		cmp	r3, #160
 2884 005c 02D9     		bls	.L188
1793:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
1794:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* MSI 48Mhz */
1795:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         latency = FLASH_LATENCY_2; /* 2WS */
 2885              		.loc 1 1795 17
 2886 005e 0223     		movs	r3, #2
 2887 0060 3B61     		str	r3, [r7, #16]
 2888 0062 13E0     		b	.L187
 2889              	.L188:
1796:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
1797:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       else
1798:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
1799:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* MSI 24Mhz or 32Mhz */
1800:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         latency = FLASH_LATENCY_1; /* 1WS */
 2890              		.loc 1 1800 17
 2891 0064 0123     		movs	r3, #1
 2892 0066 3B61     		str	r3, [r7, #16]
 2893 0068 10E0     		b	.L187
 2894              	.L186:
1801:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
1802:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
1803:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* else MSI <= 16Mhz default FLASH_LATENCY_0 0WS */
1804:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1805:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   else
1806:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1807:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(STM32L4P5xx) || defined(STM32L4Q5xx) || \
1808:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     defined(STM32L4R5xx) || defined(STM32L4R7xx) || defined(STM32L4R9xx) || defined(STM32L4S5xx) ||
1809:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if(msirange >= RCC_MSIRANGE_8)
1810:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
ARM GAS  /tmp/ccwaNkAs.s 			page 84


1811:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* MSI >= 16Mhz */
1812:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       latency = FLASH_LATENCY_2; /* 2WS */
1813:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
1814:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     else
1815:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
1816:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       if(msirange == RCC_MSIRANGE_7)
1817:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
1818:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* MSI 8Mhz */
1819:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         latency = FLASH_LATENCY_1; /* 1WS */
1820:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
1821:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* else MSI < 8Mhz default FLASH_LATENCY_0 0WS */
1822:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
1823:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #else
1824:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if(msirange > RCC_MSIRANGE_8)
 2895              		.loc 1 1824 7
 2896 006a 7B68     		ldr	r3, [r7, #4]
 2897 006c 802B     		cmp	r3, #128
 2898 006e 02D9     		bls	.L189
1825:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
1826:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* MSI > 16Mhz */
1827:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       latency = FLASH_LATENCY_3; /* 3WS */
 2899              		.loc 1 1827 15
 2900 0070 0323     		movs	r3, #3
 2901 0072 3B61     		str	r3, [r7, #16]
 2902 0074 0AE0     		b	.L187
 2903              	.L189:
1828:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
1829:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     else
1830:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
1831:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       if(msirange == RCC_MSIRANGE_8)
 2904              		.loc 1 1831 9
 2905 0076 7B68     		ldr	r3, [r7, #4]
 2906 0078 802B     		cmp	r3, #128
 2907 007a 02D1     		bne	.L190
1832:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
1833:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* MSI 16Mhz */
1834:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         latency = FLASH_LATENCY_2; /* 2WS */
 2908              		.loc 1 1834 17
 2909 007c 0223     		movs	r3, #2
 2910 007e 3B61     		str	r3, [r7, #16]
 2911 0080 04E0     		b	.L187
 2912              	.L190:
1835:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
1836:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       else if(msirange == RCC_MSIRANGE_7)
 2913              		.loc 1 1836 14
 2914 0082 7B68     		ldr	r3, [r7, #4]
 2915 0084 702B     		cmp	r3, #112
 2916 0086 01D1     		bne	.L187
1837:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
1838:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* MSI 8Mhz */
1839:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         latency = FLASH_LATENCY_1; /* 1WS */
 2917              		.loc 1 1839 17
 2918 0088 0123     		movs	r3, #1
 2919 008a 3B61     		str	r3, [r7, #16]
 2920              	.L187:
1840:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
1841:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* else MSI < 8Mhz default FLASH_LATENCY_0 0WS */
ARM GAS  /tmp/ccwaNkAs.s 			page 85


1842:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
1843:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif
1844:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1845:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   __HAL_FLASH_SET_LATENCY(latency);
 2921              		.loc 1 1846 3
 2922 008c 0B4B     		ldr	r3, .L193+4
 2923 008e 1B68     		ldr	r3, [r3]
 2924 0090 23F00702 		bic	r2, r3, #7
 2925 0094 0949     		ldr	r1, .L193+4
 2926 0096 3B69     		ldr	r3, [r7, #16]
 2927 0098 1343     		orrs	r3, r3, r2
 2928 009a 0B60     		str	r3, [r1]
1847:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1848:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Check that the new number of wait states is taken into account to access the Flash
1849:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****      memory by reading the FLASH_ACR register */
1850:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(__HAL_FLASH_GET_LATENCY() != latency)
 2929              		.loc 1 1850 6
 2930 009c 074B     		ldr	r3, .L193+4
 2931 009e 1B68     		ldr	r3, [r3]
 2932 00a0 03F00703 		and	r3, r3, #7
 2933              		.loc 1 1850 5
 2934 00a4 3A69     		ldr	r2, [r7, #16]
 2935 00a6 9A42     		cmp	r2, r3
 2936 00a8 01D0     		beq	.L191
1851:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1852:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     return HAL_ERROR;
 2937              		.loc 1 1852 12
 2938 00aa 0123     		movs	r3, #1
 2939 00ac 00E0     		b	.L192
 2940              	.L191:
1853:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1854:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1855:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   return HAL_OK;
 2941              		.loc 1 1855 10
 2942 00ae 0023     		movs	r3, #0
 2943              	.L192:
1856:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** }
 2944              		.loc 1 1856 1
 2945 00b0 1846     		mov	r0, r3
 2946 00b2 1837     		adds	r7, r7, #24
 2947              	.LCFI59:
 2948              		.cfi_def_cfa_offset 8
 2949 00b4 BD46     		mov	sp, r7
 2950              	.LCFI60:
 2951              		.cfi_def_cfa_register 13
 2952              		@ sp needed
 2953 00b6 80BD     		pop	{r7, pc}
 2954              	.L194:
 2955              		.align	2
 2956              	.L193:
 2957 00b8 00100240 		.word	1073876992
 2958 00bc 00200240 		.word	1073881088
 2959              		.cfi_endproc
 2960              	.LFE143:
 2962              		.text
 2963              	.Letext0:
ARM GAS  /tmp/ccwaNkAs.s 			page 86


 2964              		.file 2 "/home/ilian/opt/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/include/machine/_default
 2965              		.file 3 "/home/ilian/opt/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/include/sys/_stdint.h"
 2966              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 2967              		.file 5 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/system_stm32l4xx.h"
 2968              		.file 6 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l433xx.h"
 2969              		.file 7 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l4xx.h"
 2970              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 2971              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc.h"
 2972              		.file 10 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_gpio.h"
 2973              		.file 11 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_flash.h"
 2974              		.file 12 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
ARM GAS  /tmp/ccwaNkAs.s 			page 87


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32l4xx_hal_rcc.c
     /tmp/ccwaNkAs.s:18     .text.HAL_RCC_DeInit:0000000000000000 $t
     /tmp/ccwaNkAs.s:26     .text.HAL_RCC_DeInit:0000000000000000 HAL_RCC_DeInit
     /tmp/ccwaNkAs.s:220    .text.HAL_RCC_DeInit:000000000000011c $d
     /tmp/ccwaNkAs.s:229    .text.HAL_RCC_OscConfig:0000000000000000 $t
     /tmp/ccwaNkAs.s:236    .text.HAL_RCC_OscConfig:0000000000000000 HAL_RCC_OscConfig
     /tmp/ccwaNkAs.s:2817   .text.RCC_SetFlashLatencyFromMSIRange:0000000000000000 RCC_SetFlashLatencyFromMSIRange
     /tmp/ccwaNkAs.s:1953   .text.HAL_RCC_GetSysClockFreq:0000000000000000 HAL_RCC_GetSysClockFreq
     /tmp/ccwaNkAs.s:646    .text.HAL_RCC_OscConfig:0000000000000298 $d
     /tmp/ccwaNkAs.s:652    .text.HAL_RCC_OscConfig:00000000000002a8 $t
     /tmp/ccwaNkAs.s:1095   .text.HAL_RCC_OscConfig:0000000000000578 $d
     /tmp/ccwaNkAs.s:1099   .text.HAL_RCC_OscConfig:0000000000000580 $t
     /tmp/ccwaNkAs.s:1530   .text.HAL_RCC_OscConfig:000000000000082c $d
     /tmp/ccwaNkAs.s:1534   .text.HAL_RCC_OscConfig:0000000000000834 $t
     /tmp/ccwaNkAs.s:1550   .text.HAL_RCC_ClockConfig:0000000000000000 $t
     /tmp/ccwaNkAs.s:1557   .text.HAL_RCC_ClockConfig:0000000000000000 HAL_RCC_ClockConfig
     /tmp/ccwaNkAs.s:1849   .text.HAL_RCC_ClockConfig:00000000000001b0 $d
     /tmp/ccwaNkAs.s:1858   .text.HAL_RCC_MCOConfig:0000000000000000 $t
     /tmp/ccwaNkAs.s:1865   .text.HAL_RCC_MCOConfig:0000000000000000 HAL_RCC_MCOConfig
     /tmp/ccwaNkAs.s:1941   .text.HAL_RCC_MCOConfig:0000000000000064 $d
     /tmp/ccwaNkAs.s:1946   .text.HAL_RCC_GetSysClockFreq:0000000000000000 $t
     /tmp/ccwaNkAs.s:2154   .text.HAL_RCC_GetSysClockFreq:0000000000000108 $d
     /tmp/ccwaNkAs.s:2162   .text.HAL_RCC_GetHCLKFreq:0000000000000000 $t
     /tmp/ccwaNkAs.s:2169   .text.HAL_RCC_GetHCLKFreq:0000000000000000 HAL_RCC_GetHCLKFreq
     /tmp/ccwaNkAs.s:2200   .text.HAL_RCC_GetHCLKFreq:0000000000000014 $d
     /tmp/ccwaNkAs.s:2205   .text.HAL_RCC_GetPCLK1Freq:0000000000000000 $t
     /tmp/ccwaNkAs.s:2212   .text.HAL_RCC_GetPCLK1Freq:0000000000000000 HAL_RCC_GetPCLK1Freq
     /tmp/ccwaNkAs.s:2248   .text.HAL_RCC_GetPCLK1Freq:0000000000000024 $d
     /tmp/ccwaNkAs.s:2254   .text.HAL_RCC_GetPCLK2Freq:0000000000000000 $t
     /tmp/ccwaNkAs.s:2261   .text.HAL_RCC_GetPCLK2Freq:0000000000000000 HAL_RCC_GetPCLK2Freq
     /tmp/ccwaNkAs.s:2297   .text.HAL_RCC_GetPCLK2Freq:0000000000000024 $d
     /tmp/ccwaNkAs.s:2303   .text.HAL_RCC_GetOscConfig:0000000000000000 $t
     /tmp/ccwaNkAs.s:2310   .text.HAL_RCC_GetOscConfig:0000000000000000 HAL_RCC_GetOscConfig
     /tmp/ccwaNkAs.s:2588   .text.HAL_RCC_GetOscConfig:0000000000000190 $d
     /tmp/ccwaNkAs.s:2593   .text.HAL_RCC_GetClockConfig:0000000000000000 $t
     /tmp/ccwaNkAs.s:2600   .text.HAL_RCC_GetClockConfig:0000000000000000 HAL_RCC_GetClockConfig
     /tmp/ccwaNkAs.s:2677   .text.HAL_RCC_GetClockConfig:000000000000005c $d
     /tmp/ccwaNkAs.s:2683   .text.HAL_RCC_EnableCSS:0000000000000000 $t
     /tmp/ccwaNkAs.s:2690   .text.HAL_RCC_EnableCSS:0000000000000000 HAL_RCC_EnableCSS
     /tmp/ccwaNkAs.s:2724   .text.HAL_RCC_EnableCSS:000000000000001c $d
     /tmp/ccwaNkAs.s:2729   .text.HAL_RCC_NMI_IRQHandler:0000000000000000 $t
     /tmp/ccwaNkAs.s:2736   .text.HAL_RCC_NMI_IRQHandler:0000000000000000 HAL_RCC_NMI_IRQHandler
     /tmp/ccwaNkAs.s:2782   .text.HAL_RCC_CSSCallback:0000000000000000 HAL_RCC_CSSCallback
     /tmp/ccwaNkAs.s:2770   .text.HAL_RCC_NMI_IRQHandler:0000000000000024 $d
     /tmp/ccwaNkAs.s:2775   .text.HAL_RCC_CSSCallback:0000000000000000 $t
     /tmp/ccwaNkAs.s:2811   .text.RCC_SetFlashLatencyFromMSIRange:0000000000000000 $t
     /tmp/ccwaNkAs.s:2957   .text.RCC_SetFlashLatencyFromMSIRange:00000000000000b8 $d

UNDEFINED SYMBOLS
HAL_GetTick
HAL_InitTick
SystemCoreClock
uwTickPrio
AHBPrescTable
HAL_GPIO_Init
MSIRangeTable
ARM GAS  /tmp/ccwaNkAs.s 			page 88


APBPrescTable
HAL_PWREx_GetVoltageRange
