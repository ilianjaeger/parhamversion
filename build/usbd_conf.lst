ARM GAS  /tmp/cc3rNxot.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"usbd_conf.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.comm	hpcd_USB_FS,628,4
  18              		.section	.text.HAL_PCD_MspInit,"ax",%progbits
  19              		.align	1
  20              		.global	HAL_PCD_MspInit
  21              		.arch armv7e-m
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  25              		.fpu fpv4-sp-d16
  27              	HAL_PCD_MspInit:
  28              	.LFB133:
  29              		.file 1 "Src/usbd_conf.c"
   1:Src/usbd_conf.c **** /* USER CODE BEGIN Header */
   2:Src/usbd_conf.c **** /**
   3:Src/usbd_conf.c ****   ******************************************************************************
   4:Src/usbd_conf.c ****   * @file           : usbd_conf.c
   5:Src/usbd_conf.c ****   * @version        : v2.0_Cube
   6:Src/usbd_conf.c ****   * @brief          : This file implements the board support package for the USB device library
   7:Src/usbd_conf.c ****   ******************************************************************************
   8:Src/usbd_conf.c ****   * @attention
   9:Src/usbd_conf.c ****   *
  10:Src/usbd_conf.c ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  11:Src/usbd_conf.c ****   * All rights reserved.</center></h2>
  12:Src/usbd_conf.c ****   *
  13:Src/usbd_conf.c ****   * This software component is licensed by ST under Ultimate Liberty license
  14:Src/usbd_conf.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  15:Src/usbd_conf.c ****   * the License. You may obtain a copy of the License at:
  16:Src/usbd_conf.c ****   *                             www.st.com/SLA0044
  17:Src/usbd_conf.c ****   *
  18:Src/usbd_conf.c ****   ******************************************************************************
  19:Src/usbd_conf.c ****   */
  20:Src/usbd_conf.c **** /* USER CODE END Header */
  21:Src/usbd_conf.c **** 
  22:Src/usbd_conf.c **** /* Includes ------------------------------------------------------------------*/
  23:Src/usbd_conf.c **** #include "stm32l4xx.h"
  24:Src/usbd_conf.c **** #include "stm32l4xx_hal.h"
  25:Src/usbd_conf.c **** #include "usbd_def.h"
  26:Src/usbd_conf.c **** #include "usbd_core.h"
  27:Src/usbd_conf.c **** #include "usbd_cdc.h"
  28:Src/usbd_conf.c **** 
  29:Src/usbd_conf.c **** /* USER CODE BEGIN Includes */
ARM GAS  /tmp/cc3rNxot.s 			page 2


  30:Src/usbd_conf.c **** 
  31:Src/usbd_conf.c **** /* USER CODE END Includes */
  32:Src/usbd_conf.c **** 
  33:Src/usbd_conf.c **** /* Private typedef -----------------------------------------------------------*/
  34:Src/usbd_conf.c **** /* Private define ------------------------------------------------------------*/
  35:Src/usbd_conf.c **** /* Private macro -------------------------------------------------------------*/
  36:Src/usbd_conf.c **** 
  37:Src/usbd_conf.c **** /* USER CODE BEGIN PV */
  38:Src/usbd_conf.c **** /* Private variables ---------------------------------------------------------*/
  39:Src/usbd_conf.c **** 
  40:Src/usbd_conf.c **** /* USER CODE END PV */
  41:Src/usbd_conf.c **** 
  42:Src/usbd_conf.c **** PCD_HandleTypeDef hpcd_USB_FS;
  43:Src/usbd_conf.c **** void Error_Handler(void);
  44:Src/usbd_conf.c **** 
  45:Src/usbd_conf.c **** /* USER CODE BEGIN 0 */
  46:Src/usbd_conf.c **** 
  47:Src/usbd_conf.c **** /* USER CODE END 0 */
  48:Src/usbd_conf.c **** 
  49:Src/usbd_conf.c **** /* Exported function prototypes ----------------------------------------------*/
  50:Src/usbd_conf.c **** extern USBD_StatusTypeDef USBD_LL_BatteryCharging(USBD_HandleTypeDef *pdev);
  51:Src/usbd_conf.c **** 
  52:Src/usbd_conf.c **** /* USER CODE BEGIN PFP */
  53:Src/usbd_conf.c **** /* Private function prototypes -----------------------------------------------*/
  54:Src/usbd_conf.c **** 
  55:Src/usbd_conf.c **** /* USER CODE END PFP */
  56:Src/usbd_conf.c **** 
  57:Src/usbd_conf.c **** /* Private functions ---------------------------------------------------------*/
  58:Src/usbd_conf.c **** 
  59:Src/usbd_conf.c **** /* USER CODE BEGIN 1 */
  60:Src/usbd_conf.c **** static void SystemClockConfig_Resume(void);
  61:Src/usbd_conf.c **** 
  62:Src/usbd_conf.c **** /* USER CODE END 1 */
  63:Src/usbd_conf.c **** extern void SystemClock_Config(void);
  64:Src/usbd_conf.c **** 
  65:Src/usbd_conf.c **** /*******************************************************************************
  66:Src/usbd_conf.c ****                        LL Driver Callbacks (PCD -> USB Device Library)
  67:Src/usbd_conf.c **** *******************************************************************************/
  68:Src/usbd_conf.c **** /* MSP Init */
  69:Src/usbd_conf.c **** 
  70:Src/usbd_conf.c **** void HAL_PCD_MspInit(PCD_HandleTypeDef* pcdHandle)
  71:Src/usbd_conf.c **** {
  30              		.loc 1 71 1
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 16
  33              		@ frame_needed = 1, uses_anonymous_args = 0
  34 0000 80B5     		push	{r7, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 8
  37              		.cfi_offset 7, -8
  38              		.cfi_offset 14, -4
  39 0002 84B0     		sub	sp, sp, #16
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 24
  42 0004 00AF     		add	r7, sp, #0
  43              	.LCFI2:
  44              		.cfi_def_cfa_register 7
ARM GAS  /tmp/cc3rNxot.s 			page 3


  45 0006 7860     		str	r0, [r7, #4]
  72:Src/usbd_conf.c ****   if(pcdHandle->Instance==USB)
  46              		.loc 1 72 15
  47 0008 7B68     		ldr	r3, [r7, #4]
  48 000a 1B68     		ldr	r3, [r3]
  49              		.loc 1 72 5
  50 000c 0D4A     		ldr	r2, .L4
  51 000e 9342     		cmp	r3, r2
  52 0010 13D1     		bne	.L3
  53              	.LBB2:
  73:Src/usbd_conf.c ****   {
  74:Src/usbd_conf.c ****   /* USER CODE BEGIN USB_MspInit 0 */
  75:Src/usbd_conf.c **** 
  76:Src/usbd_conf.c ****   /* USER CODE END USB_MspInit 0 */
  77:Src/usbd_conf.c ****     /* Peripheral clock enable */
  78:Src/usbd_conf.c ****     __HAL_RCC_USB_CLK_ENABLE();
  54              		.loc 1 78 5
  55 0012 0D4B     		ldr	r3, .L4+4
  56 0014 9B6D     		ldr	r3, [r3, #88]
  57 0016 0C4A     		ldr	r2, .L4+4
  58 0018 43F08063 		orr	r3, r3, #67108864
  59 001c 9365     		str	r3, [r2, #88]
  60 001e 0A4B     		ldr	r3, .L4+4
  61 0020 9B6D     		ldr	r3, [r3, #88]
  62 0022 03F08063 		and	r3, r3, #67108864
  63 0026 FB60     		str	r3, [r7, #12]
  64 0028 FB68     		ldr	r3, [r7, #12]
  65              	.LBE2:
  79:Src/usbd_conf.c **** 
  80:Src/usbd_conf.c ****     /* Peripheral interrupt init */
  81:Src/usbd_conf.c ****     HAL_NVIC_SetPriority(USB_IRQn, 0, 0);
  66              		.loc 1 81 5
  67 002a 0022     		movs	r2, #0
  68 002c 0021     		movs	r1, #0
  69 002e 4320     		movs	r0, #67
  70 0030 FFF7FEFF 		bl	HAL_NVIC_SetPriority
  82:Src/usbd_conf.c ****     HAL_NVIC_EnableIRQ(USB_IRQn);
  71              		.loc 1 82 5
  72 0034 4320     		movs	r0, #67
  73 0036 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
  74              	.L3:
  83:Src/usbd_conf.c ****   /* USER CODE BEGIN USB_MspInit 1 */
  84:Src/usbd_conf.c **** 
  85:Src/usbd_conf.c ****   /* USER CODE END USB_MspInit 1 */
  86:Src/usbd_conf.c ****   }
  87:Src/usbd_conf.c **** }
  75              		.loc 1 87 1
  76 003a 00BF     		nop
  77 003c 1037     		adds	r7, r7, #16
  78              	.LCFI3:
  79              		.cfi_def_cfa_offset 8
  80 003e BD46     		mov	sp, r7
  81              	.LCFI4:
  82              		.cfi_def_cfa_register 13
  83              		@ sp needed
  84 0040 80BD     		pop	{r7, pc}
  85              	.L5:
ARM GAS  /tmp/cc3rNxot.s 			page 4


  86 0042 00BF     		.align	2
  87              	.L4:
  88 0044 00680040 		.word	1073768448
  89 0048 00100240 		.word	1073876992
  90              		.cfi_endproc
  91              	.LFE133:
  93              		.section	.text.HAL_PCD_MspDeInit,"ax",%progbits
  94              		.align	1
  95              		.global	HAL_PCD_MspDeInit
  96              		.syntax unified
  97              		.thumb
  98              		.thumb_func
  99              		.fpu fpv4-sp-d16
 101              	HAL_PCD_MspDeInit:
 102              	.LFB134:
  88:Src/usbd_conf.c **** 
  89:Src/usbd_conf.c **** void HAL_PCD_MspDeInit(PCD_HandleTypeDef* pcdHandle)
  90:Src/usbd_conf.c **** {
 103              		.loc 1 90 1
 104              		.cfi_startproc
 105              		@ args = 0, pretend = 0, frame = 8
 106              		@ frame_needed = 1, uses_anonymous_args = 0
 107 0000 80B5     		push	{r7, lr}
 108              	.LCFI5:
 109              		.cfi_def_cfa_offset 8
 110              		.cfi_offset 7, -8
 111              		.cfi_offset 14, -4
 112 0002 82B0     		sub	sp, sp, #8
 113              	.LCFI6:
 114              		.cfi_def_cfa_offset 16
 115 0004 00AF     		add	r7, sp, #0
 116              	.LCFI7:
 117              		.cfi_def_cfa_register 7
 118 0006 7860     		str	r0, [r7, #4]
  91:Src/usbd_conf.c ****   if(pcdHandle->Instance==USB)
 119              		.loc 1 91 15
 120 0008 7B68     		ldr	r3, [r7, #4]
 121 000a 1B68     		ldr	r3, [r3]
 122              		.loc 1 91 5
 123 000c 074A     		ldr	r2, .L9
 124 000e 9342     		cmp	r3, r2
 125 0010 08D1     		bne	.L8
  92:Src/usbd_conf.c ****   {
  93:Src/usbd_conf.c ****   /* USER CODE BEGIN USB_MspDeInit 0 */
  94:Src/usbd_conf.c **** 
  95:Src/usbd_conf.c ****   /* USER CODE END USB_MspDeInit 0 */
  96:Src/usbd_conf.c ****     /* Peripheral clock disable */
  97:Src/usbd_conf.c ****     __HAL_RCC_USB_CLK_DISABLE();
 126              		.loc 1 97 5
 127 0012 074B     		ldr	r3, .L9+4
 128 0014 9B6D     		ldr	r3, [r3, #88]
 129 0016 064A     		ldr	r2, .L9+4
 130 0018 23F08063 		bic	r3, r3, #67108864
 131 001c 9365     		str	r3, [r2, #88]
  98:Src/usbd_conf.c **** 
  99:Src/usbd_conf.c ****     /* Peripheral interrupt Deinit*/
 100:Src/usbd_conf.c ****     HAL_NVIC_DisableIRQ(USB_IRQn);
ARM GAS  /tmp/cc3rNxot.s 			page 5


 132              		.loc 1 100 5
 133 001e 4320     		movs	r0, #67
 134 0020 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 135              	.L8:
 101:Src/usbd_conf.c **** 
 102:Src/usbd_conf.c ****   /* USER CODE BEGIN USB_MspDeInit 1 */
 103:Src/usbd_conf.c **** 
 104:Src/usbd_conf.c ****   /* USER CODE END USB_MspDeInit 1 */
 105:Src/usbd_conf.c ****   }
 106:Src/usbd_conf.c **** }
 136              		.loc 1 106 1
 137 0024 00BF     		nop
 138 0026 0837     		adds	r7, r7, #8
 139              	.LCFI8:
 140              		.cfi_def_cfa_offset 8
 141 0028 BD46     		mov	sp, r7
 142              	.LCFI9:
 143              		.cfi_def_cfa_register 13
 144              		@ sp needed
 145 002a 80BD     		pop	{r7, pc}
 146              	.L10:
 147              		.align	2
 148              	.L9:
 149 002c 00680040 		.word	1073768448
 150 0030 00100240 		.word	1073876992
 151              		.cfi_endproc
 152              	.LFE134:
 154              		.section	.text.HAL_PCD_SetupStageCallback,"ax",%progbits
 155              		.align	1
 156              		.global	HAL_PCD_SetupStageCallback
 157              		.syntax unified
 158              		.thumb
 159              		.thumb_func
 160              		.fpu fpv4-sp-d16
 162              	HAL_PCD_SetupStageCallback:
 163              	.LFB135:
 107:Src/usbd_conf.c **** 
 108:Src/usbd_conf.c **** /**
 109:Src/usbd_conf.c ****   * @brief  Setup stage callback
 110:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 111:Src/usbd_conf.c ****   * @retval None
 112:Src/usbd_conf.c ****   */
 113:Src/usbd_conf.c **** #if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
 114:Src/usbd_conf.c **** static void PCD_SetupStageCallback(PCD_HandleTypeDef *hpcd)
 115:Src/usbd_conf.c **** #else
 116:Src/usbd_conf.c **** void HAL_PCD_SetupStageCallback(PCD_HandleTypeDef *hpcd)
 117:Src/usbd_conf.c **** #endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
 118:Src/usbd_conf.c **** {
 164              		.loc 1 118 1
 165              		.cfi_startproc
 166              		@ args = 0, pretend = 0, frame = 8
 167              		@ frame_needed = 1, uses_anonymous_args = 0
 168 0000 80B5     		push	{r7, lr}
 169              	.LCFI10:
 170              		.cfi_def_cfa_offset 8
 171              		.cfi_offset 7, -8
 172              		.cfi_offset 14, -4
ARM GAS  /tmp/cc3rNxot.s 			page 6


 173 0002 82B0     		sub	sp, sp, #8
 174              	.LCFI11:
 175              		.cfi_def_cfa_offset 16
 176 0004 00AF     		add	r7, sp, #0
 177              	.LCFI12:
 178              		.cfi_def_cfa_register 7
 179 0006 7860     		str	r0, [r7, #4]
 119:Src/usbd_conf.c ****   USBD_LL_SetupStage((USBD_HandleTypeDef*)hpcd->pData, (uint8_t *)hpcd->Setup);
 180              		.loc 1 119 47
 181 0008 7B68     		ldr	r3, [r7, #4]
 182 000a D3F87022 		ldr	r2, [r3, #624]
 183              		.loc 1 119 67
 184 000e 7B68     		ldr	r3, [r7, #4]
 185 0010 03F50C73 		add	r3, r3, #560
 186              		.loc 1 119 3
 187 0014 1946     		mov	r1, r3
 188 0016 1046     		mov	r0, r2
 189 0018 FFF7FEFF 		bl	USBD_LL_SetupStage
 120:Src/usbd_conf.c **** }
 190              		.loc 1 120 1
 191 001c 00BF     		nop
 192 001e 0837     		adds	r7, r7, #8
 193              	.LCFI13:
 194              		.cfi_def_cfa_offset 8
 195 0020 BD46     		mov	sp, r7
 196              	.LCFI14:
 197              		.cfi_def_cfa_register 13
 198              		@ sp needed
 199 0022 80BD     		pop	{r7, pc}
 200              		.cfi_endproc
 201              	.LFE135:
 203              		.section	.text.HAL_PCD_DataOutStageCallback,"ax",%progbits
 204              		.align	1
 205              		.global	HAL_PCD_DataOutStageCallback
 206              		.syntax unified
 207              		.thumb
 208              		.thumb_func
 209              		.fpu fpv4-sp-d16
 211              	HAL_PCD_DataOutStageCallback:
 212              	.LFB136:
 121:Src/usbd_conf.c **** 
 122:Src/usbd_conf.c **** /**
 123:Src/usbd_conf.c ****   * @brief  Data Out stage callback.
 124:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 125:Src/usbd_conf.c ****   * @param  epnum: Endpoint number
 126:Src/usbd_conf.c ****   * @retval None
 127:Src/usbd_conf.c ****   */
 128:Src/usbd_conf.c **** #if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
 129:Src/usbd_conf.c **** static void PCD_DataOutStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
 130:Src/usbd_conf.c **** #else
 131:Src/usbd_conf.c **** void HAL_PCD_DataOutStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
 132:Src/usbd_conf.c **** #endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
 133:Src/usbd_conf.c **** {
 213              		.loc 1 133 1
 214              		.cfi_startproc
 215              		@ args = 0, pretend = 0, frame = 8
 216              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/cc3rNxot.s 			page 7


 217 0000 80B5     		push	{r7, lr}
 218              	.LCFI15:
 219              		.cfi_def_cfa_offset 8
 220              		.cfi_offset 7, -8
 221              		.cfi_offset 14, -4
 222 0002 82B0     		sub	sp, sp, #8
 223              	.LCFI16:
 224              		.cfi_def_cfa_offset 16
 225 0004 00AF     		add	r7, sp, #0
 226              	.LCFI17:
 227              		.cfi_def_cfa_register 7
 228 0006 7860     		str	r0, [r7, #4]
 229 0008 0B46     		mov	r3, r1
 230 000a FB70     		strb	r3, [r7, #3]
 134:Src/usbd_conf.c ****   USBD_LL_DataOutStage((USBD_HandleTypeDef*)hpcd->pData, epnum, hpcd->OUT_ep[epnum].xfer_buff);
 231              		.loc 1 134 49
 232 000c 7B68     		ldr	r3, [r7, #4]
 233 000e D3F87002 		ldr	r0, [r3, #624]
 234              		.loc 1 134 3
 235 0012 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 236 0014 7A68     		ldr	r2, [r7, #4]
 237 0016 5B01     		lsls	r3, r3, #5
 238 0018 1344     		add	r3, r3, r2
 239 001a 03F59E73 		add	r3, r3, #316
 240 001e 1A68     		ldr	r2, [r3]
 241 0020 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 242 0022 1946     		mov	r1, r3
 243 0024 FFF7FEFF 		bl	USBD_LL_DataOutStage
 135:Src/usbd_conf.c **** }
 244              		.loc 1 135 1
 245 0028 00BF     		nop
 246 002a 0837     		adds	r7, r7, #8
 247              	.LCFI18:
 248              		.cfi_def_cfa_offset 8
 249 002c BD46     		mov	sp, r7
 250              	.LCFI19:
 251              		.cfi_def_cfa_register 13
 252              		@ sp needed
 253 002e 80BD     		pop	{r7, pc}
 254              		.cfi_endproc
 255              	.LFE136:
 257              		.section	.text.HAL_PCD_DataInStageCallback,"ax",%progbits
 258              		.align	1
 259              		.global	HAL_PCD_DataInStageCallback
 260              		.syntax unified
 261              		.thumb
 262              		.thumb_func
 263              		.fpu fpv4-sp-d16
 265              	HAL_PCD_DataInStageCallback:
 266              	.LFB137:
 136:Src/usbd_conf.c **** 
 137:Src/usbd_conf.c **** /**
 138:Src/usbd_conf.c ****   * @brief  Data In stage callback.
 139:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 140:Src/usbd_conf.c ****   * @param  epnum: Endpoint number
 141:Src/usbd_conf.c ****   * @retval None
 142:Src/usbd_conf.c ****   */
ARM GAS  /tmp/cc3rNxot.s 			page 8


 143:Src/usbd_conf.c **** #if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
 144:Src/usbd_conf.c **** static void PCD_DataInStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
 145:Src/usbd_conf.c **** #else
 146:Src/usbd_conf.c **** void HAL_PCD_DataInStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
 147:Src/usbd_conf.c **** #endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
 148:Src/usbd_conf.c **** {
 267              		.loc 1 148 1
 268              		.cfi_startproc
 269              		@ args = 0, pretend = 0, frame = 8
 270              		@ frame_needed = 1, uses_anonymous_args = 0
 271 0000 80B5     		push	{r7, lr}
 272              	.LCFI20:
 273              		.cfi_def_cfa_offset 8
 274              		.cfi_offset 7, -8
 275              		.cfi_offset 14, -4
 276 0002 82B0     		sub	sp, sp, #8
 277              	.LCFI21:
 278              		.cfi_def_cfa_offset 16
 279 0004 00AF     		add	r7, sp, #0
 280              	.LCFI22:
 281              		.cfi_def_cfa_register 7
 282 0006 7860     		str	r0, [r7, #4]
 283 0008 0B46     		mov	r3, r1
 284 000a FB70     		strb	r3, [r7, #3]
 149:Src/usbd_conf.c ****   USBD_LL_DataInStage((USBD_HandleTypeDef*)hpcd->pData, epnum, hpcd->IN_ep[epnum].xfer_buff);
 285              		.loc 1 149 48
 286 000c 7B68     		ldr	r3, [r7, #4]
 287 000e D3F87002 		ldr	r0, [r3, #624]
 288              		.loc 1 149 3
 289 0012 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 290 0014 7A68     		ldr	r2, [r7, #4]
 291 0016 5B01     		lsls	r3, r3, #5
 292 0018 1344     		add	r3, r3, r2
 293 001a 3C33     		adds	r3, r3, #60
 294 001c 1A68     		ldr	r2, [r3]
 295 001e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 296 0020 1946     		mov	r1, r3
 297 0022 FFF7FEFF 		bl	USBD_LL_DataInStage
 150:Src/usbd_conf.c **** }
 298              		.loc 1 150 1
 299 0026 00BF     		nop
 300 0028 0837     		adds	r7, r7, #8
 301              	.LCFI23:
 302              		.cfi_def_cfa_offset 8
 303 002a BD46     		mov	sp, r7
 304              	.LCFI24:
 305              		.cfi_def_cfa_register 13
 306              		@ sp needed
 307 002c 80BD     		pop	{r7, pc}
 308              		.cfi_endproc
 309              	.LFE137:
 311              		.section	.text.HAL_PCD_SOFCallback,"ax",%progbits
 312              		.align	1
 313              		.global	HAL_PCD_SOFCallback
 314              		.syntax unified
 315              		.thumb
 316              		.thumb_func
ARM GAS  /tmp/cc3rNxot.s 			page 9


 317              		.fpu fpv4-sp-d16
 319              	HAL_PCD_SOFCallback:
 320              	.LFB138:
 151:Src/usbd_conf.c **** 
 152:Src/usbd_conf.c **** /**
 153:Src/usbd_conf.c ****   * @brief  SOF callback.
 154:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 155:Src/usbd_conf.c ****   * @retval None
 156:Src/usbd_conf.c ****   */
 157:Src/usbd_conf.c **** #if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
 158:Src/usbd_conf.c **** static void PCD_SOFCallback(PCD_HandleTypeDef *hpcd)
 159:Src/usbd_conf.c **** #else
 160:Src/usbd_conf.c **** void HAL_PCD_SOFCallback(PCD_HandleTypeDef *hpcd)
 161:Src/usbd_conf.c **** #endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
 162:Src/usbd_conf.c **** {
 321              		.loc 1 162 1
 322              		.cfi_startproc
 323              		@ args = 0, pretend = 0, frame = 8
 324              		@ frame_needed = 1, uses_anonymous_args = 0
 325 0000 80B5     		push	{r7, lr}
 326              	.LCFI25:
 327              		.cfi_def_cfa_offset 8
 328              		.cfi_offset 7, -8
 329              		.cfi_offset 14, -4
 330 0002 82B0     		sub	sp, sp, #8
 331              	.LCFI26:
 332              		.cfi_def_cfa_offset 16
 333 0004 00AF     		add	r7, sp, #0
 334              	.LCFI27:
 335              		.cfi_def_cfa_register 7
 336 0006 7860     		str	r0, [r7, #4]
 163:Src/usbd_conf.c ****   USBD_LL_SOF((USBD_HandleTypeDef*)hpcd->pData);
 337              		.loc 1 163 40
 338 0008 7B68     		ldr	r3, [r7, #4]
 339 000a D3F87032 		ldr	r3, [r3, #624]
 340              		.loc 1 163 3
 341 000e 1846     		mov	r0, r3
 342 0010 FFF7FEFF 		bl	USBD_LL_SOF
 164:Src/usbd_conf.c **** }
 343              		.loc 1 164 1
 344 0014 00BF     		nop
 345 0016 0837     		adds	r7, r7, #8
 346              	.LCFI28:
 347              		.cfi_def_cfa_offset 8
 348 0018 BD46     		mov	sp, r7
 349              	.LCFI29:
 350              		.cfi_def_cfa_register 13
 351              		@ sp needed
 352 001a 80BD     		pop	{r7, pc}
 353              		.cfi_endproc
 354              	.LFE138:
 356              		.section	.text.HAL_PCD_ResetCallback,"ax",%progbits
 357              		.align	1
 358              		.global	HAL_PCD_ResetCallback
 359              		.syntax unified
 360              		.thumb
 361              		.thumb_func
ARM GAS  /tmp/cc3rNxot.s 			page 10


 362              		.fpu fpv4-sp-d16
 364              	HAL_PCD_ResetCallback:
 365              	.LFB139:
 165:Src/usbd_conf.c **** 
 166:Src/usbd_conf.c **** /**
 167:Src/usbd_conf.c ****   * @brief  Reset callback.
 168:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 169:Src/usbd_conf.c ****   * @retval None
 170:Src/usbd_conf.c ****   */
 171:Src/usbd_conf.c **** #if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
 172:Src/usbd_conf.c **** static void PCD_ResetCallback(PCD_HandleTypeDef *hpcd)
 173:Src/usbd_conf.c **** #else
 174:Src/usbd_conf.c **** void HAL_PCD_ResetCallback(PCD_HandleTypeDef *hpcd)
 175:Src/usbd_conf.c **** #endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
 176:Src/usbd_conf.c **** { 
 366              		.loc 1 176 1
 367              		.cfi_startproc
 368              		@ args = 0, pretend = 0, frame = 16
 369              		@ frame_needed = 1, uses_anonymous_args = 0
 370 0000 80B5     		push	{r7, lr}
 371              	.LCFI30:
 372              		.cfi_def_cfa_offset 8
 373              		.cfi_offset 7, -8
 374              		.cfi_offset 14, -4
 375 0002 84B0     		sub	sp, sp, #16
 376              	.LCFI31:
 377              		.cfi_def_cfa_offset 24
 378 0004 00AF     		add	r7, sp, #0
 379              	.LCFI32:
 380              		.cfi_def_cfa_register 7
 381 0006 7860     		str	r0, [r7, #4]
 177:Src/usbd_conf.c ****   USBD_SpeedTypeDef speed = USBD_SPEED_FULL;
 382              		.loc 1 177 21
 383 0008 0123     		movs	r3, #1
 384 000a FB73     		strb	r3, [r7, #15]
 178:Src/usbd_conf.c **** 
 179:Src/usbd_conf.c ****   if ( hpcd->Init.speed != PCD_SPEED_FULL)
 385              		.loc 1 179 18
 386 000c 7B68     		ldr	r3, [r7, #4]
 387 000e 9B68     		ldr	r3, [r3, #8]
 388              		.loc 1 179 6
 389 0010 022B     		cmp	r3, #2
 390 0012 01D0     		beq	.L16
 180:Src/usbd_conf.c ****   {
 181:Src/usbd_conf.c ****     Error_Handler();
 391              		.loc 1 181 5
 392 0014 FFF7FEFF 		bl	Error_Handler
 393              	.L16:
 182:Src/usbd_conf.c ****   }
 183:Src/usbd_conf.c ****     /* Set Speed. */
 184:Src/usbd_conf.c ****   USBD_LL_SetSpeed((USBD_HandleTypeDef*)hpcd->pData, speed);
 394              		.loc 1 184 45
 395 0018 7B68     		ldr	r3, [r7, #4]
 396 001a D3F87032 		ldr	r3, [r3, #624]
 397              		.loc 1 184 3
 398 001e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 399 0020 1146     		mov	r1, r2
ARM GAS  /tmp/cc3rNxot.s 			page 11


 400 0022 1846     		mov	r0, r3
 401 0024 FFF7FEFF 		bl	USBD_LL_SetSpeed
 185:Src/usbd_conf.c **** 
 186:Src/usbd_conf.c ****   /* Reset Device. */
 187:Src/usbd_conf.c ****   USBD_LL_Reset((USBD_HandleTypeDef*)hpcd->pData);
 402              		.loc 1 187 42
 403 0028 7B68     		ldr	r3, [r7, #4]
 404 002a D3F87032 		ldr	r3, [r3, #624]
 405              		.loc 1 187 3
 406 002e 1846     		mov	r0, r3
 407 0030 FFF7FEFF 		bl	USBD_LL_Reset
 188:Src/usbd_conf.c **** }
 408              		.loc 1 188 1
 409 0034 00BF     		nop
 410 0036 1037     		adds	r7, r7, #16
 411              	.LCFI33:
 412              		.cfi_def_cfa_offset 8
 413 0038 BD46     		mov	sp, r7
 414              	.LCFI34:
 415              		.cfi_def_cfa_register 13
 416              		@ sp needed
 417 003a 80BD     		pop	{r7, pc}
 418              		.cfi_endproc
 419              	.LFE139:
 421              		.section	.text.HAL_PCD_SuspendCallback,"ax",%progbits
 422              		.align	1
 423              		.global	HAL_PCD_SuspendCallback
 424              		.syntax unified
 425              		.thumb
 426              		.thumb_func
 427              		.fpu fpv4-sp-d16
 429              	HAL_PCD_SuspendCallback:
 430              	.LFB140:
 189:Src/usbd_conf.c **** 
 190:Src/usbd_conf.c **** /**
 191:Src/usbd_conf.c ****   * @brief  Suspend callback.
 192:Src/usbd_conf.c ****   * When Low power mode is enabled the debug cannot be used (IAR, Keil doesn't support it)
 193:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 194:Src/usbd_conf.c ****   * @retval None
 195:Src/usbd_conf.c ****   */
 196:Src/usbd_conf.c **** #if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
 197:Src/usbd_conf.c **** static void PCD_SuspendCallback(PCD_HandleTypeDef *hpcd)
 198:Src/usbd_conf.c **** #else
 199:Src/usbd_conf.c **** void HAL_PCD_SuspendCallback(PCD_HandleTypeDef *hpcd)
 200:Src/usbd_conf.c **** #endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
 201:Src/usbd_conf.c **** {
 431              		.loc 1 201 1
 432              		.cfi_startproc
 433              		@ args = 0, pretend = 0, frame = 8
 434              		@ frame_needed = 1, uses_anonymous_args = 0
 435 0000 80B5     		push	{r7, lr}
 436              	.LCFI35:
 437              		.cfi_def_cfa_offset 8
 438              		.cfi_offset 7, -8
 439              		.cfi_offset 14, -4
 440 0002 82B0     		sub	sp, sp, #8
 441              	.LCFI36:
ARM GAS  /tmp/cc3rNxot.s 			page 12


 442              		.cfi_def_cfa_offset 16
 443 0004 00AF     		add	r7, sp, #0
 444              	.LCFI37:
 445              		.cfi_def_cfa_register 7
 446 0006 7860     		str	r0, [r7, #4]
 202:Src/usbd_conf.c ****   /* Inform USB library that core enters in suspend Mode. */
 203:Src/usbd_conf.c ****   USBD_LL_Suspend((USBD_HandleTypeDef*)hpcd->pData);
 447              		.loc 1 203 44
 448 0008 7B68     		ldr	r3, [r7, #4]
 449 000a D3F87032 		ldr	r3, [r3, #624]
 450              		.loc 1 203 3
 451 000e 1846     		mov	r0, r3
 452 0010 FFF7FEFF 		bl	USBD_LL_Suspend
 204:Src/usbd_conf.c ****   /* Enter in STOP mode. */
 205:Src/usbd_conf.c ****   /* USER CODE BEGIN 2 */
 206:Src/usbd_conf.c ****   if (hpcd->Init.low_power_enable)
 453              		.loc 1 206 17
 454 0014 7B68     		ldr	r3, [r7, #4]
 455 0016 9B69     		ldr	r3, [r3, #24]
 456              		.loc 1 206 6
 457 0018 002B     		cmp	r3, #0
 458 001a 05D0     		beq	.L19
 207:Src/usbd_conf.c ****   {
 208:Src/usbd_conf.c ****     /* Set SLEEPDEEP bit and SleepOnExit of Cortex System Control Register. */
 209:Src/usbd_conf.c ****     SCB->SCR |= (uint32_t)((uint32_t)(SCB_SCR_SLEEPDEEP_Msk | SCB_SCR_SLEEPONEXIT_Msk));
 459              		.loc 1 209 14
 460 001c 044B     		ldr	r3, .L20
 461 001e 1B69     		ldr	r3, [r3, #16]
 462 0020 034A     		ldr	r2, .L20
 463 0022 43F00603 		orr	r3, r3, #6
 464 0026 1361     		str	r3, [r2, #16]
 465              	.L19:
 210:Src/usbd_conf.c ****   }
 211:Src/usbd_conf.c ****   /* USER CODE END 2 */
 212:Src/usbd_conf.c **** }
 466              		.loc 1 212 1
 467 0028 00BF     		nop
 468 002a 0837     		adds	r7, r7, #8
 469              	.LCFI38:
 470              		.cfi_def_cfa_offset 8
 471 002c BD46     		mov	sp, r7
 472              	.LCFI39:
 473              		.cfi_def_cfa_register 13
 474              		@ sp needed
 475 002e 80BD     		pop	{r7, pc}
 476              	.L21:
 477              		.align	2
 478              	.L20:
 479 0030 00ED00E0 		.word	-536810240
 480              		.cfi_endproc
 481              	.LFE140:
 483              		.section	.text.HAL_PCD_ResumeCallback,"ax",%progbits
 484              		.align	1
 485              		.global	HAL_PCD_ResumeCallback
 486              		.syntax unified
 487              		.thumb
 488              		.thumb_func
ARM GAS  /tmp/cc3rNxot.s 			page 13


 489              		.fpu fpv4-sp-d16
 491              	HAL_PCD_ResumeCallback:
 492              	.LFB141:
 213:Src/usbd_conf.c **** 
 214:Src/usbd_conf.c **** /**
 215:Src/usbd_conf.c ****   * @brief  Resume callback.
 216:Src/usbd_conf.c ****   * When Low power mode is enabled the debug cannot be used (IAR, Keil doesn't support it)
 217:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 218:Src/usbd_conf.c ****   * @retval None
 219:Src/usbd_conf.c ****   */
 220:Src/usbd_conf.c **** #if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
 221:Src/usbd_conf.c **** static void PCD_ResumeCallback(PCD_HandleTypeDef *hpcd)
 222:Src/usbd_conf.c **** #else
 223:Src/usbd_conf.c **** void HAL_PCD_ResumeCallback(PCD_HandleTypeDef *hpcd)
 224:Src/usbd_conf.c **** #endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
 225:Src/usbd_conf.c **** {
 493              		.loc 1 225 1
 494              		.cfi_startproc
 495              		@ args = 0, pretend = 0, frame = 8
 496              		@ frame_needed = 1, uses_anonymous_args = 0
 497 0000 80B5     		push	{r7, lr}
 498              	.LCFI40:
 499              		.cfi_def_cfa_offset 8
 500              		.cfi_offset 7, -8
 501              		.cfi_offset 14, -4
 502 0002 82B0     		sub	sp, sp, #8
 503              	.LCFI41:
 504              		.cfi_def_cfa_offset 16
 505 0004 00AF     		add	r7, sp, #0
 506              	.LCFI42:
 507              		.cfi_def_cfa_register 7
 508 0006 7860     		str	r0, [r7, #4]
 226:Src/usbd_conf.c **** 
 227:Src/usbd_conf.c ****   /* USER CODE BEGIN 3 */
 228:Src/usbd_conf.c ****   if (hpcd->Init.low_power_enable)
 509              		.loc 1 228 17
 510 0008 7B68     		ldr	r3, [r7, #4]
 511 000a 9B69     		ldr	r3, [r3, #24]
 512              		.loc 1 228 6
 513 000c 002B     		cmp	r3, #0
 514 000e 07D0     		beq	.L23
 229:Src/usbd_conf.c ****   {
 230:Src/usbd_conf.c ****     /* Reset SLEEPDEEP bit of Cortex System Control Register. */
 231:Src/usbd_conf.c ****     SCB->SCR &= (uint32_t)~((uint32_t)(SCB_SCR_SLEEPDEEP_Msk | SCB_SCR_SLEEPONEXIT_Msk));
 515              		.loc 1 231 14
 516 0010 084B     		ldr	r3, .L24
 517 0012 1B69     		ldr	r3, [r3, #16]
 518 0014 074A     		ldr	r2, .L24
 519 0016 23F00603 		bic	r3, r3, #6
 520 001a 1361     		str	r3, [r2, #16]
 232:Src/usbd_conf.c ****     SystemClockConfig_Resume();
 521              		.loc 1 232 5
 522 001c FFF7FEFF 		bl	SystemClockConfig_Resume
 523              	.L23:
 233:Src/usbd_conf.c ****   }
 234:Src/usbd_conf.c ****   /* USER CODE END 3 */
 235:Src/usbd_conf.c ****   USBD_LL_Resume((USBD_HandleTypeDef*)hpcd->pData);
ARM GAS  /tmp/cc3rNxot.s 			page 14


 524              		.loc 1 235 43
 525 0020 7B68     		ldr	r3, [r7, #4]
 526 0022 D3F87032 		ldr	r3, [r3, #624]
 527              		.loc 1 235 3
 528 0026 1846     		mov	r0, r3
 529 0028 FFF7FEFF 		bl	USBD_LL_Resume
 236:Src/usbd_conf.c **** }
 530              		.loc 1 236 1
 531 002c 00BF     		nop
 532 002e 0837     		adds	r7, r7, #8
 533              	.LCFI43:
 534              		.cfi_def_cfa_offset 8
 535 0030 BD46     		mov	sp, r7
 536              	.LCFI44:
 537              		.cfi_def_cfa_register 13
 538              		@ sp needed
 539 0032 80BD     		pop	{r7, pc}
 540              	.L25:
 541              		.align	2
 542              	.L24:
 543 0034 00ED00E0 		.word	-536810240
 544              		.cfi_endproc
 545              	.LFE141:
 547              		.section	.text.HAL_PCD_ISOOUTIncompleteCallback,"ax",%progbits
 548              		.align	1
 549              		.global	HAL_PCD_ISOOUTIncompleteCallback
 550              		.syntax unified
 551              		.thumb
 552              		.thumb_func
 553              		.fpu fpv4-sp-d16
 555              	HAL_PCD_ISOOUTIncompleteCallback:
 556              	.LFB142:
 237:Src/usbd_conf.c **** 
 238:Src/usbd_conf.c **** /**
 239:Src/usbd_conf.c ****   * @brief  ISOOUTIncomplete callback.
 240:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 241:Src/usbd_conf.c ****   * @param  epnum: Endpoint number
 242:Src/usbd_conf.c ****   * @retval None
 243:Src/usbd_conf.c ****   */
 244:Src/usbd_conf.c **** #if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
 245:Src/usbd_conf.c **** static void PCD_ISOOUTIncompleteCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
 246:Src/usbd_conf.c **** #else
 247:Src/usbd_conf.c **** void HAL_PCD_ISOOUTIncompleteCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
 248:Src/usbd_conf.c **** #endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
 249:Src/usbd_conf.c **** {
 557              		.loc 1 249 1
 558              		.cfi_startproc
 559              		@ args = 0, pretend = 0, frame = 8
 560              		@ frame_needed = 1, uses_anonymous_args = 0
 561 0000 80B5     		push	{r7, lr}
 562              	.LCFI45:
 563              		.cfi_def_cfa_offset 8
 564              		.cfi_offset 7, -8
 565              		.cfi_offset 14, -4
 566 0002 82B0     		sub	sp, sp, #8
 567              	.LCFI46:
 568              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/cc3rNxot.s 			page 15


 569 0004 00AF     		add	r7, sp, #0
 570              	.LCFI47:
 571              		.cfi_def_cfa_register 7
 572 0006 7860     		str	r0, [r7, #4]
 573 0008 0B46     		mov	r3, r1
 574 000a FB70     		strb	r3, [r7, #3]
 250:Src/usbd_conf.c ****   USBD_LL_IsoOUTIncomplete((USBD_HandleTypeDef*)hpcd->pData, epnum);
 575              		.loc 1 250 53
 576 000c 7B68     		ldr	r3, [r7, #4]
 577 000e D3F87032 		ldr	r3, [r3, #624]
 578              		.loc 1 250 3
 579 0012 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 580 0014 1146     		mov	r1, r2
 581 0016 1846     		mov	r0, r3
 582 0018 FFF7FEFF 		bl	USBD_LL_IsoOUTIncomplete
 251:Src/usbd_conf.c **** }
 583              		.loc 1 251 1
 584 001c 00BF     		nop
 585 001e 0837     		adds	r7, r7, #8
 586              	.LCFI48:
 587              		.cfi_def_cfa_offset 8
 588 0020 BD46     		mov	sp, r7
 589              	.LCFI49:
 590              		.cfi_def_cfa_register 13
 591              		@ sp needed
 592 0022 80BD     		pop	{r7, pc}
 593              		.cfi_endproc
 594              	.LFE142:
 596              		.section	.text.HAL_PCD_ISOINIncompleteCallback,"ax",%progbits
 597              		.align	1
 598              		.global	HAL_PCD_ISOINIncompleteCallback
 599              		.syntax unified
 600              		.thumb
 601              		.thumb_func
 602              		.fpu fpv4-sp-d16
 604              	HAL_PCD_ISOINIncompleteCallback:
 605              	.LFB143:
 252:Src/usbd_conf.c **** 
 253:Src/usbd_conf.c **** /**
 254:Src/usbd_conf.c ****   * @brief  ISOINIncomplete callback.
 255:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 256:Src/usbd_conf.c ****   * @param  epnum: Endpoint number
 257:Src/usbd_conf.c ****   * @retval None
 258:Src/usbd_conf.c ****   */
 259:Src/usbd_conf.c **** #if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
 260:Src/usbd_conf.c **** static void PCD_ISOINIncompleteCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
 261:Src/usbd_conf.c **** #else
 262:Src/usbd_conf.c **** void HAL_PCD_ISOINIncompleteCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
 263:Src/usbd_conf.c **** #endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
 264:Src/usbd_conf.c **** {
 606              		.loc 1 264 1
 607              		.cfi_startproc
 608              		@ args = 0, pretend = 0, frame = 8
 609              		@ frame_needed = 1, uses_anonymous_args = 0
 610 0000 80B5     		push	{r7, lr}
 611              	.LCFI50:
 612              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/cc3rNxot.s 			page 16


 613              		.cfi_offset 7, -8
 614              		.cfi_offset 14, -4
 615 0002 82B0     		sub	sp, sp, #8
 616              	.LCFI51:
 617              		.cfi_def_cfa_offset 16
 618 0004 00AF     		add	r7, sp, #0
 619              	.LCFI52:
 620              		.cfi_def_cfa_register 7
 621 0006 7860     		str	r0, [r7, #4]
 622 0008 0B46     		mov	r3, r1
 623 000a FB70     		strb	r3, [r7, #3]
 265:Src/usbd_conf.c ****   USBD_LL_IsoINIncomplete((USBD_HandleTypeDef*)hpcd->pData, epnum);
 624              		.loc 1 265 52
 625 000c 7B68     		ldr	r3, [r7, #4]
 626 000e D3F87032 		ldr	r3, [r3, #624]
 627              		.loc 1 265 3
 628 0012 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 629 0014 1146     		mov	r1, r2
 630 0016 1846     		mov	r0, r3
 631 0018 FFF7FEFF 		bl	USBD_LL_IsoINIncomplete
 266:Src/usbd_conf.c **** }
 632              		.loc 1 266 1
 633 001c 00BF     		nop
 634 001e 0837     		adds	r7, r7, #8
 635              	.LCFI53:
 636              		.cfi_def_cfa_offset 8
 637 0020 BD46     		mov	sp, r7
 638              	.LCFI54:
 639              		.cfi_def_cfa_register 13
 640              		@ sp needed
 641 0022 80BD     		pop	{r7, pc}
 642              		.cfi_endproc
 643              	.LFE143:
 645              		.section	.text.HAL_PCD_ConnectCallback,"ax",%progbits
 646              		.align	1
 647              		.global	HAL_PCD_ConnectCallback
 648              		.syntax unified
 649              		.thumb
 650              		.thumb_func
 651              		.fpu fpv4-sp-d16
 653              	HAL_PCD_ConnectCallback:
 654              	.LFB144:
 267:Src/usbd_conf.c **** 
 268:Src/usbd_conf.c **** /**
 269:Src/usbd_conf.c ****   * @brief  Connect callback.
 270:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 271:Src/usbd_conf.c ****   * @retval None
 272:Src/usbd_conf.c ****   */
 273:Src/usbd_conf.c **** #if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
 274:Src/usbd_conf.c **** static void PCD_ConnectCallback(PCD_HandleTypeDef *hpcd)
 275:Src/usbd_conf.c **** #else
 276:Src/usbd_conf.c **** void HAL_PCD_ConnectCallback(PCD_HandleTypeDef *hpcd)
 277:Src/usbd_conf.c **** #endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
 278:Src/usbd_conf.c **** {
 655              		.loc 1 278 1
 656              		.cfi_startproc
 657              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/cc3rNxot.s 			page 17


 658              		@ frame_needed = 1, uses_anonymous_args = 0
 659 0000 80B5     		push	{r7, lr}
 660              	.LCFI55:
 661              		.cfi_def_cfa_offset 8
 662              		.cfi_offset 7, -8
 663              		.cfi_offset 14, -4
 664 0002 82B0     		sub	sp, sp, #8
 665              	.LCFI56:
 666              		.cfi_def_cfa_offset 16
 667 0004 00AF     		add	r7, sp, #0
 668              	.LCFI57:
 669              		.cfi_def_cfa_register 7
 670 0006 7860     		str	r0, [r7, #4]
 279:Src/usbd_conf.c ****   USBD_LL_DevConnected((USBD_HandleTypeDef*)hpcd->pData);
 671              		.loc 1 279 49
 672 0008 7B68     		ldr	r3, [r7, #4]
 673 000a D3F87032 		ldr	r3, [r3, #624]
 674              		.loc 1 279 3
 675 000e 1846     		mov	r0, r3
 676 0010 FFF7FEFF 		bl	USBD_LL_DevConnected
 280:Src/usbd_conf.c **** }
 677              		.loc 1 280 1
 678 0014 00BF     		nop
 679 0016 0837     		adds	r7, r7, #8
 680              	.LCFI58:
 681              		.cfi_def_cfa_offset 8
 682 0018 BD46     		mov	sp, r7
 683              	.LCFI59:
 684              		.cfi_def_cfa_register 13
 685              		@ sp needed
 686 001a 80BD     		pop	{r7, pc}
 687              		.cfi_endproc
 688              	.LFE144:
 690              		.section	.text.HAL_PCD_DisconnectCallback,"ax",%progbits
 691              		.align	1
 692              		.global	HAL_PCD_DisconnectCallback
 693              		.syntax unified
 694              		.thumb
 695              		.thumb_func
 696              		.fpu fpv4-sp-d16
 698              	HAL_PCD_DisconnectCallback:
 699              	.LFB145:
 281:Src/usbd_conf.c **** 
 282:Src/usbd_conf.c **** /**
 283:Src/usbd_conf.c ****   * @brief  Disconnect callback.
 284:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 285:Src/usbd_conf.c ****   * @retval None
 286:Src/usbd_conf.c ****   */
 287:Src/usbd_conf.c **** #if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
 288:Src/usbd_conf.c **** static void PCD_DisconnectCallback(PCD_HandleTypeDef *hpcd)
 289:Src/usbd_conf.c **** #else
 290:Src/usbd_conf.c **** void HAL_PCD_DisconnectCallback(PCD_HandleTypeDef *hpcd)
 291:Src/usbd_conf.c **** #endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
 292:Src/usbd_conf.c **** {
 700              		.loc 1 292 1
 701              		.cfi_startproc
 702              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/cc3rNxot.s 			page 18


 703              		@ frame_needed = 1, uses_anonymous_args = 0
 704 0000 80B5     		push	{r7, lr}
 705              	.LCFI60:
 706              		.cfi_def_cfa_offset 8
 707              		.cfi_offset 7, -8
 708              		.cfi_offset 14, -4
 709 0002 82B0     		sub	sp, sp, #8
 710              	.LCFI61:
 711              		.cfi_def_cfa_offset 16
 712 0004 00AF     		add	r7, sp, #0
 713              	.LCFI62:
 714              		.cfi_def_cfa_register 7
 715 0006 7860     		str	r0, [r7, #4]
 293:Src/usbd_conf.c ****   USBD_LL_DevDisconnected((USBD_HandleTypeDef*)hpcd->pData);
 716              		.loc 1 293 52
 717 0008 7B68     		ldr	r3, [r7, #4]
 718 000a D3F87032 		ldr	r3, [r3, #624]
 719              		.loc 1 293 3
 720 000e 1846     		mov	r0, r3
 721 0010 FFF7FEFF 		bl	USBD_LL_DevDisconnected
 294:Src/usbd_conf.c **** }
 722              		.loc 1 294 1
 723 0014 00BF     		nop
 724 0016 0837     		adds	r7, r7, #8
 725              	.LCFI63:
 726              		.cfi_def_cfa_offset 8
 727 0018 BD46     		mov	sp, r7
 728              	.LCFI64:
 729              		.cfi_def_cfa_register 13
 730              		@ sp needed
 731 001a 80BD     		pop	{r7, pc}
 732              		.cfi_endproc
 733              	.LFE145:
 735              		.section	.text.USBD_LL_Init,"ax",%progbits
 736              		.align	1
 737              		.global	USBD_LL_Init
 738              		.syntax unified
 739              		.thumb
 740              		.thumb_func
 741              		.fpu fpv4-sp-d16
 743              	USBD_LL_Init:
 744              	.LFB146:
 295:Src/usbd_conf.c **** 
 296:Src/usbd_conf.c **** /*******************************************************************************
 297:Src/usbd_conf.c ****                        LL Driver Interface (USB Device Library --> PCD)
 298:Src/usbd_conf.c **** *******************************************************************************/
 299:Src/usbd_conf.c **** 
 300:Src/usbd_conf.c **** /**
 301:Src/usbd_conf.c ****   * @brief  Initializes the low level portion of the device driver.
 302:Src/usbd_conf.c ****   * @param  pdev: Device handle
 303:Src/usbd_conf.c ****   * @retval USBD status
 304:Src/usbd_conf.c ****   */
 305:Src/usbd_conf.c **** USBD_StatusTypeDef USBD_LL_Init(USBD_HandleTypeDef *pdev)
 306:Src/usbd_conf.c **** {
 745              		.loc 1 306 1
 746              		.cfi_startproc
 747              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/cc3rNxot.s 			page 19


 748              		@ frame_needed = 1, uses_anonymous_args = 0
 749 0000 80B5     		push	{r7, lr}
 750              	.LCFI65:
 751              		.cfi_def_cfa_offset 8
 752              		.cfi_offset 7, -8
 753              		.cfi_offset 14, -4
 754 0002 82B0     		sub	sp, sp, #8
 755              	.LCFI66:
 756              		.cfi_def_cfa_offset 16
 757 0004 00AF     		add	r7, sp, #0
 758              	.LCFI67:
 759              		.cfi_def_cfa_register 7
 760 0006 7860     		str	r0, [r7, #4]
 307:Src/usbd_conf.c ****   /* Init USB Ip. */
 308:Src/usbd_conf.c ****   /* Enable USB power on Pwrctrl CR2 register. */
 309:Src/usbd_conf.c ****   HAL_PWREx_EnableVddUSB();
 761              		.loc 1 309 3
 762 0008 FFF7FEFF 		bl	HAL_PWREx_EnableVddUSB
 310:Src/usbd_conf.c ****   /* Link the driver to the stack. */
 311:Src/usbd_conf.c ****   hpcd_USB_FS.pData = pdev;
 763              		.loc 1 311 21
 764 000c 2B4A     		ldr	r2, .L33
 765 000e 7B68     		ldr	r3, [r7, #4]
 766 0010 C2F87032 		str	r3, [r2, #624]
 312:Src/usbd_conf.c ****   pdev->pData = &hpcd_USB_FS;
 767              		.loc 1 312 15
 768 0014 7B68     		ldr	r3, [r7, #4]
 769 0016 294A     		ldr	r2, .L33
 770 0018 C3F8C022 		str	r2, [r3, #704]
 313:Src/usbd_conf.c **** 
 314:Src/usbd_conf.c ****   hpcd_USB_FS.Instance = USB;
 771              		.loc 1 314 24
 772 001c 274B     		ldr	r3, .L33
 773 001e 284A     		ldr	r2, .L33+4
 774 0020 1A60     		str	r2, [r3]
 315:Src/usbd_conf.c ****   hpcd_USB_FS.Init.dev_endpoints = 8;
 775              		.loc 1 315 34
 776 0022 264B     		ldr	r3, .L33
 777 0024 0822     		movs	r2, #8
 778 0026 5A60     		str	r2, [r3, #4]
 316:Src/usbd_conf.c ****   hpcd_USB_FS.Init.speed = PCD_SPEED_FULL;
 779              		.loc 1 316 26
 780 0028 244B     		ldr	r3, .L33
 781 002a 0222     		movs	r2, #2
 782 002c 9A60     		str	r2, [r3, #8]
 317:Src/usbd_conf.c ****   hpcd_USB_FS.Init.phy_itface = PCD_PHY_EMBEDDED;
 783              		.loc 1 317 31
 784 002e 234B     		ldr	r3, .L33
 785 0030 0222     		movs	r2, #2
 786 0032 1A61     		str	r2, [r3, #16]
 318:Src/usbd_conf.c ****   hpcd_USB_FS.Init.Sof_enable = DISABLE;
 787              		.loc 1 318 31
 788 0034 214B     		ldr	r3, .L33
 789 0036 0022     		movs	r2, #0
 790 0038 5A61     		str	r2, [r3, #20]
 319:Src/usbd_conf.c ****   hpcd_USB_FS.Init.low_power_enable = DISABLE;
 791              		.loc 1 319 37
ARM GAS  /tmp/cc3rNxot.s 			page 20


 792 003a 204B     		ldr	r3, .L33
 793 003c 0022     		movs	r2, #0
 794 003e 9A61     		str	r2, [r3, #24]
 320:Src/usbd_conf.c ****   hpcd_USB_FS.Init.lpm_enable = DISABLE;
 795              		.loc 1 320 31
 796 0040 1E4B     		ldr	r3, .L33
 797 0042 0022     		movs	r2, #0
 798 0044 DA61     		str	r2, [r3, #28]
 321:Src/usbd_conf.c ****   hpcd_USB_FS.Init.battery_charging_enable = DISABLE;
 799              		.loc 1 321 44
 800 0046 1D4B     		ldr	r3, .L33
 801 0048 0022     		movs	r2, #0
 802 004a 1A62     		str	r2, [r3, #32]
 322:Src/usbd_conf.c ****   if (HAL_PCD_Init(&hpcd_USB_FS) != HAL_OK)
 803              		.loc 1 322 7
 804 004c 1B48     		ldr	r0, .L33
 805 004e FFF7FEFF 		bl	HAL_PCD_Init
 806 0052 0346     		mov	r3, r0
 807              		.loc 1 322 6
 808 0054 002B     		cmp	r3, #0
 809 0056 01D0     		beq	.L31
 323:Src/usbd_conf.c ****   {
 324:Src/usbd_conf.c ****     Error_Handler( );
 810              		.loc 1 324 5
 811 0058 FFF7FEFF 		bl	Error_Handler
 812              	.L31:
 325:Src/usbd_conf.c ****   }
 326:Src/usbd_conf.c **** 
 327:Src/usbd_conf.c **** #if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
 328:Src/usbd_conf.c ****   /* Register USB PCD CallBacks */
 329:Src/usbd_conf.c ****   HAL_PCD_RegisterCallback(&hpcd_USB_FS, HAL_PCD_SOF_CB_ID, PCD_SOFCallback);
 330:Src/usbd_conf.c ****   HAL_PCD_RegisterCallback(&hpcd_USB_FS, HAL_PCD_SETUPSTAGE_CB_ID, PCD_SetupStageCallback);
 331:Src/usbd_conf.c ****   HAL_PCD_RegisterCallback(&hpcd_USB_FS, HAL_PCD_RESET_CB_ID, PCD_ResetCallback);
 332:Src/usbd_conf.c ****   HAL_PCD_RegisterCallback(&hpcd_USB_FS, HAL_PCD_SUSPEND_CB_ID, PCD_SuspendCallback);
 333:Src/usbd_conf.c ****   HAL_PCD_RegisterCallback(&hpcd_USB_FS, HAL_PCD_RESUME_CB_ID, PCD_ResumeCallback);
 334:Src/usbd_conf.c ****   HAL_PCD_RegisterCallback(&hpcd_USB_FS, HAL_PCD_CONNECT_CB_ID, PCD_ConnectCallback);
 335:Src/usbd_conf.c ****   HAL_PCD_RegisterCallback(&hpcd_USB_FS, HAL_PCD_DISCONNECT_CB_ID, PCD_DisconnectCallback);
 336:Src/usbd_conf.c **** 
 337:Src/usbd_conf.c ****   HAL_PCD_RegisterDataOutStageCallback(&hpcd_USB_FS, PCD_DataOutStageCallback);
 338:Src/usbd_conf.c ****   HAL_PCD_RegisterDataInStageCallback(&hpcd_USB_FS, PCD_DataInStageCallback);
 339:Src/usbd_conf.c ****   HAL_PCD_RegisterIsoOutIncpltCallback(&hpcd_USB_FS, PCD_ISOOUTIncompleteCallback);
 340:Src/usbd_conf.c ****   HAL_PCD_RegisterIsoInIncpltCallback(&hpcd_USB_FS, PCD_ISOINIncompleteCallback);
 341:Src/usbd_conf.c **** #endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
 342:Src/usbd_conf.c ****   /* USER CODE BEGIN EndPoint_Configuration */
 343:Src/usbd_conf.c ****   HAL_PCDEx_PMAConfig((PCD_HandleTypeDef*)pdev->pData , 0x00 , PCD_SNG_BUF, 0x18);
 813              		.loc 1 343 47
 814 005c 7B68     		ldr	r3, [r7, #4]
 815 005e D3F8C002 		ldr	r0, [r3, #704]
 816              		.loc 1 343 3
 817 0062 1823     		movs	r3, #24
 818 0064 0022     		movs	r2, #0
 819 0066 0021     		movs	r1, #0
 820 0068 FFF7FEFF 		bl	HAL_PCDEx_PMAConfig
 344:Src/usbd_conf.c ****   HAL_PCDEx_PMAConfig((PCD_HandleTypeDef*)pdev->pData , 0x80 , PCD_SNG_BUF, 0x58);
 821              		.loc 1 344 47
 822 006c 7B68     		ldr	r3, [r7, #4]
 823 006e D3F8C002 		ldr	r0, [r3, #704]
ARM GAS  /tmp/cc3rNxot.s 			page 21


 824              		.loc 1 344 3
 825 0072 5823     		movs	r3, #88
 826 0074 0022     		movs	r2, #0
 827 0076 8021     		movs	r1, #128
 828 0078 FFF7FEFF 		bl	HAL_PCDEx_PMAConfig
 345:Src/usbd_conf.c ****   /* USER CODE END EndPoint_Configuration */
 346:Src/usbd_conf.c ****   /* USER CODE BEGIN EndPoint_Configuration_CDC */
 347:Src/usbd_conf.c ****   HAL_PCDEx_PMAConfig((PCD_HandleTypeDef*)pdev->pData , 0x81 , PCD_SNG_BUF, 0xC0);
 829              		.loc 1 347 47
 830 007c 7B68     		ldr	r3, [r7, #4]
 831 007e D3F8C002 		ldr	r0, [r3, #704]
 832              		.loc 1 347 3
 833 0082 C023     		movs	r3, #192
 834 0084 0022     		movs	r2, #0
 835 0086 8121     		movs	r1, #129
 836 0088 FFF7FEFF 		bl	HAL_PCDEx_PMAConfig
 348:Src/usbd_conf.c ****   HAL_PCDEx_PMAConfig((PCD_HandleTypeDef*)pdev->pData , 0x01 , PCD_SNG_BUF, 0x110);
 837              		.loc 1 348 47
 838 008c 7B68     		ldr	r3, [r7, #4]
 839 008e D3F8C002 		ldr	r0, [r3, #704]
 840              		.loc 1 348 3
 841 0092 4FF48873 		mov	r3, #272
 842 0096 0022     		movs	r2, #0
 843 0098 0121     		movs	r1, #1
 844 009a FFF7FEFF 		bl	HAL_PCDEx_PMAConfig
 349:Src/usbd_conf.c ****   HAL_PCDEx_PMAConfig((PCD_HandleTypeDef*)pdev->pData , 0x82 , PCD_SNG_BUF, 0x100);
 845              		.loc 1 349 47
 846 009e 7B68     		ldr	r3, [r7, #4]
 847 00a0 D3F8C002 		ldr	r0, [r3, #704]
 848              		.loc 1 349 3
 849 00a4 4FF48073 		mov	r3, #256
 850 00a8 0022     		movs	r2, #0
 851 00aa 8221     		movs	r1, #130
 852 00ac FFF7FEFF 		bl	HAL_PCDEx_PMAConfig
 350:Src/usbd_conf.c ****   /* USER CODE END EndPoint_Configuration_CDC */
 351:Src/usbd_conf.c ****   return USBD_OK;
 853              		.loc 1 351 10
 854 00b0 0023     		movs	r3, #0
 352:Src/usbd_conf.c **** }
 855              		.loc 1 352 1
 856 00b2 1846     		mov	r0, r3
 857 00b4 0837     		adds	r7, r7, #8
 858              	.LCFI68:
 859              		.cfi_def_cfa_offset 8
 860 00b6 BD46     		mov	sp, r7
 861              	.LCFI69:
 862              		.cfi_def_cfa_register 13
 863              		@ sp needed
 864 00b8 80BD     		pop	{r7, pc}
 865              	.L34:
 866 00ba 00BF     		.align	2
 867              	.L33:
 868 00bc 00000000 		.word	hpcd_USB_FS
 869 00c0 00680040 		.word	1073768448
 870              		.cfi_endproc
 871              	.LFE146:
 873              		.section	.text.USBD_LL_DeInit,"ax",%progbits
ARM GAS  /tmp/cc3rNxot.s 			page 22


 874              		.align	1
 875              		.global	USBD_LL_DeInit
 876              		.syntax unified
 877              		.thumb
 878              		.thumb_func
 879              		.fpu fpv4-sp-d16
 881              	USBD_LL_DeInit:
 882              	.LFB147:
 353:Src/usbd_conf.c **** 
 354:Src/usbd_conf.c **** /**
 355:Src/usbd_conf.c ****   * @brief  De-Initializes the low level portion of the device driver.
 356:Src/usbd_conf.c ****   * @param  pdev: Device handle
 357:Src/usbd_conf.c ****   * @retval USBD status
 358:Src/usbd_conf.c ****   */
 359:Src/usbd_conf.c **** USBD_StatusTypeDef USBD_LL_DeInit(USBD_HandleTypeDef *pdev)
 360:Src/usbd_conf.c **** {
 883              		.loc 1 360 1
 884              		.cfi_startproc
 885              		@ args = 0, pretend = 0, frame = 16
 886              		@ frame_needed = 1, uses_anonymous_args = 0
 887 0000 80B5     		push	{r7, lr}
 888              	.LCFI70:
 889              		.cfi_def_cfa_offset 8
 890              		.cfi_offset 7, -8
 891              		.cfi_offset 14, -4
 892 0002 84B0     		sub	sp, sp, #16
 893              	.LCFI71:
 894              		.cfi_def_cfa_offset 24
 895 0004 00AF     		add	r7, sp, #0
 896              	.LCFI72:
 897              		.cfi_def_cfa_register 7
 898 0006 7860     		str	r0, [r7, #4]
 361:Src/usbd_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 899              		.loc 1 361 21
 900 0008 0023     		movs	r3, #0
 901 000a BB73     		strb	r3, [r7, #14]
 362:Src/usbd_conf.c ****   USBD_StatusTypeDef usb_status = USBD_OK;
 902              		.loc 1 362 22
 903 000c 0023     		movs	r3, #0
 904 000e FB73     		strb	r3, [r7, #15]
 363:Src/usbd_conf.c **** 
 364:Src/usbd_conf.c ****   hal_status = HAL_PCD_DeInit(pdev->pData);
 905              		.loc 1 364 35
 906 0010 7B68     		ldr	r3, [r7, #4]
 907 0012 D3F8C032 		ldr	r3, [r3, #704]
 908              		.loc 1 364 16
 909 0016 1846     		mov	r0, r3
 910 0018 FFF7FEFF 		bl	HAL_PCD_DeInit
 911 001c 0346     		mov	r3, r0
 912 001e BB73     		strb	r3, [r7, #14]
 365:Src/usbd_conf.c **** 
 366:Src/usbd_conf.c ****   switch (hal_status) {
 913              		.loc 1 366 3
 914 0020 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 915 0022 032B     		cmp	r3, #3
 916 0024 16D8     		bhi	.L36
 917 0026 01A2     		adr	r2, .L38
ARM GAS  /tmp/cc3rNxot.s 			page 23


 918 0028 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 919              		.p2align 2
 920              	.L38:
 921 002c 3D000000 		.word	.L41+1
 922 0030 43000000 		.word	.L40+1
 923 0034 49000000 		.word	.L39+1
 924 0038 4F000000 		.word	.L37+1
 925              		.p2align 1
 926              	.L41:
 367:Src/usbd_conf.c ****     case HAL_OK :
 368:Src/usbd_conf.c ****       usb_status = USBD_OK;
 927              		.loc 1 368 18
 928 003c 0023     		movs	r3, #0
 929 003e FB73     		strb	r3, [r7, #15]
 369:Src/usbd_conf.c ****     break;
 930              		.loc 1 369 5
 931 0040 0BE0     		b	.L42
 932              	.L40:
 370:Src/usbd_conf.c ****     case HAL_ERROR :
 371:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 933              		.loc 1 371 18
 934 0042 0223     		movs	r3, #2
 935 0044 FB73     		strb	r3, [r7, #15]
 372:Src/usbd_conf.c ****     break;
 936              		.loc 1 372 5
 937 0046 08E0     		b	.L42
 938              	.L39:
 373:Src/usbd_conf.c ****     case HAL_BUSY :
 374:Src/usbd_conf.c ****       usb_status = USBD_BUSY;
 939              		.loc 1 374 18
 940 0048 0123     		movs	r3, #1
 941 004a FB73     		strb	r3, [r7, #15]
 375:Src/usbd_conf.c ****     break;
 942              		.loc 1 375 5
 943 004c 05E0     		b	.L42
 944              	.L37:
 376:Src/usbd_conf.c ****     case HAL_TIMEOUT :
 377:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 945              		.loc 1 377 18
 946 004e 0223     		movs	r3, #2
 947 0050 FB73     		strb	r3, [r7, #15]
 378:Src/usbd_conf.c ****     break;
 948              		.loc 1 378 5
 949 0052 02E0     		b	.L42
 950              	.L36:
 379:Src/usbd_conf.c ****     default :
 380:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 951              		.loc 1 380 18
 952 0054 0223     		movs	r3, #2
 953 0056 FB73     		strb	r3, [r7, #15]
 381:Src/usbd_conf.c ****     break;
 954              		.loc 1 381 5
 955 0058 00BF     		nop
 956              	.L42:
 382:Src/usbd_conf.c ****   }
 383:Src/usbd_conf.c ****   return usb_status; 
 957              		.loc 1 383 10
ARM GAS  /tmp/cc3rNxot.s 			page 24


 958 005a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 384:Src/usbd_conf.c **** }
 959              		.loc 1 384 1
 960 005c 1846     		mov	r0, r3
 961 005e 1037     		adds	r7, r7, #16
 962              	.LCFI73:
 963              		.cfi_def_cfa_offset 8
 964 0060 BD46     		mov	sp, r7
 965              	.LCFI74:
 966              		.cfi_def_cfa_register 13
 967              		@ sp needed
 968 0062 80BD     		pop	{r7, pc}
 969              		.cfi_endproc
 970              	.LFE147:
 972              		.section	.text.USBD_LL_Start,"ax",%progbits
 973              		.align	1
 974              		.global	USBD_LL_Start
 975              		.syntax unified
 976              		.thumb
 977              		.thumb_func
 978              		.fpu fpv4-sp-d16
 980              	USBD_LL_Start:
 981              	.LFB148:
 385:Src/usbd_conf.c **** 
 386:Src/usbd_conf.c **** /**
 387:Src/usbd_conf.c ****   * @brief  Starts the low level portion of the device driver.
 388:Src/usbd_conf.c ****   * @param  pdev: Device handle
 389:Src/usbd_conf.c ****   * @retval USBD status
 390:Src/usbd_conf.c ****   */
 391:Src/usbd_conf.c **** USBD_StatusTypeDef USBD_LL_Start(USBD_HandleTypeDef *pdev)
 392:Src/usbd_conf.c **** {
 982              		.loc 1 392 1
 983              		.cfi_startproc
 984              		@ args = 0, pretend = 0, frame = 16
 985              		@ frame_needed = 1, uses_anonymous_args = 0
 986 0000 80B5     		push	{r7, lr}
 987              	.LCFI75:
 988              		.cfi_def_cfa_offset 8
 989              		.cfi_offset 7, -8
 990              		.cfi_offset 14, -4
 991 0002 84B0     		sub	sp, sp, #16
 992              	.LCFI76:
 993              		.cfi_def_cfa_offset 24
 994 0004 00AF     		add	r7, sp, #0
 995              	.LCFI77:
 996              		.cfi_def_cfa_register 7
 997 0006 7860     		str	r0, [r7, #4]
 393:Src/usbd_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 998              		.loc 1 393 21
 999 0008 0023     		movs	r3, #0
 1000 000a BB73     		strb	r3, [r7, #14]
 394:Src/usbd_conf.c ****   USBD_StatusTypeDef usb_status = USBD_OK;
 1001              		.loc 1 394 22
 1002 000c 0023     		movs	r3, #0
 1003 000e FB73     		strb	r3, [r7, #15]
 395:Src/usbd_conf.c ****  
 396:Src/usbd_conf.c ****   hal_status = HAL_PCD_Start(pdev->pData);
ARM GAS  /tmp/cc3rNxot.s 			page 25


 1004              		.loc 1 396 34
 1005 0010 7B68     		ldr	r3, [r7, #4]
 1006 0012 D3F8C032 		ldr	r3, [r3, #704]
 1007              		.loc 1 396 16
 1008 0016 1846     		mov	r0, r3
 1009 0018 FFF7FEFF 		bl	HAL_PCD_Start
 1010 001c 0346     		mov	r3, r0
 1011 001e BB73     		strb	r3, [r7, #14]
 397:Src/usbd_conf.c ****      
 398:Src/usbd_conf.c ****   switch (hal_status) {
 1012              		.loc 1 398 3
 1013 0020 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1014 0022 032B     		cmp	r3, #3
 1015 0024 16D8     		bhi	.L45
 1016 0026 01A2     		adr	r2, .L47
 1017 0028 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1018              		.p2align 2
 1019              	.L47:
 1020 002c 3D000000 		.word	.L50+1
 1021 0030 43000000 		.word	.L49+1
 1022 0034 49000000 		.word	.L48+1
 1023 0038 4F000000 		.word	.L46+1
 1024              		.p2align 1
 1025              	.L50:
 399:Src/usbd_conf.c ****     case HAL_OK :
 400:Src/usbd_conf.c ****       usb_status = USBD_OK;
 1026              		.loc 1 400 18
 1027 003c 0023     		movs	r3, #0
 1028 003e FB73     		strb	r3, [r7, #15]
 401:Src/usbd_conf.c ****     break;
 1029              		.loc 1 401 5
 1030 0040 0BE0     		b	.L51
 1031              	.L49:
 402:Src/usbd_conf.c ****     case HAL_ERROR :
 403:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 1032              		.loc 1 403 18
 1033 0042 0223     		movs	r3, #2
 1034 0044 FB73     		strb	r3, [r7, #15]
 404:Src/usbd_conf.c ****     break;
 1035              		.loc 1 404 5
 1036 0046 08E0     		b	.L51
 1037              	.L48:
 405:Src/usbd_conf.c ****     case HAL_BUSY :
 406:Src/usbd_conf.c ****       usb_status = USBD_BUSY;
 1038              		.loc 1 406 18
 1039 0048 0123     		movs	r3, #1
 1040 004a FB73     		strb	r3, [r7, #15]
 407:Src/usbd_conf.c ****     break;
 1041              		.loc 1 407 5
 1042 004c 05E0     		b	.L51
 1043              	.L46:
 408:Src/usbd_conf.c ****     case HAL_TIMEOUT :
 409:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 1044              		.loc 1 409 18
 1045 004e 0223     		movs	r3, #2
 1046 0050 FB73     		strb	r3, [r7, #15]
 410:Src/usbd_conf.c ****     break;
ARM GAS  /tmp/cc3rNxot.s 			page 26


 1047              		.loc 1 410 5
 1048 0052 02E0     		b	.L51
 1049              	.L45:
 411:Src/usbd_conf.c ****     default :
 412:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 1050              		.loc 1 412 18
 1051 0054 0223     		movs	r3, #2
 1052 0056 FB73     		strb	r3, [r7, #15]
 413:Src/usbd_conf.c ****     break;
 1053              		.loc 1 413 5
 1054 0058 00BF     		nop
 1055              	.L51:
 414:Src/usbd_conf.c ****   }
 415:Src/usbd_conf.c ****   return usb_status;
 1056              		.loc 1 415 10
 1057 005a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 416:Src/usbd_conf.c **** }
 1058              		.loc 1 416 1
 1059 005c 1846     		mov	r0, r3
 1060 005e 1037     		adds	r7, r7, #16
 1061              	.LCFI78:
 1062              		.cfi_def_cfa_offset 8
 1063 0060 BD46     		mov	sp, r7
 1064              	.LCFI79:
 1065              		.cfi_def_cfa_register 13
 1066              		@ sp needed
 1067 0062 80BD     		pop	{r7, pc}
 1068              		.cfi_endproc
 1069              	.LFE148:
 1071              		.section	.text.USBD_LL_Stop,"ax",%progbits
 1072              		.align	1
 1073              		.global	USBD_LL_Stop
 1074              		.syntax unified
 1075              		.thumb
 1076              		.thumb_func
 1077              		.fpu fpv4-sp-d16
 1079              	USBD_LL_Stop:
 1080              	.LFB149:
 417:Src/usbd_conf.c **** 
 418:Src/usbd_conf.c **** /**
 419:Src/usbd_conf.c ****   * @brief  Stops the low level portion of the device driver.
 420:Src/usbd_conf.c ****   * @param  pdev: Device handle
 421:Src/usbd_conf.c ****   * @retval USBD status
 422:Src/usbd_conf.c ****   */
 423:Src/usbd_conf.c **** USBD_StatusTypeDef USBD_LL_Stop(USBD_HandleTypeDef *pdev)
 424:Src/usbd_conf.c **** {
 1081              		.loc 1 424 1
 1082              		.cfi_startproc
 1083              		@ args = 0, pretend = 0, frame = 16
 1084              		@ frame_needed = 1, uses_anonymous_args = 0
 1085 0000 80B5     		push	{r7, lr}
 1086              	.LCFI80:
 1087              		.cfi_def_cfa_offset 8
 1088              		.cfi_offset 7, -8
 1089              		.cfi_offset 14, -4
 1090 0002 84B0     		sub	sp, sp, #16
 1091              	.LCFI81:
ARM GAS  /tmp/cc3rNxot.s 			page 27


 1092              		.cfi_def_cfa_offset 24
 1093 0004 00AF     		add	r7, sp, #0
 1094              	.LCFI82:
 1095              		.cfi_def_cfa_register 7
 1096 0006 7860     		str	r0, [r7, #4]
 425:Src/usbd_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 1097              		.loc 1 425 21
 1098 0008 0023     		movs	r3, #0
 1099 000a BB73     		strb	r3, [r7, #14]
 426:Src/usbd_conf.c ****   USBD_StatusTypeDef usb_status = USBD_OK;
 1100              		.loc 1 426 22
 1101 000c 0023     		movs	r3, #0
 1102 000e FB73     		strb	r3, [r7, #15]
 427:Src/usbd_conf.c **** 
 428:Src/usbd_conf.c ****   hal_status = HAL_PCD_Stop(pdev->pData);
 1103              		.loc 1 428 33
 1104 0010 7B68     		ldr	r3, [r7, #4]
 1105 0012 D3F8C032 		ldr	r3, [r3, #704]
 1106              		.loc 1 428 16
 1107 0016 1846     		mov	r0, r3
 1108 0018 FFF7FEFF 		bl	HAL_PCD_Stop
 1109 001c 0346     		mov	r3, r0
 1110 001e BB73     		strb	r3, [r7, #14]
 429:Src/usbd_conf.c **** 
 430:Src/usbd_conf.c ****   switch (hal_status) {
 1111              		.loc 1 430 3
 1112 0020 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1113 0022 032B     		cmp	r3, #3
 1114 0024 16D8     		bhi	.L54
 1115 0026 01A2     		adr	r2, .L56
 1116 0028 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1117              		.p2align 2
 1118              	.L56:
 1119 002c 3D000000 		.word	.L59+1
 1120 0030 43000000 		.word	.L58+1
 1121 0034 49000000 		.word	.L57+1
 1122 0038 4F000000 		.word	.L55+1
 1123              		.p2align 1
 1124              	.L59:
 431:Src/usbd_conf.c ****     case HAL_OK :
 432:Src/usbd_conf.c ****       usb_status = USBD_OK;
 1125              		.loc 1 432 18
 1126 003c 0023     		movs	r3, #0
 1127 003e FB73     		strb	r3, [r7, #15]
 433:Src/usbd_conf.c ****     break;
 1128              		.loc 1 433 5
 1129 0040 0BE0     		b	.L60
 1130              	.L58:
 434:Src/usbd_conf.c ****     case HAL_ERROR :
 435:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 1131              		.loc 1 435 18
 1132 0042 0223     		movs	r3, #2
 1133 0044 FB73     		strb	r3, [r7, #15]
 436:Src/usbd_conf.c ****     break;
 1134              		.loc 1 436 5
 1135 0046 08E0     		b	.L60
 1136              	.L57:
ARM GAS  /tmp/cc3rNxot.s 			page 28


 437:Src/usbd_conf.c ****     case HAL_BUSY :
 438:Src/usbd_conf.c ****       usb_status = USBD_BUSY;
 1137              		.loc 1 438 18
 1138 0048 0123     		movs	r3, #1
 1139 004a FB73     		strb	r3, [r7, #15]
 439:Src/usbd_conf.c ****     break;
 1140              		.loc 1 439 5
 1141 004c 05E0     		b	.L60
 1142              	.L55:
 440:Src/usbd_conf.c ****     case HAL_TIMEOUT :
 441:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 1143              		.loc 1 441 18
 1144 004e 0223     		movs	r3, #2
 1145 0050 FB73     		strb	r3, [r7, #15]
 442:Src/usbd_conf.c ****     break;
 1146              		.loc 1 442 5
 1147 0052 02E0     		b	.L60
 1148              	.L54:
 443:Src/usbd_conf.c ****     default :
 444:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 1149              		.loc 1 444 18
 1150 0054 0223     		movs	r3, #2
 1151 0056 FB73     		strb	r3, [r7, #15]
 445:Src/usbd_conf.c ****     break;
 1152              		.loc 1 445 5
 1153 0058 00BF     		nop
 1154              	.L60:
 446:Src/usbd_conf.c ****   }
 447:Src/usbd_conf.c ****   return usb_status;
 1155              		.loc 1 447 10
 1156 005a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 448:Src/usbd_conf.c **** }
 1157              		.loc 1 448 1
 1158 005c 1846     		mov	r0, r3
 1159 005e 1037     		adds	r7, r7, #16
 1160              	.LCFI83:
 1161              		.cfi_def_cfa_offset 8
 1162 0060 BD46     		mov	sp, r7
 1163              	.LCFI84:
 1164              		.cfi_def_cfa_register 13
 1165              		@ sp needed
 1166 0062 80BD     		pop	{r7, pc}
 1167              		.cfi_endproc
 1168              	.LFE149:
 1170              		.section	.text.USBD_LL_OpenEP,"ax",%progbits
 1171              		.align	1
 1172              		.global	USBD_LL_OpenEP
 1173              		.syntax unified
 1174              		.thumb
 1175              		.thumb_func
 1176              		.fpu fpv4-sp-d16
 1178              	USBD_LL_OpenEP:
 1179              	.LFB150:
 449:Src/usbd_conf.c **** 
 450:Src/usbd_conf.c **** /**
 451:Src/usbd_conf.c ****   * @brief  Opens an endpoint of the low level driver.
 452:Src/usbd_conf.c ****   * @param  pdev: Device handle
ARM GAS  /tmp/cc3rNxot.s 			page 29


 453:Src/usbd_conf.c ****   * @param  ep_addr: Endpoint number
 454:Src/usbd_conf.c ****   * @param  ep_type: Endpoint type
 455:Src/usbd_conf.c ****   * @param  ep_mps: Endpoint max packet size
 456:Src/usbd_conf.c ****   * @retval USBD status
 457:Src/usbd_conf.c ****   */
 458:Src/usbd_conf.c **** USBD_StatusTypeDef USBD_LL_OpenEP(USBD_HandleTypeDef *pdev, uint8_t ep_addr, uint8_t ep_type, uint1
 459:Src/usbd_conf.c **** {
 1180              		.loc 1 459 1
 1181              		.cfi_startproc
 1182              		@ args = 0, pretend = 0, frame = 16
 1183              		@ frame_needed = 1, uses_anonymous_args = 0
 1184 0000 80B5     		push	{r7, lr}
 1185              	.LCFI85:
 1186              		.cfi_def_cfa_offset 8
 1187              		.cfi_offset 7, -8
 1188              		.cfi_offset 14, -4
 1189 0002 84B0     		sub	sp, sp, #16
 1190              	.LCFI86:
 1191              		.cfi_def_cfa_offset 24
 1192 0004 00AF     		add	r7, sp, #0
 1193              	.LCFI87:
 1194              		.cfi_def_cfa_register 7
 1195 0006 7860     		str	r0, [r7, #4]
 1196 0008 0846     		mov	r0, r1
 1197 000a 1146     		mov	r1, r2
 1198 000c 1A46     		mov	r2, r3
 1199 000e 0346     		mov	r3, r0
 1200 0010 FB70     		strb	r3, [r7, #3]
 1201 0012 0B46     		mov	r3, r1
 1202 0014 BB70     		strb	r3, [r7, #2]
 1203 0016 1346     		mov	r3, r2	@ movhi
 1204 0018 3B80     		strh	r3, [r7]	@ movhi
 460:Src/usbd_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 1205              		.loc 1 460 21
 1206 001a 0023     		movs	r3, #0
 1207 001c BB73     		strb	r3, [r7, #14]
 461:Src/usbd_conf.c ****   USBD_StatusTypeDef usb_status = USBD_OK;
 1208              		.loc 1 461 22
 1209 001e 0023     		movs	r3, #0
 1210 0020 FB73     		strb	r3, [r7, #15]
 462:Src/usbd_conf.c **** 
 463:Src/usbd_conf.c ****   hal_status = HAL_PCD_EP_Open(pdev->pData, ep_addr, ep_mps, ep_type);
 1211              		.loc 1 463 36
 1212 0022 7B68     		ldr	r3, [r7, #4]
 1213 0024 D3F8C002 		ldr	r0, [r3, #704]
 1214              		.loc 1 463 16
 1215 0028 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 1216 002a 3A88     		ldrh	r2, [r7]
 1217 002c F978     		ldrb	r1, [r7, #3]	@ zero_extendqisi2
 1218 002e FFF7FEFF 		bl	HAL_PCD_EP_Open
 1219 0032 0346     		mov	r3, r0
 1220 0034 BB73     		strb	r3, [r7, #14]
 464:Src/usbd_conf.c **** 
 465:Src/usbd_conf.c ****   switch (hal_status) {
 1221              		.loc 1 465 3
 1222 0036 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1223 0038 032B     		cmp	r3, #3
ARM GAS  /tmp/cc3rNxot.s 			page 30


 1224 003a 17D8     		bhi	.L63
 1225 003c 01A2     		adr	r2, .L65
 1226 003e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1227 0042 00BF     		.p2align 2
 1228              	.L65:
 1229 0044 55000000 		.word	.L68+1
 1230 0048 5B000000 		.word	.L67+1
 1231 004c 61000000 		.word	.L66+1
 1232 0050 67000000 		.word	.L64+1
 1233              		.p2align 1
 1234              	.L68:
 466:Src/usbd_conf.c ****     case HAL_OK :
 467:Src/usbd_conf.c ****       usb_status = USBD_OK;
 1235              		.loc 1 467 18
 1236 0054 0023     		movs	r3, #0
 1237 0056 FB73     		strb	r3, [r7, #15]
 468:Src/usbd_conf.c ****     break;
 1238              		.loc 1 468 5
 1239 0058 0BE0     		b	.L69
 1240              	.L67:
 469:Src/usbd_conf.c ****     case HAL_ERROR :
 470:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 1241              		.loc 1 470 18
 1242 005a 0223     		movs	r3, #2
 1243 005c FB73     		strb	r3, [r7, #15]
 471:Src/usbd_conf.c ****     break;
 1244              		.loc 1 471 5
 1245 005e 08E0     		b	.L69
 1246              	.L66:
 472:Src/usbd_conf.c ****     case HAL_BUSY :
 473:Src/usbd_conf.c ****       usb_status = USBD_BUSY;
 1247              		.loc 1 473 18
 1248 0060 0123     		movs	r3, #1
 1249 0062 FB73     		strb	r3, [r7, #15]
 474:Src/usbd_conf.c ****     break;
 1250              		.loc 1 474 5
 1251 0064 05E0     		b	.L69
 1252              	.L64:
 475:Src/usbd_conf.c ****     case HAL_TIMEOUT :
 476:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 1253              		.loc 1 476 18
 1254 0066 0223     		movs	r3, #2
 1255 0068 FB73     		strb	r3, [r7, #15]
 477:Src/usbd_conf.c ****     break;
 1256              		.loc 1 477 5
 1257 006a 02E0     		b	.L69
 1258              	.L63:
 478:Src/usbd_conf.c ****     default :
 479:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 1259              		.loc 1 479 18
 1260 006c 0223     		movs	r3, #2
 1261 006e FB73     		strb	r3, [r7, #15]
 480:Src/usbd_conf.c ****     break;
 1262              		.loc 1 480 5
 1263 0070 00BF     		nop
 1264              	.L69:
 481:Src/usbd_conf.c ****   }
ARM GAS  /tmp/cc3rNxot.s 			page 31


 482:Src/usbd_conf.c ****   return usb_status;
 1265              		.loc 1 482 10
 1266 0072 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 483:Src/usbd_conf.c **** }
 1267              		.loc 1 483 1
 1268 0074 1846     		mov	r0, r3
 1269 0076 1037     		adds	r7, r7, #16
 1270              	.LCFI88:
 1271              		.cfi_def_cfa_offset 8
 1272 0078 BD46     		mov	sp, r7
 1273              	.LCFI89:
 1274              		.cfi_def_cfa_register 13
 1275              		@ sp needed
 1276 007a 80BD     		pop	{r7, pc}
 1277              		.cfi_endproc
 1278              	.LFE150:
 1280              		.section	.text.USBD_LL_CloseEP,"ax",%progbits
 1281              		.align	1
 1282              		.global	USBD_LL_CloseEP
 1283              		.syntax unified
 1284              		.thumb
 1285              		.thumb_func
 1286              		.fpu fpv4-sp-d16
 1288              	USBD_LL_CloseEP:
 1289              	.LFB151:
 484:Src/usbd_conf.c **** 
 485:Src/usbd_conf.c **** /**
 486:Src/usbd_conf.c ****   * @brief  Closes an endpoint of the low level driver.
 487:Src/usbd_conf.c ****   * @param  pdev: Device handle
 488:Src/usbd_conf.c ****   * @param  ep_addr: Endpoint number
 489:Src/usbd_conf.c ****   * @retval USBD status
 490:Src/usbd_conf.c ****   */
 491:Src/usbd_conf.c **** USBD_StatusTypeDef USBD_LL_CloseEP(USBD_HandleTypeDef *pdev, uint8_t ep_addr)
 492:Src/usbd_conf.c **** {
 1290              		.loc 1 492 1
 1291              		.cfi_startproc
 1292              		@ args = 0, pretend = 0, frame = 16
 1293              		@ frame_needed = 1, uses_anonymous_args = 0
 1294 0000 80B5     		push	{r7, lr}
 1295              	.LCFI90:
 1296              		.cfi_def_cfa_offset 8
 1297              		.cfi_offset 7, -8
 1298              		.cfi_offset 14, -4
 1299 0002 84B0     		sub	sp, sp, #16
 1300              	.LCFI91:
 1301              		.cfi_def_cfa_offset 24
 1302 0004 00AF     		add	r7, sp, #0
 1303              	.LCFI92:
 1304              		.cfi_def_cfa_register 7
 1305 0006 7860     		str	r0, [r7, #4]
 1306 0008 0B46     		mov	r3, r1
 1307 000a FB70     		strb	r3, [r7, #3]
 493:Src/usbd_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 1308              		.loc 1 493 21
 1309 000c 0023     		movs	r3, #0
 1310 000e BB73     		strb	r3, [r7, #14]
 494:Src/usbd_conf.c ****   USBD_StatusTypeDef usb_status = USBD_OK;
ARM GAS  /tmp/cc3rNxot.s 			page 32


 1311              		.loc 1 494 22
 1312 0010 0023     		movs	r3, #0
 1313 0012 FB73     		strb	r3, [r7, #15]
 495:Src/usbd_conf.c ****   
 496:Src/usbd_conf.c ****   hal_status = HAL_PCD_EP_Close(pdev->pData, ep_addr);
 1314              		.loc 1 496 37
 1315 0014 7B68     		ldr	r3, [r7, #4]
 1316 0016 D3F8C032 		ldr	r3, [r3, #704]
 1317              		.loc 1 496 16
 1318 001a FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1319 001c 1146     		mov	r1, r2
 1320 001e 1846     		mov	r0, r3
 1321 0020 FFF7FEFF 		bl	HAL_PCD_EP_Close
 1322 0024 0346     		mov	r3, r0
 1323 0026 BB73     		strb	r3, [r7, #14]
 497:Src/usbd_conf.c ****       
 498:Src/usbd_conf.c ****   switch (hal_status) {
 1324              		.loc 1 498 3
 1325 0028 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1326 002a 032B     		cmp	r3, #3
 1327 002c 16D8     		bhi	.L72
 1328 002e 01A2     		adr	r2, .L74
 1329 0030 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1330              		.p2align 2
 1331              	.L74:
 1332 0034 45000000 		.word	.L77+1
 1333 0038 4B000000 		.word	.L76+1
 1334 003c 51000000 		.word	.L75+1
 1335 0040 57000000 		.word	.L73+1
 1336              		.p2align 1
 1337              	.L77:
 499:Src/usbd_conf.c ****     case HAL_OK :
 500:Src/usbd_conf.c ****       usb_status = USBD_OK;
 1338              		.loc 1 500 18
 1339 0044 0023     		movs	r3, #0
 1340 0046 FB73     		strb	r3, [r7, #15]
 501:Src/usbd_conf.c ****     break;
 1341              		.loc 1 501 5
 1342 0048 0BE0     		b	.L78
 1343              	.L76:
 502:Src/usbd_conf.c ****     case HAL_ERROR :
 503:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 1344              		.loc 1 503 18
 1345 004a 0223     		movs	r3, #2
 1346 004c FB73     		strb	r3, [r7, #15]
 504:Src/usbd_conf.c ****     break;
 1347              		.loc 1 504 5
 1348 004e 08E0     		b	.L78
 1349              	.L75:
 505:Src/usbd_conf.c ****     case HAL_BUSY :
 506:Src/usbd_conf.c ****       usb_status = USBD_BUSY;
 1350              		.loc 1 506 18
 1351 0050 0123     		movs	r3, #1
 1352 0052 FB73     		strb	r3, [r7, #15]
 507:Src/usbd_conf.c ****     break;
 1353              		.loc 1 507 5
 1354 0054 05E0     		b	.L78
ARM GAS  /tmp/cc3rNxot.s 			page 33


 1355              	.L73:
 508:Src/usbd_conf.c ****     case HAL_TIMEOUT :
 509:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 1356              		.loc 1 509 18
 1357 0056 0223     		movs	r3, #2
 1358 0058 FB73     		strb	r3, [r7, #15]
 510:Src/usbd_conf.c ****     break;
 1359              		.loc 1 510 5
 1360 005a 02E0     		b	.L78
 1361              	.L72:
 511:Src/usbd_conf.c ****     default :
 512:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 1362              		.loc 1 512 18
 1363 005c 0223     		movs	r3, #2
 1364 005e FB73     		strb	r3, [r7, #15]
 513:Src/usbd_conf.c ****     break;
 1365              		.loc 1 513 5
 1366 0060 00BF     		nop
 1367              	.L78:
 514:Src/usbd_conf.c ****   }
 515:Src/usbd_conf.c ****   return usb_status;  
 1368              		.loc 1 515 10
 1369 0062 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 516:Src/usbd_conf.c **** }
 1370              		.loc 1 516 1
 1371 0064 1846     		mov	r0, r3
 1372 0066 1037     		adds	r7, r7, #16
 1373              	.LCFI93:
 1374              		.cfi_def_cfa_offset 8
 1375 0068 BD46     		mov	sp, r7
 1376              	.LCFI94:
 1377              		.cfi_def_cfa_register 13
 1378              		@ sp needed
 1379 006a 80BD     		pop	{r7, pc}
 1380              		.cfi_endproc
 1381              	.LFE151:
 1383              		.section	.text.USBD_LL_FlushEP,"ax",%progbits
 1384              		.align	1
 1385              		.global	USBD_LL_FlushEP
 1386              		.syntax unified
 1387              		.thumb
 1388              		.thumb_func
 1389              		.fpu fpv4-sp-d16
 1391              	USBD_LL_FlushEP:
 1392              	.LFB152:
 517:Src/usbd_conf.c **** 
 518:Src/usbd_conf.c **** /**
 519:Src/usbd_conf.c ****   * @brief  Flushes an endpoint of the Low Level Driver.
 520:Src/usbd_conf.c ****   * @param  pdev: Device handle
 521:Src/usbd_conf.c ****   * @param  ep_addr: Endpoint number
 522:Src/usbd_conf.c ****   * @retval USBD status
 523:Src/usbd_conf.c ****   */
 524:Src/usbd_conf.c **** USBD_StatusTypeDef USBD_LL_FlushEP(USBD_HandleTypeDef *pdev, uint8_t ep_addr)
 525:Src/usbd_conf.c **** {
 1393              		.loc 1 525 1
 1394              		.cfi_startproc
 1395              		@ args = 0, pretend = 0, frame = 16
ARM GAS  /tmp/cc3rNxot.s 			page 34


 1396              		@ frame_needed = 1, uses_anonymous_args = 0
 1397 0000 80B5     		push	{r7, lr}
 1398              	.LCFI95:
 1399              		.cfi_def_cfa_offset 8
 1400              		.cfi_offset 7, -8
 1401              		.cfi_offset 14, -4
 1402 0002 84B0     		sub	sp, sp, #16
 1403              	.LCFI96:
 1404              		.cfi_def_cfa_offset 24
 1405 0004 00AF     		add	r7, sp, #0
 1406              	.LCFI97:
 1407              		.cfi_def_cfa_register 7
 1408 0006 7860     		str	r0, [r7, #4]
 1409 0008 0B46     		mov	r3, r1
 1410 000a FB70     		strb	r3, [r7, #3]
 526:Src/usbd_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 1411              		.loc 1 526 21
 1412 000c 0023     		movs	r3, #0
 1413 000e BB73     		strb	r3, [r7, #14]
 527:Src/usbd_conf.c ****   USBD_StatusTypeDef usb_status = USBD_OK;
 1414              		.loc 1 527 22
 1415 0010 0023     		movs	r3, #0
 1416 0012 FB73     		strb	r3, [r7, #15]
 528:Src/usbd_conf.c ****   
 529:Src/usbd_conf.c ****   hal_status = HAL_PCD_EP_Flush(pdev->pData, ep_addr);
 1417              		.loc 1 529 37
 1418 0014 7B68     		ldr	r3, [r7, #4]
 1419 0016 D3F8C032 		ldr	r3, [r3, #704]
 1420              		.loc 1 529 16
 1421 001a FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1422 001c 1146     		mov	r1, r2
 1423 001e 1846     		mov	r0, r3
 1424 0020 FFF7FEFF 		bl	HAL_PCD_EP_Flush
 1425 0024 0346     		mov	r3, r0
 1426 0026 BB73     		strb	r3, [r7, #14]
 530:Src/usbd_conf.c ****       
 531:Src/usbd_conf.c ****   switch (hal_status) {
 1427              		.loc 1 531 3
 1428 0028 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1429 002a 032B     		cmp	r3, #3
 1430 002c 16D8     		bhi	.L81
 1431 002e 01A2     		adr	r2, .L83
 1432 0030 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1433              		.p2align 2
 1434              	.L83:
 1435 0034 45000000 		.word	.L86+1
 1436 0038 4B000000 		.word	.L85+1
 1437 003c 51000000 		.word	.L84+1
 1438 0040 57000000 		.word	.L82+1
 1439              		.p2align 1
 1440              	.L86:
 532:Src/usbd_conf.c ****     case HAL_OK :
 533:Src/usbd_conf.c ****       usb_status = USBD_OK;
 1441              		.loc 1 533 18
 1442 0044 0023     		movs	r3, #0
 1443 0046 FB73     		strb	r3, [r7, #15]
 534:Src/usbd_conf.c ****     break;
ARM GAS  /tmp/cc3rNxot.s 			page 35


 1444              		.loc 1 534 5
 1445 0048 0BE0     		b	.L87
 1446              	.L85:
 535:Src/usbd_conf.c ****     case HAL_ERROR :
 536:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 1447              		.loc 1 536 18
 1448 004a 0223     		movs	r3, #2
 1449 004c FB73     		strb	r3, [r7, #15]
 537:Src/usbd_conf.c ****     break;
 1450              		.loc 1 537 5
 1451 004e 08E0     		b	.L87
 1452              	.L84:
 538:Src/usbd_conf.c ****     case HAL_BUSY :
 539:Src/usbd_conf.c ****       usb_status = USBD_BUSY;
 1453              		.loc 1 539 18
 1454 0050 0123     		movs	r3, #1
 1455 0052 FB73     		strb	r3, [r7, #15]
 540:Src/usbd_conf.c ****     break;
 1456              		.loc 1 540 5
 1457 0054 05E0     		b	.L87
 1458              	.L82:
 541:Src/usbd_conf.c ****     case HAL_TIMEOUT :
 542:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 1459              		.loc 1 542 18
 1460 0056 0223     		movs	r3, #2
 1461 0058 FB73     		strb	r3, [r7, #15]
 543:Src/usbd_conf.c ****     break;
 1462              		.loc 1 543 5
 1463 005a 02E0     		b	.L87
 1464              	.L81:
 544:Src/usbd_conf.c ****     default :
 545:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 1465              		.loc 1 545 18
 1466 005c 0223     		movs	r3, #2
 1467 005e FB73     		strb	r3, [r7, #15]
 546:Src/usbd_conf.c ****     break;
 1468              		.loc 1 546 5
 1469 0060 00BF     		nop
 1470              	.L87:
 547:Src/usbd_conf.c ****   }
 548:Src/usbd_conf.c ****   return usb_status;  
 1471              		.loc 1 548 10
 1472 0062 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 549:Src/usbd_conf.c **** }
 1473              		.loc 1 549 1
 1474 0064 1846     		mov	r0, r3
 1475 0066 1037     		adds	r7, r7, #16
 1476              	.LCFI98:
 1477              		.cfi_def_cfa_offset 8
 1478 0068 BD46     		mov	sp, r7
 1479              	.LCFI99:
 1480              		.cfi_def_cfa_register 13
 1481              		@ sp needed
 1482 006a 80BD     		pop	{r7, pc}
 1483              		.cfi_endproc
 1484              	.LFE152:
 1486              		.section	.text.USBD_LL_StallEP,"ax",%progbits
ARM GAS  /tmp/cc3rNxot.s 			page 36


 1487              		.align	1
 1488              		.global	USBD_LL_StallEP
 1489              		.syntax unified
 1490              		.thumb
 1491              		.thumb_func
 1492              		.fpu fpv4-sp-d16
 1494              	USBD_LL_StallEP:
 1495              	.LFB153:
 550:Src/usbd_conf.c **** 
 551:Src/usbd_conf.c **** /**
 552:Src/usbd_conf.c ****   * @brief  Sets a Stall condition on an endpoint of the Low Level Driver.
 553:Src/usbd_conf.c ****   * @param  pdev: Device handle
 554:Src/usbd_conf.c ****   * @param  ep_addr: Endpoint number
 555:Src/usbd_conf.c ****   * @retval USBD status
 556:Src/usbd_conf.c ****   */
 557:Src/usbd_conf.c **** USBD_StatusTypeDef USBD_LL_StallEP(USBD_HandleTypeDef *pdev, uint8_t ep_addr)
 558:Src/usbd_conf.c **** {
 1496              		.loc 1 558 1
 1497              		.cfi_startproc
 1498              		@ args = 0, pretend = 0, frame = 16
 1499              		@ frame_needed = 1, uses_anonymous_args = 0
 1500 0000 80B5     		push	{r7, lr}
 1501              	.LCFI100:
 1502              		.cfi_def_cfa_offset 8
 1503              		.cfi_offset 7, -8
 1504              		.cfi_offset 14, -4
 1505 0002 84B0     		sub	sp, sp, #16
 1506              	.LCFI101:
 1507              		.cfi_def_cfa_offset 24
 1508 0004 00AF     		add	r7, sp, #0
 1509              	.LCFI102:
 1510              		.cfi_def_cfa_register 7
 1511 0006 7860     		str	r0, [r7, #4]
 1512 0008 0B46     		mov	r3, r1
 1513 000a FB70     		strb	r3, [r7, #3]
 559:Src/usbd_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 1514              		.loc 1 559 21
 1515 000c 0023     		movs	r3, #0
 1516 000e BB73     		strb	r3, [r7, #14]
 560:Src/usbd_conf.c ****   USBD_StatusTypeDef usb_status = USBD_OK;
 1517              		.loc 1 560 22
 1518 0010 0023     		movs	r3, #0
 1519 0012 FB73     		strb	r3, [r7, #15]
 561:Src/usbd_conf.c ****   
 562:Src/usbd_conf.c ****   hal_status = HAL_PCD_EP_SetStall(pdev->pData, ep_addr);
 1520              		.loc 1 562 40
 1521 0014 7B68     		ldr	r3, [r7, #4]
 1522 0016 D3F8C032 		ldr	r3, [r3, #704]
 1523              		.loc 1 562 16
 1524 001a FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1525 001c 1146     		mov	r1, r2
 1526 001e 1846     		mov	r0, r3
 1527 0020 FFF7FEFF 		bl	HAL_PCD_EP_SetStall
 1528 0024 0346     		mov	r3, r0
 1529 0026 BB73     		strb	r3, [r7, #14]
 563:Src/usbd_conf.c **** 
 564:Src/usbd_conf.c ****   switch (hal_status) {
ARM GAS  /tmp/cc3rNxot.s 			page 37


 1530              		.loc 1 564 3
 1531 0028 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1532 002a 032B     		cmp	r3, #3
 1533 002c 16D8     		bhi	.L90
 1534 002e 01A2     		adr	r2, .L92
 1535 0030 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1536              		.p2align 2
 1537              	.L92:
 1538 0034 45000000 		.word	.L95+1
 1539 0038 4B000000 		.word	.L94+1
 1540 003c 51000000 		.word	.L93+1
 1541 0040 57000000 		.word	.L91+1
 1542              		.p2align 1
 1543              	.L95:
 565:Src/usbd_conf.c ****     case HAL_OK :
 566:Src/usbd_conf.c ****       usb_status = USBD_OK;
 1544              		.loc 1 566 18
 1545 0044 0023     		movs	r3, #0
 1546 0046 FB73     		strb	r3, [r7, #15]
 567:Src/usbd_conf.c ****     break;
 1547              		.loc 1 567 5
 1548 0048 0BE0     		b	.L96
 1549              	.L94:
 568:Src/usbd_conf.c ****     case HAL_ERROR :
 569:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 1550              		.loc 1 569 18
 1551 004a 0223     		movs	r3, #2
 1552 004c FB73     		strb	r3, [r7, #15]
 570:Src/usbd_conf.c ****     break;
 1553              		.loc 1 570 5
 1554 004e 08E0     		b	.L96
 1555              	.L93:
 571:Src/usbd_conf.c ****     case HAL_BUSY :
 572:Src/usbd_conf.c ****       usb_status = USBD_BUSY;
 1556              		.loc 1 572 18
 1557 0050 0123     		movs	r3, #1
 1558 0052 FB73     		strb	r3, [r7, #15]
 573:Src/usbd_conf.c ****     break;
 1559              		.loc 1 573 5
 1560 0054 05E0     		b	.L96
 1561              	.L91:
 574:Src/usbd_conf.c ****     case HAL_TIMEOUT :
 575:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 1562              		.loc 1 575 18
 1563 0056 0223     		movs	r3, #2
 1564 0058 FB73     		strb	r3, [r7, #15]
 576:Src/usbd_conf.c ****     break;
 1565              		.loc 1 576 5
 1566 005a 02E0     		b	.L96
 1567              	.L90:
 577:Src/usbd_conf.c ****     default :
 578:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 1568              		.loc 1 578 18
 1569 005c 0223     		movs	r3, #2
 1570 005e FB73     		strb	r3, [r7, #15]
 579:Src/usbd_conf.c ****     break;
 1571              		.loc 1 579 5
ARM GAS  /tmp/cc3rNxot.s 			page 38


 1572 0060 00BF     		nop
 1573              	.L96:
 580:Src/usbd_conf.c ****   }
 581:Src/usbd_conf.c ****   return usb_status;  
 1574              		.loc 1 581 10
 1575 0062 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 582:Src/usbd_conf.c **** }
 1576              		.loc 1 582 1
 1577 0064 1846     		mov	r0, r3
 1578 0066 1037     		adds	r7, r7, #16
 1579              	.LCFI103:
 1580              		.cfi_def_cfa_offset 8
 1581 0068 BD46     		mov	sp, r7
 1582              	.LCFI104:
 1583              		.cfi_def_cfa_register 13
 1584              		@ sp needed
 1585 006a 80BD     		pop	{r7, pc}
 1586              		.cfi_endproc
 1587              	.LFE153:
 1589              		.section	.text.USBD_LL_ClearStallEP,"ax",%progbits
 1590              		.align	1
 1591              		.global	USBD_LL_ClearStallEP
 1592              		.syntax unified
 1593              		.thumb
 1594              		.thumb_func
 1595              		.fpu fpv4-sp-d16
 1597              	USBD_LL_ClearStallEP:
 1598              	.LFB154:
 583:Src/usbd_conf.c **** 
 584:Src/usbd_conf.c **** /**
 585:Src/usbd_conf.c ****   * @brief  Clears a Stall condition on an endpoint of the Low Level Driver.
 586:Src/usbd_conf.c ****   * @param  pdev: Device handle
 587:Src/usbd_conf.c ****   * @param  ep_addr: Endpoint number
 588:Src/usbd_conf.c ****   * @retval USBD status
 589:Src/usbd_conf.c ****   */
 590:Src/usbd_conf.c **** USBD_StatusTypeDef USBD_LL_ClearStallEP(USBD_HandleTypeDef *pdev, uint8_t ep_addr)
 591:Src/usbd_conf.c **** {
 1599              		.loc 1 591 1
 1600              		.cfi_startproc
 1601              		@ args = 0, pretend = 0, frame = 16
 1602              		@ frame_needed = 1, uses_anonymous_args = 0
 1603 0000 80B5     		push	{r7, lr}
 1604              	.LCFI105:
 1605              		.cfi_def_cfa_offset 8
 1606              		.cfi_offset 7, -8
 1607              		.cfi_offset 14, -4
 1608 0002 84B0     		sub	sp, sp, #16
 1609              	.LCFI106:
 1610              		.cfi_def_cfa_offset 24
 1611 0004 00AF     		add	r7, sp, #0
 1612              	.LCFI107:
 1613              		.cfi_def_cfa_register 7
 1614 0006 7860     		str	r0, [r7, #4]
 1615 0008 0B46     		mov	r3, r1
 1616 000a FB70     		strb	r3, [r7, #3]
 592:Src/usbd_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 1617              		.loc 1 592 21
ARM GAS  /tmp/cc3rNxot.s 			page 39


 1618 000c 0023     		movs	r3, #0
 1619 000e BB73     		strb	r3, [r7, #14]
 593:Src/usbd_conf.c ****   USBD_StatusTypeDef usb_status = USBD_OK;
 1620              		.loc 1 593 22
 1621 0010 0023     		movs	r3, #0
 1622 0012 FB73     		strb	r3, [r7, #15]
 594:Src/usbd_conf.c ****   
 595:Src/usbd_conf.c ****   hal_status = HAL_PCD_EP_ClrStall(pdev->pData, ep_addr);  
 1623              		.loc 1 595 40
 1624 0014 7B68     		ldr	r3, [r7, #4]
 1625 0016 D3F8C032 		ldr	r3, [r3, #704]
 1626              		.loc 1 595 16
 1627 001a FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1628 001c 1146     		mov	r1, r2
 1629 001e 1846     		mov	r0, r3
 1630 0020 FFF7FEFF 		bl	HAL_PCD_EP_ClrStall
 1631 0024 0346     		mov	r3, r0
 1632 0026 BB73     		strb	r3, [r7, #14]
 596:Src/usbd_conf.c ****      
 597:Src/usbd_conf.c ****   switch (hal_status) {
 1633              		.loc 1 597 3
 1634 0028 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1635 002a 032B     		cmp	r3, #3
 1636 002c 16D8     		bhi	.L99
 1637 002e 01A2     		adr	r2, .L101
 1638 0030 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1639              		.p2align 2
 1640              	.L101:
 1641 0034 45000000 		.word	.L104+1
 1642 0038 4B000000 		.word	.L103+1
 1643 003c 51000000 		.word	.L102+1
 1644 0040 57000000 		.word	.L100+1
 1645              		.p2align 1
 1646              	.L104:
 598:Src/usbd_conf.c ****     case HAL_OK :
 599:Src/usbd_conf.c ****       usb_status = USBD_OK;
 1647              		.loc 1 599 18
 1648 0044 0023     		movs	r3, #0
 1649 0046 FB73     		strb	r3, [r7, #15]
 600:Src/usbd_conf.c ****     break;
 1650              		.loc 1 600 5
 1651 0048 0BE0     		b	.L105
 1652              	.L103:
 601:Src/usbd_conf.c ****     case HAL_ERROR :
 602:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 1653              		.loc 1 602 18
 1654 004a 0223     		movs	r3, #2
 1655 004c FB73     		strb	r3, [r7, #15]
 603:Src/usbd_conf.c ****     break;
 1656              		.loc 1 603 5
 1657 004e 08E0     		b	.L105
 1658              	.L102:
 604:Src/usbd_conf.c ****     case HAL_BUSY :
 605:Src/usbd_conf.c ****       usb_status = USBD_BUSY;
 1659              		.loc 1 605 18
 1660 0050 0123     		movs	r3, #1
 1661 0052 FB73     		strb	r3, [r7, #15]
ARM GAS  /tmp/cc3rNxot.s 			page 40


 606:Src/usbd_conf.c ****     break;
 1662              		.loc 1 606 5
 1663 0054 05E0     		b	.L105
 1664              	.L100:
 607:Src/usbd_conf.c ****     case HAL_TIMEOUT :
 608:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 1665              		.loc 1 608 18
 1666 0056 0223     		movs	r3, #2
 1667 0058 FB73     		strb	r3, [r7, #15]
 609:Src/usbd_conf.c ****     break;
 1668              		.loc 1 609 5
 1669 005a 02E0     		b	.L105
 1670              	.L99:
 610:Src/usbd_conf.c ****     default :
 611:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 1671              		.loc 1 611 18
 1672 005c 0223     		movs	r3, #2
 1673 005e FB73     		strb	r3, [r7, #15]
 612:Src/usbd_conf.c ****     break;
 1674              		.loc 1 612 5
 1675 0060 00BF     		nop
 1676              	.L105:
 613:Src/usbd_conf.c ****   }
 614:Src/usbd_conf.c ****   return usb_status; 
 1677              		.loc 1 614 10
 1678 0062 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 615:Src/usbd_conf.c **** }
 1679              		.loc 1 615 1
 1680 0064 1846     		mov	r0, r3
 1681 0066 1037     		adds	r7, r7, #16
 1682              	.LCFI108:
 1683              		.cfi_def_cfa_offset 8
 1684 0068 BD46     		mov	sp, r7
 1685              	.LCFI109:
 1686              		.cfi_def_cfa_register 13
 1687              		@ sp needed
 1688 006a 80BD     		pop	{r7, pc}
 1689              		.cfi_endproc
 1690              	.LFE154:
 1692              		.section	.text.USBD_LL_IsStallEP,"ax",%progbits
 1693              		.align	1
 1694              		.global	USBD_LL_IsStallEP
 1695              		.syntax unified
 1696              		.thumb
 1697              		.thumb_func
 1698              		.fpu fpv4-sp-d16
 1700              	USBD_LL_IsStallEP:
 1701              	.LFB155:
 616:Src/usbd_conf.c **** 
 617:Src/usbd_conf.c **** /**
 618:Src/usbd_conf.c ****   * @brief  Returns Stall condition.
 619:Src/usbd_conf.c ****   * @param  pdev: Device handle
 620:Src/usbd_conf.c ****   * @param  ep_addr: Endpoint number
 621:Src/usbd_conf.c ****   * @retval Stall (1: Yes, 0: No)
 622:Src/usbd_conf.c ****   */
 623:Src/usbd_conf.c **** uint8_t USBD_LL_IsStallEP(USBD_HandleTypeDef *pdev, uint8_t ep_addr)
 624:Src/usbd_conf.c **** {
ARM GAS  /tmp/cc3rNxot.s 			page 41


 1702              		.loc 1 624 1
 1703              		.cfi_startproc
 1704              		@ args = 0, pretend = 0, frame = 16
 1705              		@ frame_needed = 1, uses_anonymous_args = 0
 1706              		@ link register save eliminated.
 1707 0000 80B4     		push	{r7}
 1708              	.LCFI110:
 1709              		.cfi_def_cfa_offset 4
 1710              		.cfi_offset 7, -4
 1711 0002 85B0     		sub	sp, sp, #20
 1712              	.LCFI111:
 1713              		.cfi_def_cfa_offset 24
 1714 0004 00AF     		add	r7, sp, #0
 1715              	.LCFI112:
 1716              		.cfi_def_cfa_register 7
 1717 0006 7860     		str	r0, [r7, #4]
 1718 0008 0B46     		mov	r3, r1
 1719 000a FB70     		strb	r3, [r7, #3]
 625:Src/usbd_conf.c ****   PCD_HandleTypeDef *hpcd = (PCD_HandleTypeDef*) pdev->pData;
 1720              		.loc 1 625 22
 1721 000c 7B68     		ldr	r3, [r7, #4]
 1722 000e D3F8C032 		ldr	r3, [r3, #704]
 1723 0012 FB60     		str	r3, [r7, #12]
 626:Src/usbd_conf.c ****   
 627:Src/usbd_conf.c ****   if((ep_addr & 0x80) == 0x80)
 1724              		.loc 1 627 23
 1725 0014 97F90330 		ldrsb	r3, [r7, #3]
 1726              		.loc 1 627 5
 1727 0018 002B     		cmp	r3, #0
 1728 001a 08DA     		bge	.L108
 628:Src/usbd_conf.c ****   {
 629:Src/usbd_conf.c ****     return hpcd->IN_ep[ep_addr & 0x7F].is_stall; 
 1729              		.loc 1 629 32
 1730 001c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1731 001e 03F07F03 		and	r3, r3, #127
 1732              		.loc 1 629 39
 1733 0022 FA68     		ldr	r2, [r7, #12]
 1734 0024 5B01     		lsls	r3, r3, #5
 1735 0026 1344     		add	r3, r3, r2
 1736 0028 2A33     		adds	r3, r3, #42
 1737 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1738 002c 08E0     		b	.L109
 1739              	.L108:
 630:Src/usbd_conf.c ****   }
 631:Src/usbd_conf.c ****   else
 632:Src/usbd_conf.c ****   {
 633:Src/usbd_conf.c ****     return hpcd->OUT_ep[ep_addr & 0x7F].is_stall; 
 1740              		.loc 1 633 33
 1741 002e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1742 0030 03F07F03 		and	r3, r3, #127
 1743              		.loc 1 633 40
 1744 0034 FA68     		ldr	r2, [r7, #12]
 1745 0036 5B01     		lsls	r3, r3, #5
 1746 0038 1344     		add	r3, r3, r2
 1747 003a 03F59573 		add	r3, r3, #298
 1748 003e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1749              	.L109:
ARM GAS  /tmp/cc3rNxot.s 			page 42


 634:Src/usbd_conf.c ****   }
 635:Src/usbd_conf.c **** }
 1750              		.loc 1 635 1
 1751 0040 1846     		mov	r0, r3
 1752 0042 1437     		adds	r7, r7, #20
 1753              	.LCFI113:
 1754              		.cfi_def_cfa_offset 4
 1755 0044 BD46     		mov	sp, r7
 1756              	.LCFI114:
 1757              		.cfi_def_cfa_register 13
 1758              		@ sp needed
 1759 0046 5DF8047B 		ldr	r7, [sp], #4
 1760              	.LCFI115:
 1761              		.cfi_restore 7
 1762              		.cfi_def_cfa_offset 0
 1763 004a 7047     		bx	lr
 1764              		.cfi_endproc
 1765              	.LFE155:
 1767              		.section	.text.USBD_LL_SetUSBAddress,"ax",%progbits
 1768              		.align	1
 1769              		.global	USBD_LL_SetUSBAddress
 1770              		.syntax unified
 1771              		.thumb
 1772              		.thumb_func
 1773              		.fpu fpv4-sp-d16
 1775              	USBD_LL_SetUSBAddress:
 1776              	.LFB156:
 636:Src/usbd_conf.c **** 
 637:Src/usbd_conf.c **** /**
 638:Src/usbd_conf.c ****   * @brief  Assigns a USB address to the device.
 639:Src/usbd_conf.c ****   * @param  pdev: Device handle
 640:Src/usbd_conf.c ****   * @param  dev_addr: Device address
 641:Src/usbd_conf.c ****   * @retval USBD status
 642:Src/usbd_conf.c ****   */
 643:Src/usbd_conf.c **** USBD_StatusTypeDef USBD_LL_SetUSBAddress(USBD_HandleTypeDef *pdev, uint8_t dev_addr)
 644:Src/usbd_conf.c **** {
 1777              		.loc 1 644 1
 1778              		.cfi_startproc
 1779              		@ args = 0, pretend = 0, frame = 16
 1780              		@ frame_needed = 1, uses_anonymous_args = 0
 1781 0000 80B5     		push	{r7, lr}
 1782              	.LCFI116:
 1783              		.cfi_def_cfa_offset 8
 1784              		.cfi_offset 7, -8
 1785              		.cfi_offset 14, -4
 1786 0002 84B0     		sub	sp, sp, #16
 1787              	.LCFI117:
 1788              		.cfi_def_cfa_offset 24
 1789 0004 00AF     		add	r7, sp, #0
 1790              	.LCFI118:
 1791              		.cfi_def_cfa_register 7
 1792 0006 7860     		str	r0, [r7, #4]
 1793 0008 0B46     		mov	r3, r1
 1794 000a FB70     		strb	r3, [r7, #3]
 645:Src/usbd_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 1795              		.loc 1 645 21
 1796 000c 0023     		movs	r3, #0
ARM GAS  /tmp/cc3rNxot.s 			page 43


 1797 000e BB73     		strb	r3, [r7, #14]
 646:Src/usbd_conf.c ****   USBD_StatusTypeDef usb_status = USBD_OK;
 1798              		.loc 1 646 22
 1799 0010 0023     		movs	r3, #0
 1800 0012 FB73     		strb	r3, [r7, #15]
 647:Src/usbd_conf.c ****   
 648:Src/usbd_conf.c ****   hal_status = HAL_PCD_SetAddress(pdev->pData, dev_addr);
 1801              		.loc 1 648 39
 1802 0014 7B68     		ldr	r3, [r7, #4]
 1803 0016 D3F8C032 		ldr	r3, [r3, #704]
 1804              		.loc 1 648 16
 1805 001a FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1806 001c 1146     		mov	r1, r2
 1807 001e 1846     		mov	r0, r3
 1808 0020 FFF7FEFF 		bl	HAL_PCD_SetAddress
 1809 0024 0346     		mov	r3, r0
 1810 0026 BB73     		strb	r3, [r7, #14]
 649:Src/usbd_conf.c ****      
 650:Src/usbd_conf.c ****   switch (hal_status) {
 1811              		.loc 1 650 3
 1812 0028 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1813 002a 032B     		cmp	r3, #3
 1814 002c 16D8     		bhi	.L111
 1815 002e 01A2     		adr	r2, .L113
 1816 0030 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1817              		.p2align 2
 1818              	.L113:
 1819 0034 45000000 		.word	.L116+1
 1820 0038 4B000000 		.word	.L115+1
 1821 003c 51000000 		.word	.L114+1
 1822 0040 57000000 		.word	.L112+1
 1823              		.p2align 1
 1824              	.L116:
 651:Src/usbd_conf.c ****     case HAL_OK :
 652:Src/usbd_conf.c ****       usb_status = USBD_OK;
 1825              		.loc 1 652 18
 1826 0044 0023     		movs	r3, #0
 1827 0046 FB73     		strb	r3, [r7, #15]
 653:Src/usbd_conf.c ****     break;
 1828              		.loc 1 653 5
 1829 0048 0BE0     		b	.L117
 1830              	.L115:
 654:Src/usbd_conf.c ****     case HAL_ERROR :
 655:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 1831              		.loc 1 655 18
 1832 004a 0223     		movs	r3, #2
 1833 004c FB73     		strb	r3, [r7, #15]
 656:Src/usbd_conf.c ****     break;
 1834              		.loc 1 656 5
 1835 004e 08E0     		b	.L117
 1836              	.L114:
 657:Src/usbd_conf.c ****     case HAL_BUSY :
 658:Src/usbd_conf.c ****       usb_status = USBD_BUSY;
 1837              		.loc 1 658 18
 1838 0050 0123     		movs	r3, #1
 1839 0052 FB73     		strb	r3, [r7, #15]
 659:Src/usbd_conf.c ****     break;
ARM GAS  /tmp/cc3rNxot.s 			page 44


 1840              		.loc 1 659 5
 1841 0054 05E0     		b	.L117
 1842              	.L112:
 660:Src/usbd_conf.c ****     case HAL_TIMEOUT :
 661:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 1843              		.loc 1 661 18
 1844 0056 0223     		movs	r3, #2
 1845 0058 FB73     		strb	r3, [r7, #15]
 662:Src/usbd_conf.c ****     break;
 1846              		.loc 1 662 5
 1847 005a 02E0     		b	.L117
 1848              	.L111:
 663:Src/usbd_conf.c ****     default :
 664:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 1849              		.loc 1 664 18
 1850 005c 0223     		movs	r3, #2
 1851 005e FB73     		strb	r3, [r7, #15]
 665:Src/usbd_conf.c ****     break;
 1852              		.loc 1 665 5
 1853 0060 00BF     		nop
 1854              	.L117:
 666:Src/usbd_conf.c ****   }
 667:Src/usbd_conf.c ****   return usb_status;  
 1855              		.loc 1 667 10
 1856 0062 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 668:Src/usbd_conf.c **** }
 1857              		.loc 1 668 1
 1858 0064 1846     		mov	r0, r3
 1859 0066 1037     		adds	r7, r7, #16
 1860              	.LCFI119:
 1861              		.cfi_def_cfa_offset 8
 1862 0068 BD46     		mov	sp, r7
 1863              	.LCFI120:
 1864              		.cfi_def_cfa_register 13
 1865              		@ sp needed
 1866 006a 80BD     		pop	{r7, pc}
 1867              		.cfi_endproc
 1868              	.LFE156:
 1870              		.section	.text.USBD_LL_Transmit,"ax",%progbits
 1871              		.align	1
 1872              		.global	USBD_LL_Transmit
 1873              		.syntax unified
 1874              		.thumb
 1875              		.thumb_func
 1876              		.fpu fpv4-sp-d16
 1878              	USBD_LL_Transmit:
 1879              	.LFB157:
 669:Src/usbd_conf.c **** 
 670:Src/usbd_conf.c **** /**
 671:Src/usbd_conf.c ****   * @brief  Transmits data over an endpoint.
 672:Src/usbd_conf.c ****   * @param  pdev: Device handle
 673:Src/usbd_conf.c ****   * @param  ep_addr: Endpoint number
 674:Src/usbd_conf.c ****   * @param  pbuf: Pointer to data to be sent
 675:Src/usbd_conf.c ****   * @param  size: Data size    
 676:Src/usbd_conf.c ****   * @retval USBD status
 677:Src/usbd_conf.c ****   */
 678:Src/usbd_conf.c **** USBD_StatusTypeDef USBD_LL_Transmit(USBD_HandleTypeDef *pdev, uint8_t ep_addr, uint8_t *pbuf, uint1
ARM GAS  /tmp/cc3rNxot.s 			page 45


 679:Src/usbd_conf.c **** {
 1880              		.loc 1 679 1
 1881              		.cfi_startproc
 1882              		@ args = 0, pretend = 0, frame = 24
 1883              		@ frame_needed = 1, uses_anonymous_args = 0
 1884 0000 80B5     		push	{r7, lr}
 1885              	.LCFI121:
 1886              		.cfi_def_cfa_offset 8
 1887              		.cfi_offset 7, -8
 1888              		.cfi_offset 14, -4
 1889 0002 86B0     		sub	sp, sp, #24
 1890              	.LCFI122:
 1891              		.cfi_def_cfa_offset 32
 1892 0004 00AF     		add	r7, sp, #0
 1893              	.LCFI123:
 1894              		.cfi_def_cfa_register 7
 1895 0006 F860     		str	r0, [r7, #12]
 1896 0008 7A60     		str	r2, [r7, #4]
 1897 000a 1A46     		mov	r2, r3
 1898 000c 0B46     		mov	r3, r1
 1899 000e FB72     		strb	r3, [r7, #11]
 1900 0010 1346     		mov	r3, r2	@ movhi
 1901 0012 3B81     		strh	r3, [r7, #8]	@ movhi
 680:Src/usbd_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 1902              		.loc 1 680 21
 1903 0014 0023     		movs	r3, #0
 1904 0016 BB75     		strb	r3, [r7, #22]
 681:Src/usbd_conf.c ****   USBD_StatusTypeDef usb_status = USBD_OK;
 1905              		.loc 1 681 22
 1906 0018 0023     		movs	r3, #0
 1907 001a FB75     		strb	r3, [r7, #23]
 682:Src/usbd_conf.c **** 
 683:Src/usbd_conf.c ****   hal_status = HAL_PCD_EP_Transmit(pdev->pData, ep_addr, pbuf, size);
 1908              		.loc 1 683 40
 1909 001c FB68     		ldr	r3, [r7, #12]
 1910 001e D3F8C002 		ldr	r0, [r3, #704]
 1911              		.loc 1 683 16
 1912 0022 3B89     		ldrh	r3, [r7, #8]
 1913 0024 F97A     		ldrb	r1, [r7, #11]	@ zero_extendqisi2
 1914 0026 7A68     		ldr	r2, [r7, #4]
 1915 0028 FFF7FEFF 		bl	HAL_PCD_EP_Transmit
 1916 002c 0346     		mov	r3, r0
 1917 002e BB75     		strb	r3, [r7, #22]
 684:Src/usbd_conf.c ****      
 685:Src/usbd_conf.c ****   switch (hal_status) {
 1918              		.loc 1 685 3
 1919 0030 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 1920 0032 032B     		cmp	r3, #3
 1921 0034 16D8     		bhi	.L120
 1922 0036 01A2     		adr	r2, .L122
 1923 0038 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1924              		.p2align 2
 1925              	.L122:
 1926 003c 4D000000 		.word	.L125+1
 1927 0040 53000000 		.word	.L124+1
 1928 0044 59000000 		.word	.L123+1
 1929 0048 5F000000 		.word	.L121+1
ARM GAS  /tmp/cc3rNxot.s 			page 46


 1930              		.p2align 1
 1931              	.L125:
 686:Src/usbd_conf.c ****     case HAL_OK :
 687:Src/usbd_conf.c ****       usb_status = USBD_OK;
 1932              		.loc 1 687 18
 1933 004c 0023     		movs	r3, #0
 1934 004e FB75     		strb	r3, [r7, #23]
 688:Src/usbd_conf.c ****     break;
 1935              		.loc 1 688 5
 1936 0050 0BE0     		b	.L126
 1937              	.L124:
 689:Src/usbd_conf.c ****     case HAL_ERROR :
 690:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 1938              		.loc 1 690 18
 1939 0052 0223     		movs	r3, #2
 1940 0054 FB75     		strb	r3, [r7, #23]
 691:Src/usbd_conf.c ****     break;
 1941              		.loc 1 691 5
 1942 0056 08E0     		b	.L126
 1943              	.L123:
 692:Src/usbd_conf.c ****     case HAL_BUSY :
 693:Src/usbd_conf.c ****       usb_status = USBD_BUSY;
 1944              		.loc 1 693 18
 1945 0058 0123     		movs	r3, #1
 1946 005a FB75     		strb	r3, [r7, #23]
 694:Src/usbd_conf.c ****     break;
 1947              		.loc 1 694 5
 1948 005c 05E0     		b	.L126
 1949              	.L121:
 695:Src/usbd_conf.c ****     case HAL_TIMEOUT :
 696:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 1950              		.loc 1 696 18
 1951 005e 0223     		movs	r3, #2
 1952 0060 FB75     		strb	r3, [r7, #23]
 697:Src/usbd_conf.c ****     break;
 1953              		.loc 1 697 5
 1954 0062 02E0     		b	.L126
 1955              	.L120:
 698:Src/usbd_conf.c ****     default :
 699:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 1956              		.loc 1 699 18
 1957 0064 0223     		movs	r3, #2
 1958 0066 FB75     		strb	r3, [r7, #23]
 700:Src/usbd_conf.c ****     break;
 1959              		.loc 1 700 5
 1960 0068 00BF     		nop
 1961              	.L126:
 701:Src/usbd_conf.c ****   }
 702:Src/usbd_conf.c ****   return usb_status;    
 1962              		.loc 1 702 10
 1963 006a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 703:Src/usbd_conf.c **** }
 1964              		.loc 1 703 1
 1965 006c 1846     		mov	r0, r3
 1966 006e 1837     		adds	r7, r7, #24
 1967              	.LCFI124:
 1968              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/cc3rNxot.s 			page 47


 1969 0070 BD46     		mov	sp, r7
 1970              	.LCFI125:
 1971              		.cfi_def_cfa_register 13
 1972              		@ sp needed
 1973 0072 80BD     		pop	{r7, pc}
 1974              		.cfi_endproc
 1975              	.LFE157:
 1977              		.section	.text.USBD_LL_PrepareReceive,"ax",%progbits
 1978              		.align	1
 1979              		.global	USBD_LL_PrepareReceive
 1980              		.syntax unified
 1981              		.thumb
 1982              		.thumb_func
 1983              		.fpu fpv4-sp-d16
 1985              	USBD_LL_PrepareReceive:
 1986              	.LFB158:
 704:Src/usbd_conf.c **** 
 705:Src/usbd_conf.c **** /**
 706:Src/usbd_conf.c ****   * @brief  Prepares an endpoint for reception.
 707:Src/usbd_conf.c ****   * @param  pdev: Device handle
 708:Src/usbd_conf.c ****   * @param  ep_addr: Endpoint number
 709:Src/usbd_conf.c ****   * @param  pbuf: Pointer to data to be received
 710:Src/usbd_conf.c ****   * @param  size: Data size
 711:Src/usbd_conf.c ****   * @retval USBD status
 712:Src/usbd_conf.c ****   */
 713:Src/usbd_conf.c **** USBD_StatusTypeDef USBD_LL_PrepareReceive(USBD_HandleTypeDef *pdev, uint8_t ep_addr, uint8_t *pbuf,
 714:Src/usbd_conf.c **** {
 1987              		.loc 1 714 1
 1988              		.cfi_startproc
 1989              		@ args = 0, pretend = 0, frame = 24
 1990              		@ frame_needed = 1, uses_anonymous_args = 0
 1991 0000 80B5     		push	{r7, lr}
 1992              	.LCFI126:
 1993              		.cfi_def_cfa_offset 8
 1994              		.cfi_offset 7, -8
 1995              		.cfi_offset 14, -4
 1996 0002 86B0     		sub	sp, sp, #24
 1997              	.LCFI127:
 1998              		.cfi_def_cfa_offset 32
 1999 0004 00AF     		add	r7, sp, #0
 2000              	.LCFI128:
 2001              		.cfi_def_cfa_register 7
 2002 0006 F860     		str	r0, [r7, #12]
 2003 0008 7A60     		str	r2, [r7, #4]
 2004 000a 1A46     		mov	r2, r3
 2005 000c 0B46     		mov	r3, r1
 2006 000e FB72     		strb	r3, [r7, #11]
 2007 0010 1346     		mov	r3, r2	@ movhi
 2008 0012 3B81     		strh	r3, [r7, #8]	@ movhi
 715:Src/usbd_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 2009              		.loc 1 715 21
 2010 0014 0023     		movs	r3, #0
 2011 0016 BB75     		strb	r3, [r7, #22]
 716:Src/usbd_conf.c ****   USBD_StatusTypeDef usb_status = USBD_OK;
 2012              		.loc 1 716 22
 2013 0018 0023     		movs	r3, #0
 2014 001a FB75     		strb	r3, [r7, #23]
ARM GAS  /tmp/cc3rNxot.s 			page 48


 717:Src/usbd_conf.c **** 
 718:Src/usbd_conf.c ****   hal_status = HAL_PCD_EP_Receive(pdev->pData, ep_addr, pbuf, size);
 2015              		.loc 1 718 39
 2016 001c FB68     		ldr	r3, [r7, #12]
 2017 001e D3F8C002 		ldr	r0, [r3, #704]
 2018              		.loc 1 718 16
 2019 0022 3B89     		ldrh	r3, [r7, #8]
 2020 0024 F97A     		ldrb	r1, [r7, #11]	@ zero_extendqisi2
 2021 0026 7A68     		ldr	r2, [r7, #4]
 2022 0028 FFF7FEFF 		bl	HAL_PCD_EP_Receive
 2023 002c 0346     		mov	r3, r0
 2024 002e BB75     		strb	r3, [r7, #22]
 719:Src/usbd_conf.c ****      
 720:Src/usbd_conf.c ****   switch (hal_status) {
 2025              		.loc 1 720 3
 2026 0030 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 2027 0032 032B     		cmp	r3, #3
 2028 0034 16D8     		bhi	.L129
 2029 0036 01A2     		adr	r2, .L131
 2030 0038 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2031              		.p2align 2
 2032              	.L131:
 2033 003c 4D000000 		.word	.L134+1
 2034 0040 53000000 		.word	.L133+1
 2035 0044 59000000 		.word	.L132+1
 2036 0048 5F000000 		.word	.L130+1
 2037              		.p2align 1
 2038              	.L134:
 721:Src/usbd_conf.c ****     case HAL_OK :
 722:Src/usbd_conf.c ****       usb_status = USBD_OK;
 2039              		.loc 1 722 18
 2040 004c 0023     		movs	r3, #0
 2041 004e FB75     		strb	r3, [r7, #23]
 723:Src/usbd_conf.c ****     break;
 2042              		.loc 1 723 5
 2043 0050 0BE0     		b	.L135
 2044              	.L133:
 724:Src/usbd_conf.c ****     case HAL_ERROR :
 725:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 2045              		.loc 1 725 18
 2046 0052 0223     		movs	r3, #2
 2047 0054 FB75     		strb	r3, [r7, #23]
 726:Src/usbd_conf.c ****     break;
 2048              		.loc 1 726 5
 2049 0056 08E0     		b	.L135
 2050              	.L132:
 727:Src/usbd_conf.c ****     case HAL_BUSY :
 728:Src/usbd_conf.c ****       usb_status = USBD_BUSY;
 2051              		.loc 1 728 18
 2052 0058 0123     		movs	r3, #1
 2053 005a FB75     		strb	r3, [r7, #23]
 729:Src/usbd_conf.c ****     break;
 2054              		.loc 1 729 5
 2055 005c 05E0     		b	.L135
 2056              	.L130:
 730:Src/usbd_conf.c ****     case HAL_TIMEOUT :
 731:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
ARM GAS  /tmp/cc3rNxot.s 			page 49


 2057              		.loc 1 731 18
 2058 005e 0223     		movs	r3, #2
 2059 0060 FB75     		strb	r3, [r7, #23]
 732:Src/usbd_conf.c ****     break;
 2060              		.loc 1 732 5
 2061 0062 02E0     		b	.L135
 2062              	.L129:
 733:Src/usbd_conf.c ****     default :
 734:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 2063              		.loc 1 734 18
 2064 0064 0223     		movs	r3, #2
 2065 0066 FB75     		strb	r3, [r7, #23]
 735:Src/usbd_conf.c ****     break;
 2066              		.loc 1 735 5
 2067 0068 00BF     		nop
 2068              	.L135:
 736:Src/usbd_conf.c ****   }
 737:Src/usbd_conf.c ****   return usb_status; 
 2069              		.loc 1 737 10
 2070 006a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 738:Src/usbd_conf.c **** }
 2071              		.loc 1 738 1
 2072 006c 1846     		mov	r0, r3
 2073 006e 1837     		adds	r7, r7, #24
 2074              	.LCFI129:
 2075              		.cfi_def_cfa_offset 8
 2076 0070 BD46     		mov	sp, r7
 2077              	.LCFI130:
 2078              		.cfi_def_cfa_register 13
 2079              		@ sp needed
 2080 0072 80BD     		pop	{r7, pc}
 2081              		.cfi_endproc
 2082              	.LFE158:
 2084              		.section	.text.USBD_LL_GetRxDataSize,"ax",%progbits
 2085              		.align	1
 2086              		.global	USBD_LL_GetRxDataSize
 2087              		.syntax unified
 2088              		.thumb
 2089              		.thumb_func
 2090              		.fpu fpv4-sp-d16
 2092              	USBD_LL_GetRxDataSize:
 2093              	.LFB159:
 739:Src/usbd_conf.c **** 
 740:Src/usbd_conf.c **** /**
 741:Src/usbd_conf.c ****   * @brief  Returns the last transfered packet size.
 742:Src/usbd_conf.c ****   * @param  pdev: Device handle
 743:Src/usbd_conf.c ****   * @param  ep_addr: Endpoint number
 744:Src/usbd_conf.c ****   * @retval Recived Data Size
 745:Src/usbd_conf.c ****   */
 746:Src/usbd_conf.c **** uint32_t USBD_LL_GetRxDataSize(USBD_HandleTypeDef *pdev, uint8_t ep_addr)
 747:Src/usbd_conf.c **** {
 2094              		.loc 1 747 1
 2095              		.cfi_startproc
 2096              		@ args = 0, pretend = 0, frame = 8
 2097              		@ frame_needed = 1, uses_anonymous_args = 0
 2098 0000 80B5     		push	{r7, lr}
 2099              	.LCFI131:
ARM GAS  /tmp/cc3rNxot.s 			page 50


 2100              		.cfi_def_cfa_offset 8
 2101              		.cfi_offset 7, -8
 2102              		.cfi_offset 14, -4
 2103 0002 82B0     		sub	sp, sp, #8
 2104              	.LCFI132:
 2105              		.cfi_def_cfa_offset 16
 2106 0004 00AF     		add	r7, sp, #0
 2107              	.LCFI133:
 2108              		.cfi_def_cfa_register 7
 2109 0006 7860     		str	r0, [r7, #4]
 2110 0008 0B46     		mov	r3, r1
 2111 000a FB70     		strb	r3, [r7, #3]
 748:Src/usbd_conf.c ****   return HAL_PCD_EP_GetRxCount((PCD_HandleTypeDef*) pdev->pData, ep_addr);
 2112              		.loc 1 748 57
 2113 000c 7B68     		ldr	r3, [r7, #4]
 2114 000e D3F8C032 		ldr	r3, [r3, #704]
 2115              		.loc 1 748 10
 2116 0012 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 2117 0014 1146     		mov	r1, r2
 2118 0016 1846     		mov	r0, r3
 2119 0018 FFF7FEFF 		bl	HAL_PCD_EP_GetRxCount
 2120 001c 0346     		mov	r3, r0
 749:Src/usbd_conf.c **** }
 2121              		.loc 1 749 1
 2122 001e 1846     		mov	r0, r3
 2123 0020 0837     		adds	r7, r7, #8
 2124              	.LCFI134:
 2125              		.cfi_def_cfa_offset 8
 2126 0022 BD46     		mov	sp, r7
 2127              	.LCFI135:
 2128              		.cfi_def_cfa_register 13
 2129              		@ sp needed
 2130 0024 80BD     		pop	{r7, pc}
 2131              		.cfi_endproc
 2132              	.LFE159:
 2134              		.section	.text.HAL_PCDEx_LPM_Callback,"ax",%progbits
 2135              		.align	1
 2136              		.global	HAL_PCDEx_LPM_Callback
 2137              		.syntax unified
 2138              		.thumb
 2139              		.thumb_func
 2140              		.fpu fpv4-sp-d16
 2142              	HAL_PCDEx_LPM_Callback:
 2143              	.LFB160:
 750:Src/usbd_conf.c **** 
 751:Src/usbd_conf.c **** /**
 752:Src/usbd_conf.c ****   * @brief  Send LPM message to user layer
 753:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 754:Src/usbd_conf.c ****   * @param  msg: LPM message
 755:Src/usbd_conf.c ****   * @retval None
 756:Src/usbd_conf.c ****   */
 757:Src/usbd_conf.c **** void HAL_PCDEx_LPM_Callback(PCD_HandleTypeDef *hpcd, PCD_LPM_MsgTypeDef msg)
 758:Src/usbd_conf.c **** {
 2144              		.loc 1 758 1
 2145              		.cfi_startproc
 2146              		@ args = 0, pretend = 0, frame = 8
 2147              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/cc3rNxot.s 			page 51


 2148 0000 80B5     		push	{r7, lr}
 2149              	.LCFI136:
 2150              		.cfi_def_cfa_offset 8
 2151              		.cfi_offset 7, -8
 2152              		.cfi_offset 14, -4
 2153 0002 82B0     		sub	sp, sp, #8
 2154              	.LCFI137:
 2155              		.cfi_def_cfa_offset 16
 2156 0004 00AF     		add	r7, sp, #0
 2157              	.LCFI138:
 2158              		.cfi_def_cfa_register 7
 2159 0006 7860     		str	r0, [r7, #4]
 2160 0008 0B46     		mov	r3, r1
 2161 000a FB70     		strb	r3, [r7, #3]
 759:Src/usbd_conf.c ****   switch (msg)
 2162              		.loc 1 759 3
 2163 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2164 000e 002B     		cmp	r3, #0
 2165 0010 02D0     		beq	.L140
 2166 0012 012B     		cmp	r3, #1
 2167 0014 13D0     		beq	.L141
 760:Src/usbd_conf.c ****   {
 761:Src/usbd_conf.c ****   case PCD_LPM_L0_ACTIVE:
 762:Src/usbd_conf.c ****     if (hpcd->Init.low_power_enable)
 763:Src/usbd_conf.c ****     {
 764:Src/usbd_conf.c ****       SystemClockConfig_Resume();
 765:Src/usbd_conf.c ****       
 766:Src/usbd_conf.c ****       /* Reset SLEEPDEEP bit of Cortex System Control Register. */
 767:Src/usbd_conf.c ****       SCB->SCR &= (uint32_t)~((uint32_t)(SCB_SCR_SLEEPDEEP_Msk | SCB_SCR_SLEEPONEXIT_Msk));
 768:Src/usbd_conf.c ****     }
 769:Src/usbd_conf.c ****     USBD_LL_Resume(hpcd->pData);
 770:Src/usbd_conf.c ****     break;
 771:Src/usbd_conf.c ****     
 772:Src/usbd_conf.c ****   case PCD_LPM_L1_ACTIVE:
 773:Src/usbd_conf.c ****     USBD_LL_Suspend(hpcd->pData);
 774:Src/usbd_conf.c ****     
 775:Src/usbd_conf.c ****     /* Enter in STOP mode. */
 776:Src/usbd_conf.c ****     if (hpcd->Init.low_power_enable)
 777:Src/usbd_conf.c ****     {   
 778:Src/usbd_conf.c ****       /* Set SLEEPDEEP bit and SleepOnExit of Cortex System Control Register. */
 779:Src/usbd_conf.c ****       SCB->SCR |= (uint32_t)((uint32_t)(SCB_SCR_SLEEPDEEP_Msk | SCB_SCR_SLEEPONEXIT_Msk));
 780:Src/usbd_conf.c ****     }
 781:Src/usbd_conf.c ****     break;   
 782:Src/usbd_conf.c ****   }
 783:Src/usbd_conf.c **** }
 2168              		.loc 1 783 1
 2169 0016 23E0     		b	.L146
 2170              	.L140:
 762:Src/usbd_conf.c ****     {
 2171              		.loc 1 762 19
 2172 0018 7B68     		ldr	r3, [r7, #4]
 2173 001a 9B69     		ldr	r3, [r3, #24]
 762:Src/usbd_conf.c ****     {
 2174              		.loc 1 762 8
 2175 001c 002B     		cmp	r3, #0
 2176 001e 07D0     		beq	.L143
 764:Src/usbd_conf.c ****       
ARM GAS  /tmp/cc3rNxot.s 			page 52


 2177              		.loc 1 764 7
 2178 0020 FFF7FEFF 		bl	SystemClockConfig_Resume
 767:Src/usbd_conf.c ****     }
 2179              		.loc 1 767 16
 2180 0024 104B     		ldr	r3, .L147
 2181 0026 1B69     		ldr	r3, [r3, #16]
 2182 0028 0F4A     		ldr	r2, .L147
 2183 002a 23F00603 		bic	r3, r3, #6
 2184 002e 1361     		str	r3, [r2, #16]
 2185              	.L143:
 769:Src/usbd_conf.c ****     break;
 2186              		.loc 1 769 24
 2187 0030 7B68     		ldr	r3, [r7, #4]
 2188 0032 D3F87032 		ldr	r3, [r3, #624]
 769:Src/usbd_conf.c ****     break;
 2189              		.loc 1 769 5
 2190 0036 1846     		mov	r0, r3
 2191 0038 FFF7FEFF 		bl	USBD_LL_Resume
 770:Src/usbd_conf.c ****     
 2192              		.loc 1 770 5
 2193 003c 10E0     		b	.L142
 2194              	.L141:
 773:Src/usbd_conf.c ****     
 2195              		.loc 1 773 25
 2196 003e 7B68     		ldr	r3, [r7, #4]
 2197 0040 D3F87032 		ldr	r3, [r3, #624]
 773:Src/usbd_conf.c ****     
 2198              		.loc 1 773 5
 2199 0044 1846     		mov	r0, r3
 2200 0046 FFF7FEFF 		bl	USBD_LL_Suspend
 776:Src/usbd_conf.c ****     {   
 2201              		.loc 1 776 19
 2202 004a 7B68     		ldr	r3, [r7, #4]
 2203 004c 9B69     		ldr	r3, [r3, #24]
 776:Src/usbd_conf.c ****     {   
 2204              		.loc 1 776 8
 2205 004e 002B     		cmp	r3, #0
 2206 0050 05D0     		beq	.L145
 779:Src/usbd_conf.c ****     }
 2207              		.loc 1 779 16
 2208 0052 054B     		ldr	r3, .L147
 2209 0054 1B69     		ldr	r3, [r3, #16]
 2210 0056 044A     		ldr	r2, .L147
 2211 0058 43F00603 		orr	r3, r3, #6
 2212 005c 1361     		str	r3, [r2, #16]
 2213              	.L145:
 781:Src/usbd_conf.c ****   }
 2214              		.loc 1 781 5
 2215 005e 00BF     		nop
 2216              	.L142:
 2217              	.L146:
 2218              		.loc 1 783 1
 2219 0060 00BF     		nop
 2220 0062 0837     		adds	r7, r7, #8
 2221              	.LCFI139:
 2222              		.cfi_def_cfa_offset 8
 2223 0064 BD46     		mov	sp, r7
ARM GAS  /tmp/cc3rNxot.s 			page 53


 2224              	.LCFI140:
 2225              		.cfi_def_cfa_register 13
 2226              		@ sp needed
 2227 0066 80BD     		pop	{r7, pc}
 2228              	.L148:
 2229              		.align	2
 2230              	.L147:
 2231 0068 00ED00E0 		.word	-536810240
 2232              		.cfi_endproc
 2233              	.LFE160:
 2235              		.section	.text.USBD_LL_Delay,"ax",%progbits
 2236              		.align	1
 2237              		.global	USBD_LL_Delay
 2238              		.syntax unified
 2239              		.thumb
 2240              		.thumb_func
 2241              		.fpu fpv4-sp-d16
 2243              	USBD_LL_Delay:
 2244              	.LFB161:
 784:Src/usbd_conf.c **** 
 785:Src/usbd_conf.c **** /**
 786:Src/usbd_conf.c ****   * @brief  Delays routine for the USB Device Library.
 787:Src/usbd_conf.c ****   * @param  Delay: Delay in ms
 788:Src/usbd_conf.c ****   * @retval None
 789:Src/usbd_conf.c ****   */
 790:Src/usbd_conf.c **** void USBD_LL_Delay(uint32_t Delay)
 791:Src/usbd_conf.c **** {
 2245              		.loc 1 791 1
 2246              		.cfi_startproc
 2247              		@ args = 0, pretend = 0, frame = 8
 2248              		@ frame_needed = 1, uses_anonymous_args = 0
 2249 0000 80B5     		push	{r7, lr}
 2250              	.LCFI141:
 2251              		.cfi_def_cfa_offset 8
 2252              		.cfi_offset 7, -8
 2253              		.cfi_offset 14, -4
 2254 0002 82B0     		sub	sp, sp, #8
 2255              	.LCFI142:
 2256              		.cfi_def_cfa_offset 16
 2257 0004 00AF     		add	r7, sp, #0
 2258              	.LCFI143:
 2259              		.cfi_def_cfa_register 7
 2260 0006 7860     		str	r0, [r7, #4]
 792:Src/usbd_conf.c ****   HAL_Delay(Delay);
 2261              		.loc 1 792 3
 2262 0008 7868     		ldr	r0, [r7, #4]
 2263 000a FFF7FEFF 		bl	HAL_Delay
 793:Src/usbd_conf.c **** }
 2264              		.loc 1 793 1
 2265 000e 00BF     		nop
 2266 0010 0837     		adds	r7, r7, #8
 2267              	.LCFI144:
 2268              		.cfi_def_cfa_offset 8
 2269 0012 BD46     		mov	sp, r7
 2270              	.LCFI145:
 2271              		.cfi_def_cfa_register 13
 2272              		@ sp needed
ARM GAS  /tmp/cc3rNxot.s 			page 54


 2273 0014 80BD     		pop	{r7, pc}
 2274              		.cfi_endproc
 2275              	.LFE161:
 2277              		.section	.text.USBD_static_malloc,"ax",%progbits
 2278              		.align	1
 2279              		.global	USBD_static_malloc
 2280              		.syntax unified
 2281              		.thumb
 2282              		.thumb_func
 2283              		.fpu fpv4-sp-d16
 2285              	USBD_static_malloc:
 2286              	.LFB162:
 794:Src/usbd_conf.c **** 
 795:Src/usbd_conf.c **** /**
 796:Src/usbd_conf.c ****   * @brief  Static single allocation.
 797:Src/usbd_conf.c ****   * @param  size: Size of allocated memory
 798:Src/usbd_conf.c ****   * @retval None
 799:Src/usbd_conf.c ****   */
 800:Src/usbd_conf.c **** void *USBD_static_malloc(uint32_t size)
 801:Src/usbd_conf.c **** {
 2287              		.loc 1 801 1
 2288              		.cfi_startproc
 2289              		@ args = 0, pretend = 0, frame = 8
 2290              		@ frame_needed = 1, uses_anonymous_args = 0
 2291              		@ link register save eliminated.
 2292 0000 80B4     		push	{r7}
 2293              	.LCFI146:
 2294              		.cfi_def_cfa_offset 4
 2295              		.cfi_offset 7, -4
 2296 0002 83B0     		sub	sp, sp, #12
 2297              	.LCFI147:
 2298              		.cfi_def_cfa_offset 16
 2299 0004 00AF     		add	r7, sp, #0
 2300              	.LCFI148:
 2301              		.cfi_def_cfa_register 7
 2302 0006 7860     		str	r0, [r7, #4]
 802:Src/usbd_conf.c ****   static uint32_t mem[(sizeof(USBD_CDC_HandleTypeDef)/4)+1];/* On 32-bit boundary */
 803:Src/usbd_conf.c ****   return mem;
 2303              		.loc 1 803 10
 2304 0008 034B     		ldr	r3, .L152
 804:Src/usbd_conf.c **** }
 2305              		.loc 1 804 1
 2306 000a 1846     		mov	r0, r3
 2307 000c 0C37     		adds	r7, r7, #12
 2308              	.LCFI149:
 2309              		.cfi_def_cfa_offset 4
 2310 000e BD46     		mov	sp, r7
 2311              	.LCFI150:
 2312              		.cfi_def_cfa_register 13
 2313              		@ sp needed
 2314 0010 5DF8047B 		ldr	r7, [sp], #4
 2315              	.LCFI151:
 2316              		.cfi_restore 7
 2317              		.cfi_def_cfa_offset 0
 2318 0014 7047     		bx	lr
 2319              	.L153:
 2320 0016 00BF     		.align	2
ARM GAS  /tmp/cc3rNxot.s 			page 55


 2321              	.L152:
 2322 0018 00000000 		.word	mem.10994
 2323              		.cfi_endproc
 2324              	.LFE162:
 2326              		.section	.text.USBD_static_free,"ax",%progbits
 2327              		.align	1
 2328              		.global	USBD_static_free
 2329              		.syntax unified
 2330              		.thumb
 2331              		.thumb_func
 2332              		.fpu fpv4-sp-d16
 2334              	USBD_static_free:
 2335              	.LFB163:
 805:Src/usbd_conf.c **** 
 806:Src/usbd_conf.c **** /**
 807:Src/usbd_conf.c ****   * @brief  Dummy memory free
 808:Src/usbd_conf.c ****   * @param  p: Pointer to allocated  memory address
 809:Src/usbd_conf.c ****   * @retval None
 810:Src/usbd_conf.c ****   */
 811:Src/usbd_conf.c **** void USBD_static_free(void *p)
 812:Src/usbd_conf.c **** {
 2336              		.loc 1 812 1
 2337              		.cfi_startproc
 2338              		@ args = 0, pretend = 0, frame = 8
 2339              		@ frame_needed = 1, uses_anonymous_args = 0
 2340              		@ link register save eliminated.
 2341 0000 80B4     		push	{r7}
 2342              	.LCFI152:
 2343              		.cfi_def_cfa_offset 4
 2344              		.cfi_offset 7, -4
 2345 0002 83B0     		sub	sp, sp, #12
 2346              	.LCFI153:
 2347              		.cfi_def_cfa_offset 16
 2348 0004 00AF     		add	r7, sp, #0
 2349              	.LCFI154:
 2350              		.cfi_def_cfa_register 7
 2351 0006 7860     		str	r0, [r7, #4]
 813:Src/usbd_conf.c **** 
 814:Src/usbd_conf.c **** }
 2352              		.loc 1 814 1
 2353 0008 00BF     		nop
 2354 000a 0C37     		adds	r7, r7, #12
 2355              	.LCFI155:
 2356              		.cfi_def_cfa_offset 4
 2357 000c BD46     		mov	sp, r7
 2358              	.LCFI156:
 2359              		.cfi_def_cfa_register 13
 2360              		@ sp needed
 2361 000e 5DF8047B 		ldr	r7, [sp], #4
 2362              	.LCFI157:
 2363              		.cfi_restore 7
 2364              		.cfi_def_cfa_offset 0
 2365 0012 7047     		bx	lr
 2366              		.cfi_endproc
 2367              	.LFE163:
 2369              		.section	.text.SystemClockConfig_Resume,"ax",%progbits
 2370              		.align	1
ARM GAS  /tmp/cc3rNxot.s 			page 56


 2371              		.syntax unified
 2372              		.thumb
 2373              		.thumb_func
 2374              		.fpu fpv4-sp-d16
 2376              	SystemClockConfig_Resume:
 2377              	.LFB164:
 815:Src/usbd_conf.c **** 
 816:Src/usbd_conf.c **** /* USER CODE BEGIN 5 */
 817:Src/usbd_conf.c **** /**
 818:Src/usbd_conf.c ****   * @brief  Configures system clock after wake-up from USB resume callBack:
 819:Src/usbd_conf.c ****   *         enable HSI, PLL and select PLL as system clock source.
 820:Src/usbd_conf.c ****   * @retval None
 821:Src/usbd_conf.c ****   */
 822:Src/usbd_conf.c **** static void SystemClockConfig_Resume(void)
 823:Src/usbd_conf.c **** {
 2378              		.loc 1 823 1
 2379              		.cfi_startproc
 2380              		@ args = 0, pretend = 0, frame = 0
 2381              		@ frame_needed = 1, uses_anonymous_args = 0
 2382 0000 80B5     		push	{r7, lr}
 2383              	.LCFI158:
 2384              		.cfi_def_cfa_offset 8
 2385              		.cfi_offset 7, -8
 2386              		.cfi_offset 14, -4
 2387 0002 00AF     		add	r7, sp, #0
 2388              	.LCFI159:
 2389              		.cfi_def_cfa_register 7
 824:Src/usbd_conf.c ****   SystemClock_Config();
 2390              		.loc 1 824 3
 2391 0004 FFF7FEFF 		bl	SystemClock_Config
 825:Src/usbd_conf.c **** }
 2392              		.loc 1 825 1
 2393 0008 00BF     		nop
 2394 000a 80BD     		pop	{r7, pc}
 2395              		.cfi_endproc
 2396              	.LFE164:
 2398              		.section	.bss.mem.10994,"aw",%nobits
 2399              		.align	2
 2402              	mem.10994:
 2403 0000 00000000 		.space	544
 2403      00000000 
 2403      00000000 
 2403      00000000 
 2403      00000000 
 2404              		.text
 2405              	.Letext0:
 2406              		.file 2 "/home/ilian/opt/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/include/machine/_default
 2407              		.file 3 "/home/ilian/opt/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/include/sys/_stdint.h"
 2408              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 2409              		.file 5 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/system_stm32l4xx.h"
 2410              		.file 6 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l433xx.h"
 2411              		.file 7 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l4xx.h"
 2412              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 2413              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_flash.h"
 2414              		.file 10 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usb.h"
 2415              		.file 11 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_pcd.h"
 2416              		.file 12 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
ARM GAS  /tmp/cc3rNxot.s 			page 57


 2417              		.file 13 "/home/ilian/opt/gcc-arm-none-eabi-9-2020-q2-update/lib/gcc/arm-none-eabi/9.3.1/include/s
 2418              		.file 14 "/home/ilian/opt/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/include/sys/_types.h"
 2419              		.file 15 "/home/ilian/opt/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/include/sys/reent.h"
 2420              		.file 16 "/home/ilian/opt/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/include/sys/lock.h"
 2421              		.file 17 "/home/ilian/opt/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/include/stdlib.h"
 2422              		.file 18 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_def.h"
 2423              		.file 19 "Middlewares/ST/STM32_USB_Device_Library/Class/CDC/Inc/usbd_cdc.h"
ARM GAS  /tmp/cc3rNxot.s 			page 58


DEFINED SYMBOLS
                            *ABS*:0000000000000000 usbd_conf.c
                            *COM*:0000000000000274 hpcd_USB_FS
     /tmp/cc3rNxot.s:19     .text.HAL_PCD_MspInit:0000000000000000 $t
     /tmp/cc3rNxot.s:27     .text.HAL_PCD_MspInit:0000000000000000 HAL_PCD_MspInit
     /tmp/cc3rNxot.s:88     .text.HAL_PCD_MspInit:0000000000000044 $d
     /tmp/cc3rNxot.s:94     .text.HAL_PCD_MspDeInit:0000000000000000 $t
     /tmp/cc3rNxot.s:101    .text.HAL_PCD_MspDeInit:0000000000000000 HAL_PCD_MspDeInit
     /tmp/cc3rNxot.s:149    .text.HAL_PCD_MspDeInit:000000000000002c $d
     /tmp/cc3rNxot.s:155    .text.HAL_PCD_SetupStageCallback:0000000000000000 $t
     /tmp/cc3rNxot.s:162    .text.HAL_PCD_SetupStageCallback:0000000000000000 HAL_PCD_SetupStageCallback
     /tmp/cc3rNxot.s:204    .text.HAL_PCD_DataOutStageCallback:0000000000000000 $t
     /tmp/cc3rNxot.s:211    .text.HAL_PCD_DataOutStageCallback:0000000000000000 HAL_PCD_DataOutStageCallback
     /tmp/cc3rNxot.s:258    .text.HAL_PCD_DataInStageCallback:0000000000000000 $t
     /tmp/cc3rNxot.s:265    .text.HAL_PCD_DataInStageCallback:0000000000000000 HAL_PCD_DataInStageCallback
     /tmp/cc3rNxot.s:312    .text.HAL_PCD_SOFCallback:0000000000000000 $t
     /tmp/cc3rNxot.s:319    .text.HAL_PCD_SOFCallback:0000000000000000 HAL_PCD_SOFCallback
     /tmp/cc3rNxot.s:357    .text.HAL_PCD_ResetCallback:0000000000000000 $t
     /tmp/cc3rNxot.s:364    .text.HAL_PCD_ResetCallback:0000000000000000 HAL_PCD_ResetCallback
     /tmp/cc3rNxot.s:422    .text.HAL_PCD_SuspendCallback:0000000000000000 $t
     /tmp/cc3rNxot.s:429    .text.HAL_PCD_SuspendCallback:0000000000000000 HAL_PCD_SuspendCallback
     /tmp/cc3rNxot.s:479    .text.HAL_PCD_SuspendCallback:0000000000000030 $d
     /tmp/cc3rNxot.s:484    .text.HAL_PCD_ResumeCallback:0000000000000000 $t
     /tmp/cc3rNxot.s:491    .text.HAL_PCD_ResumeCallback:0000000000000000 HAL_PCD_ResumeCallback
     /tmp/cc3rNxot.s:2376   .text.SystemClockConfig_Resume:0000000000000000 SystemClockConfig_Resume
     /tmp/cc3rNxot.s:543    .text.HAL_PCD_ResumeCallback:0000000000000034 $d
     /tmp/cc3rNxot.s:548    .text.HAL_PCD_ISOOUTIncompleteCallback:0000000000000000 $t
     /tmp/cc3rNxot.s:555    .text.HAL_PCD_ISOOUTIncompleteCallback:0000000000000000 HAL_PCD_ISOOUTIncompleteCallback
     /tmp/cc3rNxot.s:597    .text.HAL_PCD_ISOINIncompleteCallback:0000000000000000 $t
     /tmp/cc3rNxot.s:604    .text.HAL_PCD_ISOINIncompleteCallback:0000000000000000 HAL_PCD_ISOINIncompleteCallback
     /tmp/cc3rNxot.s:646    .text.HAL_PCD_ConnectCallback:0000000000000000 $t
     /tmp/cc3rNxot.s:653    .text.HAL_PCD_ConnectCallback:0000000000000000 HAL_PCD_ConnectCallback
     /tmp/cc3rNxot.s:691    .text.HAL_PCD_DisconnectCallback:0000000000000000 $t
     /tmp/cc3rNxot.s:698    .text.HAL_PCD_DisconnectCallback:0000000000000000 HAL_PCD_DisconnectCallback
     /tmp/cc3rNxot.s:736    .text.USBD_LL_Init:0000000000000000 $t
     /tmp/cc3rNxot.s:743    .text.USBD_LL_Init:0000000000000000 USBD_LL_Init
     /tmp/cc3rNxot.s:868    .text.USBD_LL_Init:00000000000000bc $d
     /tmp/cc3rNxot.s:874    .text.USBD_LL_DeInit:0000000000000000 $t
     /tmp/cc3rNxot.s:881    .text.USBD_LL_DeInit:0000000000000000 USBD_LL_DeInit
     /tmp/cc3rNxot.s:921    .text.USBD_LL_DeInit:000000000000002c $d
     /tmp/cc3rNxot.s:925    .text.USBD_LL_DeInit:000000000000003c $t
     /tmp/cc3rNxot.s:973    .text.USBD_LL_Start:0000000000000000 $t
     /tmp/cc3rNxot.s:980    .text.USBD_LL_Start:0000000000000000 USBD_LL_Start
     /tmp/cc3rNxot.s:1020   .text.USBD_LL_Start:000000000000002c $d
     /tmp/cc3rNxot.s:1024   .text.USBD_LL_Start:000000000000003c $t
     /tmp/cc3rNxot.s:1072   .text.USBD_LL_Stop:0000000000000000 $t
     /tmp/cc3rNxot.s:1079   .text.USBD_LL_Stop:0000000000000000 USBD_LL_Stop
     /tmp/cc3rNxot.s:1119   .text.USBD_LL_Stop:000000000000002c $d
     /tmp/cc3rNxot.s:1123   .text.USBD_LL_Stop:000000000000003c $t
     /tmp/cc3rNxot.s:1171   .text.USBD_LL_OpenEP:0000000000000000 $t
     /tmp/cc3rNxot.s:1178   .text.USBD_LL_OpenEP:0000000000000000 USBD_LL_OpenEP
     /tmp/cc3rNxot.s:1229   .text.USBD_LL_OpenEP:0000000000000044 $d
     /tmp/cc3rNxot.s:1233   .text.USBD_LL_OpenEP:0000000000000054 $t
     /tmp/cc3rNxot.s:1281   .text.USBD_LL_CloseEP:0000000000000000 $t
     /tmp/cc3rNxot.s:1288   .text.USBD_LL_CloseEP:0000000000000000 USBD_LL_CloseEP
     /tmp/cc3rNxot.s:1332   .text.USBD_LL_CloseEP:0000000000000034 $d
     /tmp/cc3rNxot.s:1336   .text.USBD_LL_CloseEP:0000000000000044 $t
ARM GAS  /tmp/cc3rNxot.s 			page 59


     /tmp/cc3rNxot.s:1384   .text.USBD_LL_FlushEP:0000000000000000 $t
     /tmp/cc3rNxot.s:1391   .text.USBD_LL_FlushEP:0000000000000000 USBD_LL_FlushEP
     /tmp/cc3rNxot.s:1435   .text.USBD_LL_FlushEP:0000000000000034 $d
     /tmp/cc3rNxot.s:1439   .text.USBD_LL_FlushEP:0000000000000044 $t
     /tmp/cc3rNxot.s:1487   .text.USBD_LL_StallEP:0000000000000000 $t
     /tmp/cc3rNxot.s:1494   .text.USBD_LL_StallEP:0000000000000000 USBD_LL_StallEP
     /tmp/cc3rNxot.s:1538   .text.USBD_LL_StallEP:0000000000000034 $d
     /tmp/cc3rNxot.s:1542   .text.USBD_LL_StallEP:0000000000000044 $t
     /tmp/cc3rNxot.s:1590   .text.USBD_LL_ClearStallEP:0000000000000000 $t
     /tmp/cc3rNxot.s:1597   .text.USBD_LL_ClearStallEP:0000000000000000 USBD_LL_ClearStallEP
     /tmp/cc3rNxot.s:1641   .text.USBD_LL_ClearStallEP:0000000000000034 $d
     /tmp/cc3rNxot.s:1645   .text.USBD_LL_ClearStallEP:0000000000000044 $t
     /tmp/cc3rNxot.s:1693   .text.USBD_LL_IsStallEP:0000000000000000 $t
     /tmp/cc3rNxot.s:1700   .text.USBD_LL_IsStallEP:0000000000000000 USBD_LL_IsStallEP
     /tmp/cc3rNxot.s:1768   .text.USBD_LL_SetUSBAddress:0000000000000000 $t
     /tmp/cc3rNxot.s:1775   .text.USBD_LL_SetUSBAddress:0000000000000000 USBD_LL_SetUSBAddress
     /tmp/cc3rNxot.s:1819   .text.USBD_LL_SetUSBAddress:0000000000000034 $d
     /tmp/cc3rNxot.s:1823   .text.USBD_LL_SetUSBAddress:0000000000000044 $t
     /tmp/cc3rNxot.s:1871   .text.USBD_LL_Transmit:0000000000000000 $t
     /tmp/cc3rNxot.s:1878   .text.USBD_LL_Transmit:0000000000000000 USBD_LL_Transmit
     /tmp/cc3rNxot.s:1926   .text.USBD_LL_Transmit:000000000000003c $d
     /tmp/cc3rNxot.s:1930   .text.USBD_LL_Transmit:000000000000004c $t
     /tmp/cc3rNxot.s:1978   .text.USBD_LL_PrepareReceive:0000000000000000 $t
     /tmp/cc3rNxot.s:1985   .text.USBD_LL_PrepareReceive:0000000000000000 USBD_LL_PrepareReceive
     /tmp/cc3rNxot.s:2033   .text.USBD_LL_PrepareReceive:000000000000003c $d
     /tmp/cc3rNxot.s:2037   .text.USBD_LL_PrepareReceive:000000000000004c $t
     /tmp/cc3rNxot.s:2085   .text.USBD_LL_GetRxDataSize:0000000000000000 $t
     /tmp/cc3rNxot.s:2092   .text.USBD_LL_GetRxDataSize:0000000000000000 USBD_LL_GetRxDataSize
     /tmp/cc3rNxot.s:2135   .text.HAL_PCDEx_LPM_Callback:0000000000000000 $t
     /tmp/cc3rNxot.s:2142   .text.HAL_PCDEx_LPM_Callback:0000000000000000 HAL_PCDEx_LPM_Callback
     /tmp/cc3rNxot.s:2231   .text.HAL_PCDEx_LPM_Callback:0000000000000068 $d
     /tmp/cc3rNxot.s:2236   .text.USBD_LL_Delay:0000000000000000 $t
     /tmp/cc3rNxot.s:2243   .text.USBD_LL_Delay:0000000000000000 USBD_LL_Delay
     /tmp/cc3rNxot.s:2278   .text.USBD_static_malloc:0000000000000000 $t
     /tmp/cc3rNxot.s:2285   .text.USBD_static_malloc:0000000000000000 USBD_static_malloc
     /tmp/cc3rNxot.s:2322   .text.USBD_static_malloc:0000000000000018 $d
     /tmp/cc3rNxot.s:2402   .bss.mem.10994:0000000000000000 mem.10994
     /tmp/cc3rNxot.s:2327   .text.USBD_static_free:0000000000000000 $t
     /tmp/cc3rNxot.s:2334   .text.USBD_static_free:0000000000000000 USBD_static_free
     /tmp/cc3rNxot.s:2370   .text.SystemClockConfig_Resume:0000000000000000 $t
     /tmp/cc3rNxot.s:2399   .bss.mem.10994:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_NVIC_DisableIRQ
USBD_LL_SetupStage
USBD_LL_DataOutStage
USBD_LL_DataInStage
USBD_LL_SOF
Error_Handler
USBD_LL_SetSpeed
USBD_LL_Reset
USBD_LL_Suspend
USBD_LL_Resume
USBD_LL_IsoOUTIncomplete
USBD_LL_IsoINIncomplete
ARM GAS  /tmp/cc3rNxot.s 			page 60


USBD_LL_DevConnected
USBD_LL_DevDisconnected
HAL_PWREx_EnableVddUSB
HAL_PCD_Init
HAL_PCDEx_PMAConfig
HAL_PCD_DeInit
HAL_PCD_Start
HAL_PCD_Stop
HAL_PCD_EP_Open
HAL_PCD_EP_Close
HAL_PCD_EP_Flush
HAL_PCD_EP_SetStall
HAL_PCD_EP_ClrStall
HAL_PCD_SetAddress
HAL_PCD_EP_Transmit
HAL_PCD_EP_Receive
HAL_PCD_EP_GetRxCount
HAL_Delay
SystemClock_Config
